
import { Router } from 'express';
import { asyncHandler } from '../middleware/error-handler';
import { authenticateToken, requireRole } from '../middleware/auth';

const router = Router();

// Route pour forcer la cr√©ation des tables manquantes
router.post('/force-init', authenticateToken, requireRole('directeur'), asyncHandler(async (req, res) => {
  try {
    console.log('üîÑ Initialisation forc√©e de la base de donn√©es...');
    
    // Importation dynamique du module de base de donn√©es
    const { getDb } = await import('../db');
    const db = await getDb();
    
    // V√©rification que les tables existent
    const tables = await db.execute(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
    `);
    
    console.log('üìã Tables existantes:', tables.rows?.map(t => t.table_name) || []);
    
    res.json({ 
      message: 'V√©rification de la base de donn√©es termin√©e',
      tables: tables.rows?.map(t => t.table_name) || [],
      status: 'success'
    });
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation forc√©e:', error);
    res.status(500).json({ 
      message: 'Erreur lors de l\'initialisation', 
      error: error.message,
      status: 'error'
    });
  }
}));

// Route pour recr√©er les tables SQLite si n√©cessaire
router.post('/recreate-tables', authenticateToken, requireRole('directeur'), asyncHandler(async (req, res) => {
  try {
    console.log('üîÑ Recr√©ation des tables SQLite...');
    
    // Ex√©cuter le script de setup universel
    const { execSync } = await import('child_process');
    const result = execSync('node setup-universal.js', { encoding: 'utf8' });
    
    console.log('‚úÖ Tables recr√©√©es avec succ√®s');
    
    res.json({ 
      message: 'Tables recr√©√©es avec succ√®s',
      output: result,
      status: 'success'
    });
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la recr√©ation des tables:', error);
    res.status(500).json({ 
      message: 'Erreur lors de la recr√©ation des tables', 
      error: error.message,
      status: 'error'
    });
  }
}));

export default router;
