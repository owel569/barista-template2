

client/src/components/admin/permissions-management-improved.tsx:683:69 - error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

683                                         checked={user.permissions?.[module as ModuleName]?.view ?? false}
                                                                        ~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/permissions-management-improved.tsx:694:69 - error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

694                                         checked={user.permissions?.[module as ModuleName]?.edit ?? false}
                                                                        ~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/permissions-management-improved.tsx:706:71 - error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

706                                           checked={user.permissions?.[module as ModuleName]?.admin ?? false}
                                                                          ~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/permissions-management.tsx:435:69 - error TS2322: Type '"directeur" | "employe"' is not assignable to type '"employe"'.
  Type '"directeur"' is not assignable to type '"employe"'.

435                   onValueChange={(value) => setNewUser({...newUser, role: value as 'directeur' | 'employe'})}
                                                                        ~~~~

client/src/components/admin/real-time-updates.tsx:249:20 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ order: string[]; reservation: string[]; payment: string[]; customer: string[]; system: string[]; }'.

249     const titles = mockEvents[type];
                       ~~~~~~~~~~~~~~~~

client/src/components/admin/reports-system.tsx:107:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

107       icon: BarChart3
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:116:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

116       icon: Users
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:125:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

125       icon: FileText
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:134:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

134       icon: DollarSign
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:143:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

143       icon: TrendingUp
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/settings.tsx:135:44 - error TS2554: Expected 0 arguments, but got 1.

135   const { hasPermission } = usePermissions(user);
                                               ~~~~

client/src/components/admin/settings.tsx:233:27 - error TS2538: Type 'undefined' cannot be used as an index type.

233         current = current[keys[i]];
                           