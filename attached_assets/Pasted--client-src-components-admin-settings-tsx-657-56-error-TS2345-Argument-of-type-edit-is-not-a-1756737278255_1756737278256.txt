
client/src/components/admin/settings.tsx:657:56 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

657                   disabled={!hasPermission('settings', 'edit')}
                                                           ~~~~~~

client/src/components/admin/settings.tsx:670:56 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

670                   disabled={!hasPermission('settings', 'edit')}
                                                           ~~~~~~

client/src/components/admin/settings.tsx:691:21 - error TS2322: Type '{ selectedDates: Date[]; onSelectDate: (date: any) => void; onRemoveDate: (date: any) => void; disabled: boolean; }' is not assignable to type 'IntrinsicAttributes & DayPickerComponentProps'.
  Property 'selectedDates' does not exist on type 'IntrinsicAttributes & DayPickerComponentProps'.

691                     selectedDates={draftSettings.specialDates.closedDates.map(d => new Date(d))}
                        ~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:692:36 - error TS7006: Parameter 'date' implicitly has an 'any' type.

692                     onSelectDate={(date) => addClosedDate(date)}
                                       ~~~~

client/src/components/admin/settings.tsx:693:36 - error TS7006: Parameter 'date' implicitly has an 'any' type.

693                     onRemoveDate={(date) => removeClosedDate(date.toISOString().split('T')[0])}
                                       ~~~~

client/src/components/admin/settings.tsx:694:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

694                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:705:54 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

705                           {hasPermission('settings', 'edit') && (
                                                         ~~~~~~

client/src/components/admin/settings.tsx:729:52 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

729                         {hasPermission('settings', 'edit') && (
                                                       ~~~~~~

client/src/components/admin/settings.tsx:748:33 - error TS2322: Type '{ closed: boolean; open?: string; close?: string; }' is not assignable to type 'OpeningHours'.
  Property 'open' is optional in type '{ closed: boolean; open?: string; close?: string; }' but required in type 'OpeningHours'.

748                                 openingHours: {
                                    ~~~~~~~~~~~~

  client/src/components/admin/settings.tsx:71:7
    71       openingHours: OpeningHours;
             ~~~~~~~~~~~~
    The expected type comes from property 'openingHours' which is declared here on type '{ date: string; openingHours: OpeningHours; note: string; }'

client/src/components/admin/settings.tsx:762:64 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

762                           disabled={!hasPermission('settings', 'edit')}
                                                                   ~~~~~~

client/src/components/admin/settings.tsx:777:35 - error TS2322: Type '{ open: string; close?: string; closed?: boolean; }' is not assignable to type 'OpeningHours'.
  Property 'close' is optional in type '{ open: string; close?: string; closed?: boolean; }' but required in type 'OpeningHours'.

777                                   openingHours: {
                                      ~~~~~~~~~~~~

  client/src/components/admin/settings.tsx:71:7
    71       openingHours: OpeningHours;
             ~~~~~~~~~~~~
    The expected type comes from property 'openingHours' which is declared here on type '{ date: string; openingHours: OpeningHours; note: string; }'

client/src/components/admin/settings.tsx:791:66 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

791                             disabled={!hasPermission('settings', 'edit')}
                                                                     ~~~~~~

client/src/components/admin/settings.tsx:803:35 - error TS2322: Type '{ close: string; open?: string; closed?: boolean; }' is not assignable to type 'OpeningHours'.
  Property 'open' is optional in type '{ close: string; open?: string; closed?: boolean; }' but required in type 'OpeningHours'.

803                                   openingHours: {
                                      ~~~~~~~~~~~~

  client/src/components/admin/settings.tsx:71:7
    71       openingHours: OpeningHours;
             ~~~~~~~~~~~~
    The expected type comes from property 'openingHours' which is declared here on type '{ date: string; openingHours: OpeningHours; note: string; }'

client/src/components/admin/settings.tsx:817:66 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

817                             disabled={!hasPermission('settings', 'edit')}
                                                                     ~~~~~~

client/src/components/admin/settings.tsx:832:33 - error TS2322: Type '{ open?: string; close?: string; closed?: boolean; }' is not assignable to type 'OpeningHours'.
  Property 'open' is optional in type '{ open?: string; close?: string; closed?: boolean; }' but required in type 'OpeningHours'.

832                                 openingHours: {
                                    ~~~~~~~~~~~~

  client/src/components/admin/settings.tsx:71:7
    71       openingHours: OpeningHours;
             ~~~~~~~~~~~~
    The expected type comes from property 'openingHours' which is declared here on type '{ date: string; openingHours: OpeningHours; note: string; }'

client/src/components/admin/settings.tsx:845:64 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

845                           disabled={!hasPermission('settings', 'edit')}
                                                                   ~~~~~~

client/src/components/admin/settings.tsx:857:25 - error TS2322: Type '{ onSelectDate: (date: any) => void; disabled: boolean; excludeDates: Date[]; }' is not assignable to type 'IntrinsicAttributes & DayPickerComponentProps'.
  Property 'onSelectDate' does not exist on type 'IntrinsicAttributes & DayPickerComponentProps'.

857                         onSelectDate={(date) => {
                            ~~~~~~~~~~~~

client/src/components/admin/settings.tsx:857:40 - error TS7006: Parameter 'date' implicitly has an 'any' type.

857                         onSelectDate={(date) => {
                                           ~~~~

client/src/components/admin/settings.tsx:863:62 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

863                         disabled={!hasPermission('settings', 'edit')}
                                                                 ~~~~~~

client/src/components/admin/staff-scheduling.tsx:129:13 - error TS2322: Type '{ id: number; firstName: string | undefined; lastName: string | undefined; email: string; phone: string; position: string | undefined; department: string | undefined; maxHours: number; ... 6 more ...; avatar: string; }[]' is not assignable to type 'Employee[]'.
  Type '{ id: number; firstName: string | undefined; lastName: string | undefined; email: string; phone: string; position: string | undefined; department: string | undefined; maxHours: number; ... 6 more ...; avatar: string; }' is not assignable to type 'Employee'.
    Types of property 'firstName' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'.

129       const mockEmployees: Employee[] = Array.from({ length: 12 }, (_, i) => ({
                ~~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:166:13 - error TS2322: Type '{ id: number; employeeId: number; date: string | undefined; startTime: string; endTime: string; position: string | undefined; status: any; notes: string | undefined; createdAt: string; updatedAt: string; }[]' is not assignable to type 'Shift[]'.
  Type '{ id: number; employeeId: number; date: string | undefined; startTime: string; endTime: string; position: string | undefined; status: any; notes: string | undefined; createdAt: string; updatedAt: string; }' is not assignable to type 'Shift' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'date' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'.

166       const mockShifts: Shift[] = Array.from({ length: 30 }, (_, i) => {
                ~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:168:31 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'Date | undefined' is not assignable to parameter of type 'string | number | Date'.
      Type 'undefined' is not assignable to type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'Date | undefined' is not assignable to parameter of type 'string | number'.
      Type 'undefined' is not assignable to type 'string | number'.

168         const date = new Date(weekStart);
                                  ~~~~~~~~~


client/src/components/admin/staff-scheduling.tsx:256:13 - error TS18048: 'endHours' is possibly 'undefined'.

256     return (endHours - startHours) + (endMinutes - startMinutes) / 60;
                ~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:256:24 - error TS18048: 'startHours' is possibly 'undefined'.

256     return (endHours - startHours) + (endMinutes - startMinutes) / 60;
                           ~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:256:39 - error TS18048: 'endMinutes' is possibly 'undefined'.

256     return (endHours - startHours) + (endMinutes - startMinutes) / 60;
                                          ~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:256:52 - error TS18048: 'startMinutes' is possibly 'undefined'.

256     return (endHours - startHours) + (endMinutes - startMinutes) / 60;
                                                       ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:285:7 - error TS2532: Object is possibly 'undefined'.

285       shiftsByEmployee[shift.employeeId].push(shift);
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:295:13 - error TS18048: 'prevShift' is possibly 'undefined'.

295         if (prevShift.date === currentShift.date &&
                ~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:295:32 - error TS18048: 'currentShift' is possibly 'undefined'.

295         if (prevShift.date === currentShift.date &&
                                   ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:296:13 - error TS18048: 'prevShift' is possibly 'undefined'.

296             prevShift.endTime > currentShift.startTime) {
                ~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:296:33 - error TS18048: 'currentShift' is possibly 'undefined'.

296             prevShift.endTime > currentShift.startTime) {
                                    ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:301:22 - error TS18048: 'currentShift' is possibly 'undefined'.

301             shiftId: currentShift.id,
                         ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:317:20 - error TS2532: Object is possibly 'undefined'.

317           shiftId: empShifts[0].id,