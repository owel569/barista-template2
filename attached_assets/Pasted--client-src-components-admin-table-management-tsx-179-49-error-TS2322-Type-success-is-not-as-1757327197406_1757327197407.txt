
client/src/components/admin/table-management.tsx:179:49 - error TS2322: Type '"success"' is not assignable to type '"default" | "destructive"'.

179       toast({ title: "Table créée avec succès", variant: "success" });
                                                    ~~~~~~~

  client/src/hooks/use-toast.ts:12:3
    12   variant?: "default" | "destructive"
         ~~~~~~~
    The expected type comes from property 'variant' which is declared here on type 'Toast'

client/src/components/admin/table-management.tsx:188:7 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(endpoint: string, options?: RequestInit | undefined): Promise<any>', gave the following error.
    Object literal may only specify known properties, and 'data' does not exist in type 'RequestInit'.
  Overload 2 of 2, '(method: "POST" | "PATCH" | "PUT" | "GET" | "DELETE", endpoint: string, options?: RequestInit | undefined): Promise<any>', gave the following error.
    Argument of type '`/api/admin/tables/${number}`' is not assignable to parameter of type '"POST" | "PATCH" | "PUT" | "GET" | "DELETE"'.

188       apiRequest(`/api/admin/tables/${id}`, { method: 'PUT', data }),
          ~~~~~~~~~~


client/src/components/admin/table-management.tsx:191:43 - error TS2322: Type '"success"' is not assignable to type '"default" | "destructive"'.

191       toast({ title: "Table mise à jour", variant: "success" });
                                              ~~~~~~~

  client/src/hooks/use-toast.ts:12:3
    12   variant?: "default" | "destructive"
         ~~~~~~~
    The expected type comes from property 'variant' which is declared here on type 'Toast'

client/src/components/admin/table-management.tsx:197:7 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(endpoint: string, options?: RequestInit | undefined): Promise<any>', gave the following error.
    Object literal may only specify known properties, and 'data' does not exist in type 'RequestInit'.
  Overload 2 of 2, '(method: "POST" | "PATCH" | "PUT" | "GET" | "DELETE", endpoint: string, options?: RequestInit | undefined): Promise<any>', gave the following error.
    Argument of type '`/api/admin/tables/${number}/status`' is not assignable to parameter of type '"POST" | "PATCH" | "PUT" | "GET" | "DELETE"'.

197       apiRequest(`/api/admin/tables/${id}/status`, { method: 'PUT', data: { status } }),
          ~~~~~~~~~~


client/src/components/admin/table-management.tsx:200:43 - error TS2322: Type '"success"' is not assignable to type '"default" | "destructive"'.

200       toast({ title: "Statut mis à jour", variant: "success" });
                                              ~~~~~~~

  client/src/hooks/use-toast.ts:12:3
    12   variant?: "default" | "destructive"
         ~~~~~~~
    The expected type comes from property 'variant' which is declared here on type 'Toast'

client/src/components/admin/table-management.tsx:237:32 - error TS2379: Argument of type '{ number: number; shape: "round" | "square" | "rectangle"; location: "terrace" | "private_room" | "bar" | "main_floor"; capacity: number; notes?: string | undefined; isVip?: boolean | undefined; }' is not assignable to parameter of type 'Omit<RestaurantTable, "id">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ number: number; shape: "round" | "square" | "rectangle"; location: "terrace" | "private_room" | "bar" | "main_floor"; capacity: number; notes?: string | undefined; isVip?: boolean | undefined; }' is missing the following properties from type 'Omit<RestaurantTable, "id">': status, position

237     createTableMutation.mutate(data);
                                   ~~~~

client/src/components/admin/table-management.tsx:394:28 - error TS2375: Type '{ checked: boolean | undefined; onCheckedChange: (...event: any[]) => void; }' is not assignable to type 'SwitchProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

394                           <Switch checked={field.value} onCheckedChange={field.onChange} />
                               ~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:210:34 - error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'string'.

210       const message = JSON.parse(lastMessage.data);
                                     ~~~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:480:7 - error TS2448: Block-scoped variable 'paginatedUsers' used before its declaration.

480   }, [paginatedUsers, selectedUsers.length]);
          ~~~~~~~~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:527:9
    527   const paginatedUsers = sortedUsers.slice(
                ~~~~~~~~~~~~~~
    'paginatedUsers' is declared here.

client/src/components/admin/user-profile-enhanced-optimized.tsx:480:7 - error TS2454: Variable 'paginatedUsers' is used before being assigned.

480   }, [paginatedUsers, selectedUsers.length]);
          ~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:484:5 - error TS2353: Object literal may only specify known properties, and 'content' does not exist in type 'UseReactToPrintOptions'.

484     content: () => printRef.current,
        ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:595:7 - error TS2375: Type '{ firstName: string; lastName: string; preferences: { allergens: string[]; currency: string; language: string; emailNotifications: boolean; smsNotifications: boolean; promotionalEmails: boolean; dietaryRestrictions: string[]; favoriteTable?: number | undefined; }; ... 5 more ...; postalCode?: string | undefined; }' is not assignable to type 'Partial<UserProfile>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'email' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

595       updates: values
          ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:308:44
    308     mutationFn: async (data: { id: number; updates: Partial<UserProfile> }) => {
                                                   ~~~~~~~
    The expected type comes from property 'updates' which is declared here on type '{ id: number; updates: Partial<UserProfile>; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:605:9 - error TS2375: Type '{ type: "other" | "home" | "work"; city: string; country: string; street: string; postalCode: string; isDefault?: boolean | undefined; }' is not assignable to type 'Partial<Address>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'isDefault' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

605         updates: values
            ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:353:51
    353     mutationFn: async (data: { addressId: number; updates: Partial<Address> }) => {
                                                          ~~~~~~~
    The expected type comes from property 'updates' which is declared here on type '{ addressId: number; updates: Partial<Address>; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:610:9 - error TS2322: Type '{ type: "other" | "home" | "work"; city: string; country: string; street: string; postalCode: string; isDefault?: boolean | undefined; }' is not assignable to type 'Omit<Address, "id">'.
  Types of property 'isDefault' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

610         address: values
            ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:334:48
    334     mutationFn: async (data: { userId: number; address: Omit<Address, 'id'> }) => {
                                                       ~~~~~~~
    The expected type comes from property 'address' which is declared here on type '{ userId: number; address: Omit<Address, "id">; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:656:36 - error TS2339: Property 'canImport' does not exist on type '{ permissions: Permission[]; userRole: UserRole | null; loading: boolean; error: string | null; hasPermission: (module: string, action: string) => boolean; canView: (module: ModuleName) => boolean; ... 9 more ...; getUserAccessLevel: () => "admin" | ... 2 more ... | "basic"; }'.

656             disabled={!permissions.canImport || isImporting}
                       