node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam:...'.

119       query = query.where(and(...conditions));
          ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:402:5
    402     where(where: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined): PgSelectWithout<this, TDynamic, 'where'>;
            ~~~~~
    'where' is declared here.

server/routes/orders/orders.routes.ts:123:59 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

123     const orderColumn = sortBy === 'totalAmount' ? orders.totalAmount :
                                                              ~~~~~~~~~~~

server/routes/orders/orders.routes.ts:128:5 - error TS2741: Property 'orderBy' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"orders", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam:...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"orders", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam:...'.

128     query = sortOrder === 'desc' ?
        ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:471:5
    471     orderBy(builder: (aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>): PgSelectWithout<this, TDynamic, 'orderBy'>;
            ~~~~~~~
    'orderBy' is declared here.

server/routes/orders/orders.routes.ts:157:16 - error TS2538: Type 'null' cannot be used as an index type.

157       if (!acc[item.orderId]) {
                   ~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:158:13 - error TS2538: Type 'null' cannot be used as an index type.

158         acc[item.orderId] = [];
                ~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:160:11 - error TS2538: Type 'null' cannot be used as an index type.

160       acc[item.orderId].push(item);
              ~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:171:14 - error TS2339: Property 'count' does not exist on type '{ count: number; } | undefined'.

171     const [{ count }] = await db
                 ~~~~~

server/routes/orders/orders.routes.ts:199:16 - error TS7030: Not all code paths return a value.

199   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:210:26 - error TS2339: Property 'subtotal' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

210         subtotal: orders.subtotal,
                             ~~~~~~~~

server/routes/orders/orders.routes.ts:211:21 - error TS2339: Property 'tax' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

211         tax: orders.tax,
                        ~~~

server/routes/orders/orders.routes.ts:212:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

212         totalAmount: orders.totalAmount,
                                ~~~~~~~~~~~

server/routes/orders/orders.routes.ts:224:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

224       .where(eq(orders.id, id));
                 ~~


server/routes/orders/orders.routes.ts:248:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "order_id"; tableName: "order_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "order_id"; tableName: "order_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "order_id"; tableName: "order_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "order_id"; tableName: "order_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

248       .where(eq(orderItems.orderId, id));
                 ~~


server/routes/orders/orders.routes.ts:267:16 - error TS7030: Not all code paths return a value.

267   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:272:44 - error TS7006: Parameter 'item' implicitly has an 'any' type.

272     const menuItemIds = orderItemsData.map(item => item.menuItemId);
                                               ~~~~

server/routes/orders/orders.routes.ts:290:48 - error TS7006: Parameter 'item' implicitly has an 'any' type.

290     const itemsWithPrices = orderItemsData.map(item => {
                                                   ~~~~

server/routes/orders/orders.routes.ts:296:26 - error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

296       const totalPrice = menuItem.price * item.quantity;
                             ~~~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:326:52 - error TS7006: Parameter 'item' implicitly has an 'any' type.

326     const orderItemsToInsert = itemsWithPrices.map(item => ({
                                                       ~~~~

server/routes/orders/orders.routes.ts:327:16 - error TS18048: 'newOrder' is possibly 'undefined'.

327       orderId: newOrder.id,
                   ~~~~~~~~

server/routes/orders/orders.routes.ts:339:16 - error TS18048: 'newOrder' is possibly 'undefined'.

339       orderId: newOrder.id,
                   ~~~~~~~~

server/routes/orders/orders.routes.ts:359:37 - error TS2322: Type '"staff"' is not assignable to type 'AppRole'.

359   requireRoles(['admin', 'manager', 'staff']),
                                        ~~~~~~~

server/routes/orders/orders.routes.ts:363:16 - error TS7030: Not all code paths return a value.

363   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:374:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

374       .where(eq(orders.id, id))
                 ~~


server/routes/orders/orders.routes.ts:414:48 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

414         totalRevenue: sql<number>`sum(${orders.totalAmount})`
                                                   ~~~~~~~~~~~

server/routes/permissions.routes.ts:8:74 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

8 router.get('/users/:userId/permissions', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                           ~~~~~~~~~~~

server/routes/permissions.routes.ts:25:74 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

25 router.put('/users/:userId/permissions', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                            ~~~~~~~~~~~

server/routes/permissions.routes.ts:43:69 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

43 router.put('/users/:userId/status', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                       ~~~~~~~~~~~

server/routes/permissions.routes.ts:61:58 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

61 router.get('/available', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                            ~~~~~~~~~~~

server/routes/permissions.routes.ts:136:47 - error TS7030: Not all code paths return a value.

136 router.get('/user/:userId', authenticateUser, async (req, res) => {
                                                  ~~~~~~~~~~~~~~~~~~~~~

server/routes/permissions.routes.ts:161:61 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

161 router.put('/user/:userId', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                ~~~~~~~~~~~

server/routes/permissions.routes.ts:161:76 - error TS7030: Not all code paths return a value.

161 router.put('/user/:userId', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                               ~~~~~~~~~~~~~~~~~~~~~

server/routes/permissions.routes.ts:192:54 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

192 router.get('/roles', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                         ~~~~~~~~~~~

server/routes/permissions.ts:19:65 - error TS2307: Cannot find module '@custom-types' or its corresponding type declarations.

19 import type { Permission, ApiResponse, PaginatedResponse } from '@custom-types';
                                                                   ~~~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:71:7 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'number | SQL<unknown> | Placeholder<string, any> | null | undefined'.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]'.

71       userId: userId.toString(),
         ~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:28:101
     28 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     29     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ... 
     35     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     36 } & {};
        ~
    The expected type comes from property 'userId' which is declared here on type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }'

server/routes/tables/tables.routes.ts:141:7 - error TS2740: Type 'Omit<PgSelectBase<"tables", { id: PgColumn<{ name: "id"; tableName: "tables"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColu...' is missing the following properties from type 'PgSelectBase<"tables", { id: PgColumn<{ name: "id"; tableName: "tables"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<.....': config, joinsNotNullableMap, tableName, isPartialSelect, and 5 more.

141       query = query.where(and(...conditions));
          ~~~~~

server/routes/tables/tables.routes.ts:151:5 - error TS2740: Type 'Omit<PgSelectBase<"tables", { id: PgColumn<{ name: "id"; tableName: "tables"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColu...' is missing the following properties from type 'PgSelectBase<"tables", { id: PgColumn<{ name: "id"; tableName: "tables"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<.....': config, joinsNotNullableMap, tableName, isPartialSelect, and 5 more.

151     query = sortOrder === 'desc' ?
        ~~~~~

server/routes/tables/tables.routes.ts:158:21 - error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

158     const offset = (pageNum - 1) * limitNum;
                        ~~~~~~~

server/routes/tables/tables.routes.ts:158:36 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

158     const offset = (pageNum - 1) * limitNum;
                                       ~~~~~~~~

server/routes/tables/tables.routes.ts:159:42 - error TS2345: Argument of type 'number | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | Placeholder<string, any>'.
  Type 'string[]' is not assignable to type 'number | Placeholder<string, any>'.

159     const tablesData = await query.limit(limitNum).offset(offset);
                                             ~~~~~~~~

server/routes/tables/tables.routes.ts:162:14 - error TS2339: Property 'count' does not exist on type '{ count: number; } | undefined'.

162     const [{ count }] = await db
                 ~~~~~

server/routes/tables/tables.routes.ts:180:39 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

180         totalPages: Math.ceil(count / limit)
                                          ~~~~~

server/routes/tables/tables.routes.ts:256:11 - error TS2322: Type '{ id: number; number: number; capacity: number; location: string | null; section: string | null; status: "maintenance" | "available" | "occupied" | "reserved"; currentReservation: { ...; } | undefined; nextReservation: { ...; } | undefined; }[]' is not assignable to type 'TableStatus[]'.
  Type '{ id: number; number: number; capacity: number; location: string | null; section: string | null; status: "maintenance" | "available" | "occupied" | "reserved"; currentReservation: { ...; } | undefined; nextReservation: { ...; } | undefined; }' is not assignable to type 'TableStatus' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'location' are incompatible.
      Type 'string | null' is not assignable to type 'string'.
        Type 'null' is not assignable to type 'string'.

256     const tableStatuses: TableStatus[] = allTables.map(table => {
              ~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:354:7 - error TS18048: 'newTable' is possibly 'undefined'.

354       newTable.id.toString()
          ~~~~~~~~

server/routes/tables/tables.routes.ts:358:16 - error TS18048: 'newTable' is possibly 'undefined'.

358       tableId: newTable.id,
                   ~~~~~~~~

server/routes/tables/tables.routes.ts:383:25 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

383     const id = parseInt(req.params.id, 10);
                            ~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:392:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

392       return res.status(404).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:409:9 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

409         return res.status(409).json({
            ~~~~~~

server/routes/tables/tables.routes.ts:430:30 - error TS18048: 'updatedTable' is possibly 'undefined'.

430       `Table mise à jour: #${updatedTable.number} - ${Object.keys(req.body).join(', ')}`,
                                 ~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:432:7 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

432       id
          ~~

server/routes/tables/tables.routes.ts:459:25 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

459     const id = parseInt(req.params.id, 10);
                            ~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:469:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

469       return res.status(404).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:480:9 - error TS2353: Object literal may only specify known properties, and 'notes' does not exist in type '{ number?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; capacity?: number | SQL<...> | PgColumn<...> | undefined; ... 8 more ...; features?: unknown; }'.

480         notes,
            ~~~~~

server/routes/tables/tables.routes.ts:492:7 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

492       id
          ~~

server/routes/tables/tables.routes.ts:521:25 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

521     const id = parseInt(req.params.id, 10);
                            ~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:525:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

525       return res.status(400).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:538:30 - error TS2339: Property 'reservationTime' does not exist on type 'PgTableWithColumns<{ name: "reservations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<...>; }; d...'.

538           sql`${reservations.reservationTime} > NOW()`,
                                 ~~~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:545:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

545       return res.status(400).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:562:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

562       return res.status(404).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:574:7 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

574       id
          ~~

server/routes/user-profile.ts:211:7 - error TS2375: Type '{ id: number; username: string; email: string; firstName: string; lastName: string; phone: string | undefined; role: string; isActive: boolean; createdAt: string; updatedAt: string; avatarUrl: undefined; }' is not assignable to type 'UserProfile' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'phone' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

211       return {
          ~~~~~~

server/routes/user-profile.ts:242:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

242         totalAmount: orders.totalAmount,
                                ~~~~~~~~~~~

server/routes/user-profile.ts:280:11 - error TS2532: Object is possibly 'undefined'.

280           itemCounts[item.id].count++;
              ~~~~~~~~~~~~~~~~~~~

server/routes/user-profile.ts:281:43 - error TS2532: Object is possibly 'undefined'.

281           if (new Date(order.createdAt) > itemCounts[item.id].lastOrdered) {
                                              ~~~~~~~~~~~~~~~~~~~

server/routes/user-profile.ts:282:13 - error TS2532: Object is possibly 'undefined'.

282             itemCounts[item.id].lastOrdered = new Date(order.createdAt);
                ~~~~~~~~~~~~~~~~~~~

server/routes/user-profile.ts:349:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

349         totalAmount: orders.totalAmount,
                                ~~~~~~~~~~~

server/routes/user-profile.ts:361:23 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<"orders", { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt: PgColu...'.

361         query = query.where(eq(orders.status, filters.status));
                          ~~~~~

server/routes/user-profile.ts:361:29 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "pending" | "cancelled" | "preparing" | "ready" | "delivered"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>, right: "pending" | ... 4 more ... | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '"pending" | "cancelled" | "preparing" | "ready" | "delivered" | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "pending" | "cancelled" | "preparing" | "ready" | "delivered"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "pending" | "cancelled" | "preparing" | "ready" | "delivered"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "pending" | "cancelled" | "preparing" | "ready" | "delivered"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

361         query = query.where(eq(orders.status, filters.status));
                                ~~


server/routes/user-profile.ts:365:23 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<"orders", { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt: PgColu...'.

365         query = query.where(gte(orders.createdAt, new Date(filters.from)));
                          ~~~~~

server/routes/user-profile.ts:369:23 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<"orders", { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt: PgColu...'.

369         query = query.where(lte(orders.createdAt, new Date(filters.to)));
                          ~~~~~

server/routes/user-profile.ts:403:9 - error TS2322: Type '{ id: number; orderNumber: string; totalAmount: number; status: "pending" | "completed" | "cancelled" | "processing"; items: { id: number; name: string; quantity: number; price: number; specialRequests?: string; }[]; createdAt: string; updatedAt: string; deliveryAddress: { ...; } | undefined; }[]' is not assignable to type 'OrderHistory[]'.
  Type '{ id: number; orderNumber: string; totalAmount: number; status: "pending" | "processing" | "completed" | "cancelled"; items: Array<{ id: number; name: string; quantity: number; price: number; specialRequests?: string; }>; createdAt: string; updatedAt: string; deliveryAddress: { ...; } | undefined; }' is not assignable to type 'OrderHistory' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'deliveryAddress' are incompatible.
      Type '{ id: any; title: any; street: any; city: any; postalCode: any; country: any; } | undefined' is not assignable to type 'Address'.
        Type 'undefined' is not assignable to type 'Address'.

403         orders: ordersWithAddresses.map(order => ({
            ~~~~~~

  server/routes/user-profile.ts:341:15
    341   ): Promise<{orders: OrderHistory[], total: number}> {
                      ~~~~~~
    The expected type comes from property 'orders' which is declared here on type '{ orders: OrderHistory[]; total: number; }'

server/routes/user-profile.ts:494:9 - error TS2740: Type '{ [x: string]: any; }' is missing the following properties from type 'Address': id, title, street, city, and 3 more.

494         address = updated;
            ~~~~~~~

server/routes/user-profile.ts:606:9 - error TS2353: Object literal may only specify known properties, and 'avatarUrl' does not exist in type '{ password?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; email?: string | SQL<unknown> | PgColumn<...> | undefined; ... 10 more ...; updatedAt?: Date | ... 2 more ... | undefined; }'.

606         avatarUrl: avatarUrl ?? null,
            ~~~~~~~~~

server/routes/user-profile.ts:629:32 - error TS2339: Property 'avatarUrl' does not exist on type '{ id: number; email: string; username: string; password: string; firstName: string | null; lastName: string | null; phone: string | null; role: string; isActive: boolean; permissions: string[] | null; lastLoginAt: Date | null; createdAt: Date; updatedAt: Date; }'.

629         avatarUrl: updatedUser.avatarUrl ?? undefined
                                   ~~~~~~~~~

server/routes/user-profile.ts:698:9 - error TS2412: Type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to type 'string | undefined' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

698       { status, from, to }
            ~~~~~~

server/routes/user-profile.ts:698:17 - error TS2412: Type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to type 'string | undefined' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

698       { status, from, to }
                    ~~~~

server/routes/user-profile.ts:698:23 - error TS2412: Type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to type 'string | undefined' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

698       { status, from, to }
                          ~~

server/routes/user-profile.ts:736:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

736       return res.status(401).json({ success: false, message: 'Utilisateur non authentifié' });
          ~~~~~~

server/routes/user-profile.ts:749:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

749       return res.status(400).json({ success: false, message: 'Requête invalide' });
          ~~~~~~

server/routes/user-profile.ts:761:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

761       return res.status(400).json({ success: false, message: 'Requête invalide' });
          ~~~~~~

server/routes/users/users.routes.ts:140:7 - error TS2740: Type 'Omit<PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; lastLoginAt: PgColu...' is missing the following properties from type 'PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; lastLoginAt: PgColumn<.....': config, joinsNotNullableMap, tableName, isPartialSelect, and 5 more.

140       query = query.where(and(...conditions));
          ~~~~~

server/routes/users/users.routes.ts:151:5 - error TS2740: Type 'Omit<PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; lastLoginAt: PgColu...' is missing the following properties from type 'PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; lastLoginAt: PgColumn<.....': config, joinsNotNullableMap, tableName, isPartialSelect, and 5 more.

151     query = sortOrder === 'desc' ?
        ~~~~~

server/routes/users/users.routes.ts:224:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

224       return res.status(404).json({
          ~~~~~~

server/routes/users/users.routes.ts:236:29 - error TS2339: Property 'userId' does not exist on type 'PgTableWithColumns<{ name: "customers"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "customers"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColu...'.

236         .where(eq(customers.userId, id));
                                ~~~~~~

server/routes/users/users.routes.ts:286:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

286       return res.status(409).json({
          ~~~~~~

server/routes/users/users.routes.ts:320:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { email: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<...>; ... 8 more ...; lastVisit?: Date | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to type 'number | SQL<unknown> | Placeholder<string, any> | undefined'.
  Overload 2 of 2, '(values: { email: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<...>; ... 8 more ...; lastVisit?: Date | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '{ email: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<...>; ... 8 more ...; lastVisit?: Date | ... 3 more ... | undefined; }[]'.

320         id: crypto.randomUUID(),
            ~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:28:101
     28 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     29     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ... 
     35     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     36 } & {};
        ~
    The expected type comes from property 'id' which is declared here on type '{ email: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<...>; ... 8 more ...; lastVisit?: Date | ... 3 more ... | undefined; }'

server/routes/users/users.routes.ts:385:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

385       return res.status(404).json({
          ~~~~~~

server/routes/users/users.routes.ts:402:9 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

402         return res.status(409).json({
            ~~~~~~

server/routes/users/users.routes.ts:429:9 - error TS18048: 'updatedUser' is possibly 'undefined'.

429     if (updatedUser.role === 'customer') {
            ~~~~~~~~~~~

server/routes/users/users.routes.ts:433:11 - error TS2322: Type 'string | null' is not assignable to type 'string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.
  Type 'null' is not assignable to type 'string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.

433           firstName: updatedUser.firstName,
              ~~~~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/update.d.ts:27:57
    27 export type PgUpdateSetSource<TTable extends PgTable> = {
                                                               ~
    28     [Key in keyof TTable['$inferInsert']]?: GetColumnData<TTable['_']['columns'][Key]> | SQL | PgColumn | undefined;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    29 } & {};
       ~
    The expected type comes from property 'firstName' which is declared here on type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; firstName?: string | SQL<...> | PgColumn<...> | undefined; ... 9 more ...; lastVisit?: Date | ... 3 more ... | undefined; }'

server/routes/users/users.routes.ts:433:22 - error TS18048: 'updatedUser' is possibly 'undefined'.

433           firstName: updatedUser.firstName,
                         ~~~~~~~~~~~

server/routes/users/users.routes.ts:434:11 - error TS2322: Type 'string | null' is not assignable to type 'string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.
  Type 'null' is not assignable to type 'string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.

434           lastName: updatedUser.lastName,
              ~~~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/update.d.ts:27:57
    27 export type PgUpdateSetSource<TTable extends PgTable> = {
                                                               ~
    28     [Key in keyof TTable['$inferInsert']]?: GetColumnData<TTable['_']['columns'][Key]> | SQL | PgColumn | undefined;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    29 } & {};
       ~
    The expected type comes from property 'lastName' which is declared here on type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; firstName?: string | SQL<...> | PgColumn<...> | undefined; ... 9 more ...; lastVisit?: Date | ... 3 more ... | undefined; }'

server/routes/users/users.routes.ts:434:21 - error TS18048: 'updatedUser' is possibly 'undefined'.

434           lastName: updatedUser.lastName,
                        ~~~~~~~~~~~

server/routes/users/users.routes.ts:435:18 - error TS18048: 'updatedUser' is possibly 'undefined'.

435           email: updatedUser.email,
                     ~~~~~~~~~~~

server/routes/users/users.routes.ts:436:18 - error TS18048: 'updatedUser' is possibly 'undefined'.

436           phone: updatedUser.phone,
                     ~~~~~~~~~~~

server/routes/users/users.routes.ts:439:29 - error TS2339: Property 'userId' does not exist on type 'PgTableWithColumns<{ name: "customers"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "customers"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColu...'.

439         .where(eq(customers.userId, id));
                                ~~~~~~

server/routes/users/users.routes.ts:492:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

492       return res.status(404).json({
          ~~~~~~

server/routes/users/users.routes.ts:499:39 - error TS2304: Cannot find name 'password'.

499     const hashedPassword = await hash(password, 12);
                                          ~~~~~~~~

server/routes/users/users.routes.ts:553:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

553       return res.status(400).json({
          ~~~~~~

server/routes/users/users.routes.ts:574:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

574       return res.status(404).json({
          ~~~~~~

server/routes/users/users.routes.ts:617:34 - error TS2551: Property 'active' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>;...'. Did you mean 'isActive'?

617       .groupBy(users.role, users.active);
                                     ~~~~~~

server/routes/users/users.routes.ts:625:9 - error TS2532: Object is possibly 'undefined'.

625         acc[stat.role].total += stat.count;
            ~~~~~~~~~~~~~~

server/routes/users/users.routes.ts:627:11 - error TS2532: Object is possibly 'undefined'.

627           acc[stat.role].active += stat.count;
              ~~~~~~~~~~~~~~

server/routes/users/users.routes.ts:629:11 - error TS2532: Object is possibly 'undefined'.

629           acc[stat.role].inactive += stat.count;
              ~~~~~~~~~~~~~~

server/services/ai-automation.service.ts:525:33 - error TS2339: Property 'stock' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'.

525         currentStock: menuItems.stock || 0,
                                    ~~~~~

server/services/ai-automation.service.ts:527:80 - error TS2339: Property 'stock' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'.

527         daysRemaining: sql`CASE WHEN AVG(orders.quantity) > 0 THEN ${menuItems.stock || 0} / AVG(orders.quantity) ELSE 999 END`
                                                                                   ~~~~~

server/services/ai-automation.service.ts:530:58 - error TS2339: Property 'stock' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'.

530         .groupBy(menuItems.id, menuItems.name, menuItems.stock)
                                                             ~~~~~

server/services/ai-automation.service.ts:587:29 - error TS2551: Property 'category' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'. Did you mean 'categoryId'?

587         category: menuItems.category,
                                ~~~~~~~~

server/services/ai-automation.service.ts:598:41 - error TS2339: Property 'itemId' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

598         .innerJoin(menuItems, eq(orders.itemId, menuItems.id))
                                            ~~~~~~

server/services/ai-automation.service.ts:599:28 - error TS2551: Property 'category' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'. Did you mean 'categoryId'?

599         .groupBy(menuItems.category)
                               ~~~~~~~~

server/types/auth.ts:26:7 - error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type 'AuthUser | undefined', but here has type 'AuthenticatedUser | undefined'.

26       user?: AuthenticatedUser;
         ~~~~

  server/middleware/auth.ts:415:7
    415       user?: AuthUser;
              ~~~~
    'user' was also declared here.

server/types/auth.ts:89:14 - error TS2741: Property 'staff' is missing in type '{ customer: string[]; waiter: string[]; serveur: string[]; chef: string[]; cuisinier: string[]; employe: string[]; employee: string[]; manager: string[]; directeur: string[]; admin: string[]; }' but required in type 'Record<AppRole, string[]>'.

89 export const ROLE_PERMISSIONS: Record<AppRole, string[]> = {
                ~~~~~~~~~~~~~~~~

server/types/auth.ts:171:14 - error TS2741: Property 'staff' is missing in type '{ customer: number; waiter: number; serveur: number; chef: number; cuisinier: number; employe: number; employee: number; manager: number; directeur: number; admin: number; }' but required in type 'Record<AppRole, number>'.

171 export const ROLE_HIERARCHY: Record<AppRole, number> = {
                 ~~~~~~~~~~~~~~

server/types/auth.ts:187:7 - error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type 'AuthUser | undefined', but here has type 'AuthenticatedUser | undefined'.

187       user?: AuthenticatedUser;
          ~~~~

  server/middleware/auth.ts:415:7
    415       user?: AuthUser;
              ~~~~
    'user' was also declared here.


Found 1018 errors in 127 files.

Errors  Files
     1  client/src/components/admin/delivery-tracking.tsx:345
     2  client/src/components/admin/loyalty-system.tsx:861
     2  client/src/components/admin/maintenance-management.tsx:489
     4  client/src/components/admin/messages.tsx:4
     8  client/src/components/admin/notifications-system.tsx:347
     3  client/src/components/admin/online-ordering.tsx:171
    17  client/src/components/admin/permissions-management-improved.tsx:557
     7  client/src/components/admin/permissions-management.tsx:212
     3  client/src/components/admin/quality-control.tsx:433
    29  client/src/components/admin/real-time-updates.tsx:83
    14  client/src/components/admin/reports-system.tsx:73
     3  client/src/components/admin/reservation-dialog.tsx:135
    56  client/src/components/admin/settings.tsx:21
    25  client/src/components/admin/staff-scheduling.tsx:129
     4  client/src/components/admin/statistics-enhanced.tsx:193
     3  client/src/components/admin/statistics/components/CategoryPieChart.tsx:8
     2  client/src/components/admin/statistics/components/ExportToExcelButton.tsx:6
     2  client/src/components/admin/statistics/components/RevenueChart.tsx:17
     4  client/src/components/admin/suppliers-management.tsx:81
     6  client/src/components/admin/table-management.tsx:151
    25  client/src/components/admin/user-profile-enhanced-optimized.tsx:210
     4  client/src/components/admin/work-schedule.tsx:3
    10  client/src/components/admin/work-schedule/WorkSchedule.tsx:59
    14  client/src/components/admin/work-schedule/components/CalendarView.tsx:41
     1  client/src/components/admin/work-schedule/components/EmployeeOverview.tsx:153
     5  client/src/components/admin/work-schedule/components/StatCard.tsx:185
    25  client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:36
     4  client/src/components/admin/work-schedule/utils/schedule.utils.ts:204
     2  client/src/components/advanced-loyalty.tsx:348
     4  client/src/components/analytics-dashboard.tsx:32
     5  client/src/components/auth/PermissionGuard.tsx:26
     2  client/src/components/dashboard-charts.tsx:387
    15  client/src/components/dashboard-main.tsx:106
    12  client/src/components/dashboard-stats.tsx:93
     8  client/src/components/dashboard/dashboard-main.tsx:244
    11  client/src/components/dashboard/sidebar.tsx:75
     3  client/src/components/green-black-home.tsx:8
     7  client/src/components/interactive-reservation.tsx:135
     2  client/src/components/online-ordering.tsx:131
     1  client/src/components/reservation-notifications.tsx:89
     2  client/src/components/table-management.tsx:372
     4  client/src/components/ui/accordion.tsx:181
     1  client/src/components/ui/alert-dialog.tsx:248
     2  client/src/components/ui/chart.tsx:277
     2  client/src/components/ui/checkbox.tsx:49
     1  client/src/components/ui/combobox.tsx:141
     1  client/src/components/ui/context-menu.tsx:108
    18  client/src/components/ui/data-grid.tsx:91
     1  client/src/components/ui/data-table.tsx:138
     1  client/src/components/ui/dropdown-menu.tsx:97
     2  client/src/components/ui/error-boundary.tsx:44
     1  client/src/components/ui/file-upload.tsx:85
     3  client/src/components/ui/form.tsx:216
    30  client/src/components/ui/index.ts:75
     6  client/src/components/ui/input-otp.tsx:9
     6  client/src/components/ui/international-phone-input.tsx:63
     1  client/src/components/ui/menubar.tsx:130
     3  client/src/components/ui/performance.tsx:30
     1  client/src/components/ui/phone-input.tsx:75
     1  client/src/components/ui/radio-group.tsx:156
     3  client/src/components/ui/resizable.tsx:24
     1  client/src/components/ui/sonner.tsx:12
     2  client/src/components/ui/stats-card.tsx:32
     1  client/src/components/ui/theme-provider.tsx:67
     1  client/src/components/ui/types.ts:172
     2  client/src/components/ui/ui-utils.ts:26
     1  client/src/components/user-profile.tsx:210
     3  client/src/constants/permissions.ts:51
     1  client/src/contexts/ThemeContext.tsx:43
     1  client/src/hooks/index.ts:26
    10  client/src/hooks/use-toast.ts:45
     1  client/src/hooks/use-user.tsx:2
     2  client/src/hooks/usePermissions.ts:124
     2  client/src/hooks/usePermissionsSync.ts:69
     1  client/src/hooks/useQRCode.ts:2
     2  client/src/hooks/useReservations.ts:192
     2  client/src/hooks/useUser.ts:201
     2  client/src/lib/auth-utils.ts:117
     1  client/src/lib/excel-export.ts:98
     1  client/src/lib/security.ts:271
     1  client/src/pages/AdminFinal.tsx:79
     3  client/src/pages/Reservations.tsx:39
     1  client/src/pages/register.tsx:26
    17  client/src/pages/reservation-with-cart.tsx:81
     2  client/src/types/admin.ts:128
    12  server/ImageManager.ts:31
     5  server/config/production.ts:5
     6  server/middleware/api-validator.ts:60
     8  server/middleware/auth.ts:163
     1  server/middleware/authorization.ts:20
     3  server/middleware/cache-advanced.ts:275
     3  server/middleware/database-middleware.ts:2
     3  server/middleware/error-handler-enhanced.ts:25
     7  server/middleware/error-handler.ts:18
     6  server/middleware/logger.ts:42
     2  server/middleware/logging.ts:216
    11  server/middleware/metrics.ts:13
     3  server/middleware/validation.ts:123
     2  server/modules/ai-automation.ts:83
     8  server/routes/admin/customers.routes.ts:76
     4  server/routes/admin/menu-admin.routes.ts:53
    13  server/routes/admin/reservations.routes.ts:48
     8  server/routes/admin/statistics.routes.ts:50
     8  server/routes/advanced-features.ts:5
     9  server/routes/ai.routes.ts:146
     5  server/routes/analytics.routes.ts:8
     6  server/routes/analytics.ts:41
     6  server/routes/auth/auth.routes.ts:83
    12  server/routes/dashboard.routes.ts:27
    10  server/routes/dashboard/dashboard.routes.ts:75
    14  server/routes/database.routes.ts:9
    10  server/routes/delivery.ts:217
   107  server/routes/feedback/feedback.routes.ts:73
    11  server/routes/image-routes.ts:39
    10  server/routes/inventory/inventory.routes.ts:171
     1  server/routes/kpis.routes.ts:125
    29  server/routes/loyalty-advanced.ts:10
    43  server/routes/menu/menu.routes.ts:62
     4  server/routes/online-orders.ts:147
    33  server/routes/orders/orders.routes.ts:77
     8  server/routes/permissions.routes.ts:8
     1  server/routes/permissions.ts:19
    26  server/routes/tables/tables.routes.ts:71
    20  server/routes/user-profile.ts:211
    24  server/routes/users/users.routes.ts:140
     6  server/services/ai-automation.service.ts:525
     4  server/types/auth.ts:26
~/workspace$ npm run type-check

> rest-express@1.0.0 type-check
> tsc --noEmit --strict

client/src/components/admin/delivery-tracking.tsx:345:67 - error TS2339: Property 'toString' does not exist on type 'never'.

345                           defaultValue={field.value ? field.value.toString() : ''}
                                                                      ~~~~~~~~

client/src/components/admin/loyalty-system.tsx:861:47 - error TS2532: Object is possibly 'undefined'.

861                         <span>{level.name} → {loyaltyLevels[index + 1].name}</span>
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/loyalty-system.tsx:863:28 - error TS2532: Object is possibly 'undefined'.

863                           {loyaltyLevels[index + 1].threshold}€
                               ~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/maintenance-management.tsx:489:19 - error TS2322: Type '(taskData: Omit<MaintenanceTask, "id">) => Promise<void>' is not assignable to type '(data: Omit<MaintenanceTask, "id"> | Partial<MaintenanceTask>) => void'.
  Types of parameters 'taskData' and 'data' are incompatible.
    Type 'Omit<MaintenanceTask, "id"> | Partial<MaintenanceTask>' is not assignable to type 'Omit<MaintenanceTask, "id">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Type 'Partial<MaintenanceTask>' is not assignable to type 'Omit<MaintenanceTask, "id">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
        Property 'priority' is optional in type 'Partial<MaintenanceTask>' but required in type 'Omit<MaintenanceTask, "id">'.

489                   onSubmit={editingTask ?
                      ~~~~~~~~

  client/src/components/admin/MaintenanceTaskForm.tsx:24:3
    24   onSubmit: (data: Omit<MaintenanceTask, 'id'> | Partial<MaintenanceTask>) => void;
         ~~~~~~~~
    The expected type comes from property 'onSubmit' which is declared here on type 'IntrinsicAttributes & MaintenanceTaskFormProps'

client/src/components/admin/maintenance-management.tsx:515:19 - error TS2322: Type '(equipmentData: Omit<Equipment, "id">) => Promise<void>' is not assignable to type '(data: Omit<Equipment, "id"> | Partial<Equipment>) => void'.
  Types of parameters 'equipmentData' and 'data' are incompatible.
    Type 'Omit<Equipment, "id"> | Partial<Equipment>' is not assignable to type 'Omit<Equipment, "id">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Type 'Partial<Equipment>' is not assignable to type 'Omit<Equipment, "id">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
        Property 'name' is optional in type 'Partial<Equipment>' but required in type 'Omit<Equipment, "id">'.

515                   onSubmit={editingEquipment ?
                      ~~~~~~~~

  client/src/components/admin/EquipmentForm.tsx:22:3
    22   onSubmit: (data: Omit<Equipment, 'id'> | Partial<Equipment>) => void;
         ~~~~~~~~
    The expected type comes from property 'onSubmit' which is declared here on type 'IntrinsicAttributes & EquipmentFormProps'

client/src/components/admin/messages.tsx:4:10 - error TS2305: Module '"@/types/admin"' has no exported member 'ContactMessage'.

4 import { ContactMessage } from '@/types/admin';
           ~~~~~~~~~~~~~~

client/src/components/admin/messages.tsx:56:44 - error TS2554: Expected 0 arguments, but got 1.

56   const { hasPermission } = usePermissions(user);
                                              ~~~~

client/src/components/admin/messages.tsx:377:50 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

377                       {hasPermission('messages', 'edit') && (
                                                     ~~~~~~

client/src/components/admin/messages.tsx:501:42 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

501               {hasPermission('messages', 'edit') && (
                                             ~~~~~~

client/src/components/admin/notifications-system.tsx:347:33 - error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'string'.

347         const data = JSON.parse(lastMessage.data);
                                    ~~~~~~~~~~~~~~~~

client/src/components/admin/notifications-system.tsx:774:20 - error TS2375: Type '{ children: Element[]; value: "error" | "success" | "warning" | "info" | "system" | undefined; onValueChange: (value: string) => void; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

774                   <Select
                       ~~~~~~

client/src/components/admin/notifications-system.tsx:793:20 - error TS2375: Type '{ children: Element[]; value: "high" | "low" | "medium" | "urgent" | undefined; onValueChange: (value: string) => void; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

793                   <Select
                       ~~~~~~

client/src/components/admin/notifications-system.tsx:811:20 - error TS2375: Type '{ children: Element[]; value: "order" | "user" | "inventory" | "maintenance" | "reservation" | "system" | "payment" | undefined; onValueChange: (value: string) => void; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

811                   <Select
                       ~~~~~~

client/src/components/admin/notifications-system.tsx:937:22 - error TS2375: Type '{ checked: boolean | undefined; onCheckedChange: (checked: boolean) => void; }' is not assignable to type 'SwitchProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

937                     <Switch
                         ~~~~~~

client/src/components/admin/notifications-system.tsx:952:22 - error TS2375: Type '{ checked: boolean | undefined; onCheckedChange: (checked: boolean) => void; }' is not assignable to type 'SwitchProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

952                     <Switch
                         ~~~~~~

client/src/components/admin/notifications-system.tsx:967:22 - error TS2375: Type '{ checked: boolean | undefined; onCheckedChange: (checked: boolean) => void; }' is not assignable to type 'SwitchProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

967                     <Switch
                         ~~~~~~

client/src/components/admin/notifications-system.tsx:1030:22 - error TS2375: Type '{ checked: boolean | undefined; onCheckedChange: (checked: boolean) => void; }' is not assignable to type 'SwitchProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

1030                     <Switch
                          ~~~~~~

client/src/components/admin/online-ordering.tsx:171:26 - error TS2559: Type '(data: any) => void' has no properties in common with type 'WebSocketConfig'.

171   useWebSocket('orders', (data) => {
                             ~~~~~~~~~~~

client/src/components/admin/online-ordering.tsx:171:27 - error TS7006: Parameter 'data' implicitly has an 'any' type.

171   useWebSocket('orders', (data) => {
                              ~~~~

client/src/components/admin/online-ordering.tsx:921:19 - error TS2322: Type 'Dispatch<SetStateAction<OnlineOrder | null>>' is not assignable to type '(order: OnlineOrder) => void'.
  Types of parameters 'value' and 'order' are incompatible.
    Type 'OnlineOrder' is not assignable to type 'SetStateAction<OnlineOrder | null>'.
      Type 'OnlineOrder' is missing the following properties from type 'OnlineOrder': items, paymentStatus, paymentMethod, updatedAt

921                   onSelect={setSelectedOrder}
                      ~~~~~~~~

  client/src/components/order-card.tsx:26:3
    26   onSelect: (order: OnlineOrder) => void;
         ~~~~~~~~
    The expected type comes from property 'onSelect' which is declared here on type 'IntrinsicAttributes & OrderCardProps'

client/src/components/admin/permissions-management-improved.tsx:557:16 - error TS2304: Cannot find name 'Switch'.

557               <Switch
                   ~~~~~~

client/src/components/admin/permissions-management-improved.tsx:618:28 - error TS2304: Cannot find name 'Switch'.

618                           <Switch
                               ~~~~~~

client/src/components/admin/permissions-management-improved.tsx:620:47 - error TS7006: Parameter 'checked' implicitly has an 'any' type.

620                             onCheckedChange={(checked) => handleToggleUserStatus(user.id, checked)}
                                                  ~~~~~~~

client/src/components/admin/permissions-management-improved.tsx:621:59 - error TS2367: This comparison appears to be unintentional because the types 'number' and 'string | undefined' have no overlap.

621                             disabled={isTogglingStatus || user.id === currentUser?.id}
                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/permissions-management-improved.tsx:629:37 - error TS2345: Argument of type 'Date | null | undefined' is not assignable to parameter of type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'.

629                         {formatDate(user.lastLogin)}
                                        ~~~~~~~~~~~~~~

client/src/components/admin/permissions-management-improved.tsx:648:61 - error TS2345: Argument of type 'User' is not assignable to parameter of type 'SetStateAction<User | null>'.
  Type 'import("/home/runner/workspace/client/src/hooks/useUsers").User' is not assignable to type 'User' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Property 'firstName' is optional in type 'User' but required in type 'User'.

648                               onClick={() => setEditingUser(user)}
                                                                ~~~~

client/src/components/admin/permissions-management-improved.tsx:653:52 - error TS2367: This comparison appears to be unintentional because the types 'number' and 'string | undefined' have no overlap.

653                           {canPerform('delete') && user.id !== currentUser?.id && (
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/permissions-management-improved.tsx:657:62 - error TS2345: Argument of type 'User' is not assignable to parameter of type 'SetStateAction<User | null>'.
  Type 'import("/home/runner/workspace/client/src/hooks/useUsers").User' is not assignable to type 'User' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Property 'firstName' is optional in type 'User' but required in type 'User'.

657                               onClick={() => setUserToDelete(user)}
                                                                 ~~~~

client/src/components/admin/permissions-management-improved.tsx:681:40 - error TS2304: Cannot find name 'Switch'.

681                                       <Switch
                                           ~~~~~~

client/src/components/admin/permissions-management-improved.tsx:683:69 - error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

683                                         checked={user.permissions?.[module]?.view ?? false}
                                                                        ~~~~~~

client/src/components/admin/permissions-management-improved.tsx:684:59 - error TS7006: Parameter 'checked' implicitly has an 'any' type.

684                                         onCheckedChange={(checked) =>
                                                              ~~~~~~~

client/src/components/admin/permissions-management-improved.tsx:692:40 - error TS2304: Cannot find name 'Switch'.

692                                       <Switch
                                           ~~~~~~

client/src/components/admin/permissions-management-improved.tsx:694:69 - error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

694                                         checked={user.permissions?.[module]?.edit ?? false}
                                                                        ~~~~~~

client/src/components/admin/permissions-management-improved.tsx:695:59 - error TS7006: Parameter 'checked' implicitly has an 'any' type.

695                                         onCheckedChange={(checked) =>
                                                              ~~~~~~~

client/src/components/admin/permissions-management-improved.tsx:704:42 - error TS2304: Cannot find name 'Switch'.

704                                         <Switch
                                             ~~~~~~

client/src/components/admin/permissions-management-improved.tsx:706:71 - error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

706                                           checked={user.permissions?.[module]?.admin ?? false}
                                                                          ~~~~~~

client/src/components/admin/permissions-management-improved.tsx:707:61 - error TS7006: Parameter 'checked' implicitly has an 'any' type.

707                                           onCheckedChange={(checked) =>
                                                                ~~~~~~~

client/src/components/admin/permissions-management.tsx:212:11 - error TS2739: Type 'ReactElement<any, any>' is missing the following properties from type '{ label: string; onClick: () => void; }': label, onClick

212           action: <CheckCircle className="h-5 w-5 text-green-500" />
              ~~~~~~

  client/src/hooks/use-toast.ts:8:3
    8   action?: {
        ~~~~~~
    The expected type comes from property 'action' which is declared here on type 'ToastProps'

client/src/components/admin/permissions-management.tsx:223:9 - error TS2739: Type 'ReactElement<any, any>' is missing the following properties from type '{ label: string; onClick: () => void; }': label, onClick

223         action: <XCircle className="h-5 w-5 text-red-500" />
            ~~~~~~

  client/src/hooks/use-toast.ts:8:3
    8   action?: {
        ~~~~~~
    The expected type comes from property 'action' which is declared here on type 'ToastProps'

client/src/components/admin/permissions-management.tsx:261:11 - error TS2739: Type 'ReactElement<any, any>' is missing the following properties from type '{ label: string; onClick: () => void; }': label, onClick

261           action: <CheckCircle className="h-5 w-5 text-green-500" />
              ~~~~~~

  client/src/hooks/use-toast.ts:8:3
    8   action?: {
        ~~~~~~
    The expected type comes from property 'action' which is declared here on type 'ToastProps'

client/src/components/admin/permissions-management.tsx:272:9 - error TS2739: Type 'ReactElement<any, any>' is missing the following properties from type '{ label: string; onClick: () => void; }': label, onClick

272         action: <XCircle className="h-5 w-5 text-red-500" />
            ~~~~~~

  client/src/hooks/use-toast.ts:8:3
    8   action?: {
        ~~~~~~
    The expected type comes from property 'action' which is declared here on type 'ToastProps'

client/src/components/admin/permissions-management.tsx:300:11 - error TS2739: Type 'ReactElement<any, any>' is missing the following properties from type '{ label: string; onClick: () => void; }': label, onClick

300           action: <CheckCircle className="h-5 w-5 text-green-500" />
              ~~~~~~

  client/src/hooks/use-toast.ts:8:3
    8   action?: {
        ~~~~~~
    The expected type comes from property 'action' which is declared here on type 'ToastProps'

client/src/components/admin/permissions-management.tsx:311:9 - error TS2739: Type 'ReactElement<any, any>' is missing the following properties from type '{ label: string; onClick: () => void; }': label, onClick

311         action: <XCircle className="h-5 w-5 text-red-500" />
            ~~~~~~

  client/src/hooks/use-toast.ts:8:3
    8   action?: {
        ~~~~~~
    The expected type comes from property 'action' which is declared here on type 'ToastProps'

client/src/components/admin/permissions-management.tsx:435:69 - error TS2322: Type '"directeur" | "employe"' is not assignable to type '"employe"'.
  Type '"directeur"' is not assignable to type '"employe"'.

435                   onValueChange={(value) => setNewUser({...newUser, role: value as 'directeur' | 'employe'})}
                                                                        ~~~~

client/src/components/admin/quality-control.tsx:433:18 - error TS2375: Type '{ children: Element[]; value: string | undefined; onValueChange: (value: string) => void; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

433                 <Select
                     ~~~~~~

client/src/components/admin/quality-control.tsx:488:18 - error TS2375: Type '{ children: Element[]; value: "average" | "excellent" | "good" | "poor" | undefined; onValueChange: (value: string) => void; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

488                 <Select
                     ~~~~~~

client/src/components/admin/quality-control.tsx:527:52 - error TS2345: Argument of type '{ correctionActions: string[] | undefined; id?: number; date?: string; category?: string; item?: string; inspector?: string; score?: number; maxScore?: number; status?: "excellent" | "good" | "average" | "poor"; notes?: string; photos?: string[]; completed?: boolean; }' is not assignable to parameter of type 'SetStateAction<Partial<QualityCheck>>'.
  Type '{ correctionActions: string[] | undefined; id?: number; date?: string; category?: string; item?: string; inspector?: string; score?: number; maxScore?: number; status?: "excellent" | "good" | "average" | "poor"; notes?: string; photos?: string[]; completed?: boolean; }' is not assignable to type 'Partial<QualityCheck>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'correctionActions' are incompatible.
      Type 'string[] | undefined' is not assignable to type 'string[]'.
        Type 'undefined' is not assignable to type 'string[]'.

527                         onClick={() => setNewCheck({
                                                       ~
528                           ...newCheck,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
529                           correctionActions: newCheck.correctionActions?.filter((_, i) => i !== index)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
530                         })}
    ~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:83:9 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

83         toast({
           ~~~~~

client/src/components/admin/real-time-updates.tsx:136:9 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

136         toast({
            ~~~~~

client/src/components/admin/real-time-updates.tsx:198:7 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

198       toast({
          ~~~~~

client/src/components/admin/real-time-updates.tsx:245:20 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ order: string[]; reservation: string[]; payment: string[]; customer: string[]; system: string[]; }'.

245     const titles = mockEvents[type];
                       ~~~~~~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:337:34 - error TS2304: Cannot find name 'Calendar'.

337       case 'reservation': return Calendar;
                                     ~~~~~~~~

client/src/components/admin/real-time-updates.tsx:387:14 - error TS2304: Cannot find name 'Bell'.

387             <Bell className={`h-4 w-4 ${soundEnabled ? 'text-blue-500' : 'text-gray-400'}`} />
                 ~~~~

client/src/components/admin/real-time-updates.tsx:395:14 - error TS2304: Cannot find name 'RefreshCw'.

395             <RefreshCw className="h-4 w-4 mr-2" />
                 ~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:403:86 - error TS2304: Cannot find name 'Zap'.

403         <MetricCard title="Événements/min" value={liveMetrics.eventsPerMinute} icon={Zap} color="yellow" />
                                                                                         ~~~

client/src/components/admin/real-time-updates.tsx:409:8 - error TS2304: Cannot find name 'Tabs'.

409       <Tabs defaultValue="events" className="space-y-4">
           ~~~~

client/src/components/admin/real-time-updates.tsx:410:10 - error TS2304: Cannot find name 'TabsList'.

410         <TabsList>
             ~~~~~~~~

client/src/components/admin/real-time-updates.tsx:411:12 - error TS2304: Cannot find name 'TabsTrigger'.

411           <TabsTrigger value="events">Événements</TabsTrigger>
               ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:411:51 - error TS2304: Cannot find name 'TabsTrigger'.

411           <TabsTrigger value="events">Événements</TabsTrigger>
                                                      ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:412:12 - error TS2304: Cannot find name 'TabsTrigger'.

412           <TabsTrigger value="filters">Filtres</TabsTrigger>
               ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:412:49 - error TS2304: Cannot find name 'TabsTrigger'.

412           <TabsTrigger value="filters">Filtres</TabsTrigger>
                                                    ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:413:12 - error TS2304: Cannot find name 'TabsTrigger'.

413           <TabsTrigger value="settings">Paramètres</TabsTrigger>
               ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:413:53 - error TS2304: Cannot find name 'TabsTrigger'.

413           <TabsTrigger value="settings">Paramètres</TabsTrigger>
                                                        ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:414:11 - error TS2304: Cannot find name 'TabsList'.

414         </TabsList>
              ~~~~~~~~

client/src/components/admin/real-time-updates.tsx:416:10 - error TS2304: Cannot find name 'TabsContent'.

416         <TabsContent value="events" className="space-y-4">
             ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:418:14 - error TS2304: Cannot find name 'Alert'.

418             <Alert>
                 ~~~~~

client/src/components/admin/real-time-updates.tsx:420:16 - error TS2304: Cannot find name 'AlertDescription'.

420               <AlertDescription>
                   ~~~~~~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:430:17 - error TS2304: Cannot find name 'AlertDescription'.

430               </AlertDescription>
                    ~~~~~~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:431:15 - error TS2304: Cannot find name 'Alert'.

431             </Alert>
                  ~~~~~

client/src/components/admin/real-time-updates.tsx:438:20 - error TS2304: Cannot find name 'Eye'.

438                   <Eye className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                       ~~~

client/src/components/admin/real-time-updates.tsx:484:11 - error TS2304: Cannot find name 'TabsContent'.

484         </TabsContent>
              ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:486:10 - error TS2304: Cannot find name 'TabsContent'.

486         <TabsContent value="filters" className="space-y-4">
             ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:564:11 - error TS2304: Cannot find name 'TabsContent'.

564         </TabsContent>
              ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:566:10 - error TS2304: Cannot find name 'TabsContent'.

566         <TabsContent value="settings" className="space-y-4">
             ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:628:11 - error TS2304: Cannot find name 'TabsContent'.

628         </TabsContent>
              ~~~~~~~~~~~

client/src/components/admin/real-time-updates.tsx:629:9 - error TS2304: Cannot find name 'Tabs'.

629       </Tabs>
            ~~~~

client/src/components/admin/reports-system.tsx:73:7 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

73       toast({
         ~~~~~

client/src/components/admin/reports-system.tsx:107:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

107       icon: BarChart3
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:116:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

116       icon: Users
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:125:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

125       icon: FileText
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:134:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

134       icon: DollarSign
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:143:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

143       icon: TrendingUp
          ~~~~

  client/src/components/admin/reports-system.tsx:19:3
    19   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'Report'

client/src/components/admin/reports-system.tsx:172:9 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

172         toast({
            ~~~~~

client/src/components/admin/reports-system.tsx:182:7 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

182       toast({
          ~~~~~

client/src/components/admin/reports-system.tsx:194:7 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

194       toast({
          ~~~~~

client/src/components/admin/reports-system.tsx:227:9 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

227         toast({
            ~~~~~

client/src/components/admin/reports-system.tsx:235:7 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

235       toast({
          ~~~~~

client/src/components/admin/reports-system.tsx:245:7 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

245       toast({
          ~~~~~

client/src/components/admin/reports-system.tsx:273:9 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

273         toast({
            ~~~~~

client/src/components/admin/reports-system.tsx:281:7 - error TS2349: This expression is not callable.
  Type 'ToastManager' has no call signatures.

281       toast({
          ~~~~~

client/src/components/admin/reservation-dialog.tsx:135:9 - error TS2739: Type 'ReactElement<any, any>' is missing the following properties from type '{ label: string; onClick: () => void; }': label, onClick

135         action: <Check className="h-4 w-4 text-green-500" />
            ~~~~~~

  client/src/hooks/use-toast.ts:8:3
    8   action?: {
        ~~~~~~
    The expected type comes from property 'action' which is declared here on type 'ToastProps'

client/src/components/admin/reservation-dialog.tsx:301:22 - error TS2304: Cannot find name 'ScrollArea'.

301                     <ScrollArea className="h-60">
                         ~~~~~~~~~~

client/src/components/admin/reservation-dialog.tsx:307:23 - error TS2304: Cannot find name 'ScrollArea'.

307                     </ScrollArea>
                          ~~~~~~~~~~

client/src/components/admin/settings.tsx:21:27 - error TS2307: Cannot find module '@/components/ui/day-picker' or its corresponding type declarations.

21 import { DayPicker } from '@/components/ui/day-picker';
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:22:28 - error TS2307: Cannot find module '@/components/ui/time-picker' or its corresponding type declarations.

22 import { TimePicker } from '@/components/ui/time-picker';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:135:44 - error TS2554: Expected 0 arguments, but got 1.

135   const { hasPermission } = usePermissions(user);
                                               ~~~~

client/src/components/admin/settings.tsx:210:36 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

210     if (!hasPermission('settings', 'edit') || !hasChanges) return;
                                       ~~~~~~

client/src/components/admin/settings.tsx:218:37 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

218       if (hasPermission('settings', 'edit')) {
                                        ~~~~~~

client/src/components/admin/settings.tsx:233:27 - error TS2538: Type 'undefined' cannot be used as an index type.

233         current = current[keys[i]];
                              ~~~~~~~

client/src/components/admin/settings.tsx:236:15 - error TS2538: Type 'undefined' cannot be used as an index type.

236       current[keys[keys.length - 1]] = value;
                  ~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:242:22 - error TS2345: Argument of type '(prev: RestaurantSettings) => { openingHours: { [x: string]: OpeningHours | { open?: string; close?: string; closed?: boolean; }; }; restaurantName: string; ... 8 more ...; specialDates: { ...; }; }' is not assignable to parameter of type 'SetStateAction<RestaurantSettings>'.
  Type '(prev: RestaurantSettings) => { openingHours: { [x: string]: OpeningHours | { open?: string; close?: string; closed?: boolean; }; }; restaurantName: string; ... 8 more ...; specialDates: { ...; }; }' is not assignable to type '(prevState: RestaurantSettings) => RestaurantSettings'.
    Call signature return types '{ openingHours: { [x: string]: OpeningHours | { open?: string; close?: string; closed?: boolean; }; }; restaurantName: string; address: string; phone: string; email: string; website: string; ... 4 more ...; specialDates: { ...; }; }' and 'RestaurantSettings' are incompatible.
      The types of 'openingHours' are incompatible between these types.
        Type '{ [x: string]: OpeningHours | { open?: string; close?: string; closed?: boolean; }; }' is not assignable to type 'Record<string, OpeningHours>'.
          'string' index signatures are incompatible.
            Type 'OpeningHours | { open?: string; close?: string; closed?: boolean; }' is not assignable to type 'OpeningHours'.
              Type '{ open?: string; close?: string; closed?: boolean; }' is not assignable to type 'OpeningHours'.
                Property 'open' is optional in type '{ open?: string; close?: string; closed?: boolean; }' but required in type 'OpeningHours'.

242     setDraftSettings(prev => ({
                         ~~~~~~~~~~
243       ...prev,
    ~~~~~~~~~~~~~~
... 
250       }
    ~~~~~~~
251     }));
    ~~~~~~

client/src/components/admin/settings.tsx:256:22 - error TS2345: Argument of type '(prev: RestaurantSettings) => { specialDates: { closedDates: (string | undefined)[]; specialHours: { date: string; openingHours: OpeningHours; note: string; }[]; }; ... 9 more ...; notificationSettings: { ...; }; }' is not assignable to parameter of type 'SetStateAction<RestaurantSettings>'.
  Type '(prev: RestaurantSettings) => { specialDates: { closedDates: (string | undefined)[]; specialHours: { date: string; openingHours: OpeningHours; note: string; }[]; }; ... 9 more ...; notificationSettings: { ...; }; }' is not assignable to type '(prevState: RestaurantSettings) => RestaurantSettings'.
    Call signature return types '{ specialDates: { closedDates: (string | undefined)[]; specialHours: { date: string; openingHours: OpeningHours; note: string; }[]; }; restaurantName: string; address: string; phone: string; ... 6 more ...; notificationSettings: { ...; }; }' and 'RestaurantSettings' are incompatible.
      The types of 'specialDates.closedDates' are incompatible between these types.
        Type '(string | undefined)[]' is not assignable to type 'string[]'.
          Type 'string | undefined' is not assignable to type 'string'.
            Type 'undefined' is not assignable to type 'string'.

256     setDraftSettings(prev => ({
                         ~~~~~~~~~~
257       ...prev,
    ~~~~~~~~~~~~~~
... 
261       }
    ~~~~~~~
262     }));
    ~~~~~~

client/src/components/admin/settings.tsx:277:22 - error TS2345: Argument of type '(prev: RestaurantSettings) => { specialDates: { specialHours: { date: string | undefined; openingHours: OpeningHours; note: string; }[]; closedDates: string[]; }; ... 9 more ...; notificationSettings: { ...; }; }' is not assignable to parameter of type 'SetStateAction<RestaurantSettings>'.
  Type '(prev: RestaurantSettings) => { specialDates: { specialHours: { date: string | undefined; openingHours: OpeningHours; note: string; }[]; closedDates: string[]; }; ... 9 more ...; notificationSettings: { ...; }; }' is not assignable to type '(prevState: RestaurantSettings) => RestaurantSettings'.
    Call signature return types '{ specialDates: { specialHours: { date: string | undefined; openingHours: OpeningHours; note: string; }[]; closedDates: string[]; }; restaurantName: string; address: string; phone: string; ... 6 more ...; notificationSettings: { ...; }; }' and 'RestaurantSettings' are incompatible.
      The types of 'specialDates.specialHours' are incompatible between these types.
        Type '{ date: string | undefined; openingHours: OpeningHours; note: string; }[]' is not assignable to type '{ date: string; openingHours: OpeningHours; note: string; }[]'.
          Type '{ date: string | undefined; openingHours: OpeningHours; note: string; }' is not assignable to type '{ date: string; openingHours: OpeningHours; note: string; }'.
            Types of property 'date' are incompatible.
              Type 'string | undefined' is not assignable to type 'string'.
                Type 'undefined' is not assignable to type 'string'.

277     setDraftSettings(prev => ({
                         ~~~~~~~~~~
278       ...prev,
    ~~~~~~~~~~~~~~
... 
285       }
    ~~~~~~~
286     }));
    ~~~~~~

client/src/components/admin/settings.tsx:348:36 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

348         {hasPermission('settings', 'edit') && (
                                       ~~~~~~

client/src/components/admin/settings.tsx:394:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

394                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:403:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

403                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:413:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

413                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:422:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

422                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:433:56 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

433                   disabled={!hasPermission('settings', 'edit')}
                                                           ~~~~~~

client/src/components/admin/settings.tsx:443:56 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

443                   disabled={!hasPermission('settings', 'edit')}
                                                           ~~~~~~

client/src/components/admin/settings.tsx:456:56 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

456                   disabled={!hasPermission('settings', 'edit')}
                                                           ~~~~~~

client/src/components/admin/settings.tsx:481:60 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

481                       disabled={!hasPermission('settings', 'edit')}
                                                               ~~~~~~

client/src/components/admin/settings.tsx:489:36 - error TS7006: Parameter 'value' implicitly has an 'any' type.

489                         onChange={(value) => updateOpeningHours(day, 'open', value)}
                                       ~~~~~

client/src/components/admin/settings.tsx:490:62 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

490                         disabled={!hasPermission('settings', 'edit')}
                                                                 ~~~~~~

client/src/components/admin/settings.tsx:495:36 - error TS7006: Parameter 'value' implicitly has an 'any' type.

495                         onChange={(value) => updateOpeningHours(day, 'close', value)}
                                       ~~~~~

client/src/components/admin/settings.tsx:496:62 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

496                         disabled={!hasPermission('settings', 'edit')}
                                                                 ~~~~~~

client/src/components/admin/settings.tsx:520:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

520                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:529:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

529                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:538:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

538                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:552:60 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

552                       disabled={!hasPermission('settings', 'edit')}
                                                               ~~~~~~

client/src/components/admin/settings.tsx:567:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

567                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:577:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

577                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:587:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

587                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:597:56 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

597                   disabled={!hasPermission('settings', 'edit')}
                                                           ~~~~~~

client/src/components/admin/settings.tsx:625:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

625                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:634:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

634                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:647:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

647                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:657:56 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

657                   disabled={!hasPermission('settings', 'edit')}
                                                           ~~~~~~

client/src/components/admin/settings.tsx:670:56 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

670                   disabled={!hasPermission('settings', 'edit')}
                                                           ~~~~~~

client/src/components/admin/settings.tsx:692:36 - error TS7006: Parameter 'date' implicitly has an 'any' type.

692                     onSelectDate={(date) => addClosedDate(date)}
                                       ~~~~

client/src/components/admin/settings.tsx:693:36 - error TS7006: Parameter 'date' implicitly has an 'any' type.

693                     onRemoveDate={(date) => removeClosedDate(date.toISOString().split('T')[0])}
                                       ~~~~

client/src/components/admin/settings.tsx:694:58 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

694                     disabled={!hasPermission('settings', 'edit')}
                                                             ~~~~~~

client/src/components/admin/settings.tsx:705:54 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

705                           {hasPermission('settings', 'edit') && (
                                                         ~~~~~~

client/src/components/admin/settings.tsx:729:52 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

729                         {hasPermission('settings', 'edit') && (
                                                       ~~~~~~

client/src/components/admin/settings.tsx:745:31 - error TS2322: Type '{ openingHours: { closed: boolean; open: string; close: string; }; date?: string; note?: string; }' is not assignable to type '{ date: string; openingHours: OpeningHours; note: string; }'.
  Property 'date' is optional in type '{ openingHours: { closed: boolean; open: string; close: string; }; date?: string; note?: string; }' but required in type '{ date: string; openingHours: OpeningHours; note: string; }'.

745                               updatedHours[index] = {
                                  ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:748:38 - error TS2532: Object is possibly 'undefined'.

748                                   ...updatedHours[index].openingHours,
                                         ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:761:64 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

761                           disabled={!hasPermission('settings', 'edit')}
                                                                   ~~~~~~

client/src/components/admin/settings.tsx:769:40 - error TS7006: Parameter 'value' implicitly has an 'any' type.

769                             onChange={(value) => {
                                           ~~~~~

client/src/components/admin/settings.tsx:773:33 - error TS2322: Type '{ openingHours: { open: any; close: string; closed: boolean; }; date?: string; note?: string; }' is not assignable to type '{ date: string; openingHours: OpeningHours; note: string; }'.
  Property 'date' is optional in type '{ openingHours: { open: any; close: string; closed: boolean; }; date?: string; note?: string; }' but required in type '{ date: string; openingHours: OpeningHours; note: string; }'.

773                                 updatedHours[index] = {
                                    ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:776:40 - error TS2532: Object is possibly 'undefined'.

776                                     ...updatedHours[index].openingHours,
                                           ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:789:66 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

789                             disabled={!hasPermission('settings', 'edit')}
                                                                     ~~~~~~

client/src/components/admin/settings.tsx:794:40 - error TS7006: Parameter 'value' implicitly has an 'any' type.

794                             onChange={(value) => {
                                           ~~~~~

client/src/components/admin/settings.tsx:798:33 - error TS2322: Type '{ openingHours: { close: any; open: string; closed: boolean; }; date?: string; note?: string; }' is not assignable to type '{ date: string; openingHours: OpeningHours; note: string; }'.
  Property 'date' is optional in type '{ openingHours: { close: any; open: string; closed: boolean; }; date?: string; note?: string; }' but required in type '{ date: string; openingHours: OpeningHours; note: string; }'.

798                                 updatedHours[index] = {
                                    ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:801:40 - error TS2532: Object is possibly 'undefined'.

801                                     ...updatedHours[index].openingHours,
                                           ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:814:66 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

814                             disabled={!hasPermission('settings', 'edit')}
                                                                     ~~~~~~

client/src/components/admin/settings.tsx:826:31 - error TS2322: Type '{ note: string; date?: string; openingHours?: OpeningHours; }' is not assignable to type '{ date: string; openingHours: OpeningHours; note: string; }'.
  Property 'date' is optional in type '{ note: string; date?: string; openingHours?: OpeningHours; }' but required in type '{ date: string; openingHours: OpeningHours; note: string; }'.

826                               updatedHours[index] = {
                                  ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/settings.tsx:839:64 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

839                           disabled={!hasPermission('settings', 'edit')}
                                                                   ~~~~~~

client/src/components/admin/settings.tsx:851:40 - error TS7006: Parameter 'date' implicitly has an 'any' type.

851                         onSelectDate={(date) => {
                                           ~~~~

client/src/components/admin/settings.tsx:857:62 - error TS2345: Argument of type '"edit"' is not assignable to parameter of type 'PermissionAction'.

857                         disabled={!hasPermission('settings', 'edit')}
                                                                 ~~~~~~

client/src/components/admin/staff-scheduling.tsx:129:13 - error TS2322: Type '{ id: number; firstName: string | undefined; lastName: string | undefined; email: string; phone: string; position: string | undefined; department: string | undefined; maxHours: number; ... 6 more ...; avatar: string; }[]' is not assignable to type 'Employee[]'.
  Type '{ id: number; firstName: string | undefined; lastName: string | undefined; email: string; phone: string; position: string | undefined; department: string | undefined; maxHours: number; ... 6 more ...; avatar: string; }' is not assignable to type 'Employee'.
    Types of property 'firstName' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'.

129       const mockEmployees: Employee[] = Array.from({ length: 12 }, (_, i) => ({
                ~~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:166:13 - error TS2322: Type '{ id: number; employeeId: number; date: string | undefined; startTime: string; endTime: string; position: string | undefined; status: any; notes: string | undefined; createdAt: string; updatedAt: string; }[]' is not assignable to type 'Shift[]'.
  Type '{ id: number; employeeId: number; date: string | undefined; startTime: string; endTime: string; position: string | undefined; status: any; notes: string | undefined; createdAt: string; updatedAt: string; }' is not assignable to type 'Shift' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'date' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'.

166       const mockShifts: Shift[] = Array.from({ length: 30 }, (_, i) => {
                ~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:168:31 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'Date | undefined' is not assignable to parameter of type 'string | number | Date'.
      Type 'undefined' is not assignable to type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'Date | undefined' is not assignable to parameter of type 'string | number'.
      Type 'undefined' is not assignable to type 'string | number'.

168         const date = new Date(weekStart);
                                  ~~~~~~~~~


client/src/components/admin/staff-scheduling.tsx:256:13 - error TS18048: 'endHours' is possibly 'undefined'.

256     return (endHours - startHours) + (endMinutes - startMinutes) / 60;
                ~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:256:24 - error TS18048: 'startHours' is possibly 'undefined'.

256     return (endHours - startHours) + (endMinutes - startMinutes) / 60;
                           ~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:256:39 - error TS18048: 'endMinutes' is possibly 'undefined'.

256     return (endHours - startHours) + (endMinutes - startMinutes) / 60;
                                          ~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:256:52 - error TS18048: 'startMinutes' is possibly 'undefined'.

256     return (endHours - startHours) + (endMinutes - startMinutes) / 60;
                                                       ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:285:7 - error TS2532: Object is possibly 'undefined'.

285       shiftsByEmployee[shift.employeeId].push(shift);
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:295:13 - error TS18048: 'prevShift' is possibly 'undefined'.

295         if (prevShift.date === currentShift.date &&
                ~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:295:32 - error TS18048: 'currentShift' is possibly 'undefined'.

295         if (prevShift.date === currentShift.date &&
                                   ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:296:13 - error TS18048: 'prevShift' is possibly 'undefined'.

296             prevShift.endTime > currentShift.startTime) {
                ~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:296:33 - error TS18048: 'currentShift' is possibly 'undefined'.

296             prevShift.endTime > currentShift.startTime) {
                                    ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:301:22 - error TS18048: 'currentShift' is possibly 'undefined'.

301             shiftId: currentShift.id,
                         ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:317:20 - error TS2532: Object is possibly 'undefined'.

317           shiftId: empShifts[0].id,
                       ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:459:13 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

459             date: date.toISOString().split('T')[0],
                ~~~~

  client/src/components/admin/staff-scheduling.tsx:58:3
    58   date: string;
         ~~~~
    The expected type comes from property 'date' which is declared here on type 'Shift'

client/src/components/admin/staff-scheduling.tsx:459:19 - error TS18048: 'date' is possibly 'undefined'.

459             date: date.toISOString().split('T')[0],
                      ~~~~

client/src/components/admin/staff-scheduling.tsx:598:18 - error TS2532: Object is possibly 'undefined'.

598                 {shiftConflicts[0].message}
                     ~~~~~~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:685:17 - error TS2322: Type '{ value: number; indicatorClassName: string; }' is not assignable to type 'IntrinsicAttributes & Omit<ProgressProps & RefAttributes<HTMLDivElement>, "ref"> & RefAttributes<HTMLDivElement>'.
  Property 'indicatorClassName' does not exist on type 'IntrinsicAttributes & Omit<ProgressProps & RefAttributes<HTMLDivElement>, "ref"> & RefAttributes<HTMLDivElement>'.

685                 indicatorClassName={
                    ~~~~~~~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:831:20 - error TS2304: Cannot find name 'X'.

831                   <X className="h-4 w-4 mr-2" />
                       ~

client/src/components/admin/staff-scheduling.tsx:1063:27 - error TS2322: Type '{ value: number; className: string; indicatorClassName: string; }' is not assignable to type 'IntrinsicAttributes & Omit<ProgressProps & RefAttributes<HTMLDivElement>, "ref"> & RefAttributes<HTMLDivElement>'.
  Property 'indicatorClassName' does not exist on type 'IntrinsicAttributes & Omit<ProgressProps & RefAttributes<HTMLDivElement>, "ref"> & RefAttributes<HTMLDivElement>'.

1063                           indicatorClassName="bg-amber-500"
                               ~~~~~~~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:1190:11 - error TS2532: Object is possibly 'undefined'.

1190     date: weekDates[0].toISOString().split('T')[0],
               ~~~~~~~~~~~~

client/src/components/admin/staff-scheduling.tsx:1199:14 - error TS2345: Argument of type '{ employeeId: number; status: "draft"; date: string | undefined; startTime: string; endTime: string; position: string; notes: string; }' is not assignable to parameter of type 'Omit<Shift, "id" | "createdAt" | "updatedAt">'.
  Types of property 'date' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

1199     onSubmit({
                  ~
1200       ...formData,
     ~~~~~~~~~~~~~~~~~~
 ... 
1202       status: 'draft'
     ~~~~~~~~~~~~~~~~~~~~~
1203     });
     ~~~~~

client/src/components/admin/staff-scheduling.tsx:1257:12 - error TS2375: Type '{ children: Element[]; value: string | undefined; onValueChange: (value: string) => void; required: true; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

1257           <Select
                ~~~~~~

client/src/components/admin/staff-scheduling.tsx:1269:19 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

1269                   value={date.toISOString().split('T')[0]}
                       ~~~~~

  node_modules/@radix-ui/react-select/dist/index.d.mts:93:5
    93     value: string;
           ~~~~~
    The expected type comes from property 'value' which is declared here on type 'IntrinsicAttributes & Omit<SelectItemProps & RefAttributes<HTMLDivElement>, "ref"> & RefAttributes<...>'

client/src/components/admin/staff-scheduling.tsx:1333:35 - error TS2345: Argument of type '{ employeeId: number; status: "draft"; date: string | undefined; startTime: string; endTime: string; position: string; notes: string; }' is not assignable to parameter of type 'Omit<Shift, "id" | "createdAt" | "updatedAt">'.
  Types of property 'date' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

1333           onClick={() => onSubmit({
                                       ~
1334             ...formData,
     ~~~~~~~~~~~~~~~~~~~~~~~~
 ... 
1336             status: 'draft'
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
1337           })}
     ~~~~~~~~~~~

client/src/components/admin/statistics-enhanced.tsx:193:19 - error TS2339: Property 'operation' does not exist on type '(props: ToastProps) => string | number'.

193       await toast.operation(
                      ~~~~~~~~~

client/src/components/admin/statistics-enhanced.tsx:214:11 - error TS2339: Property 'info' does not exist on type '(props: ToastProps) => string | number'.

214     toast.info('Comparaison activée', 'Données comparées avec la période précédente');
              ~~~~

client/src/components/admin/statistics-enhanced.tsx:229:19 - error TS2339: Property 'operation' does not exist on type '(props: ToastProps) => string | number'.

229       await toast.operation(
                      ~~~~~~~~~

client/src/components/admin/statistics-enhanced.tsx:230:15 - error TS2304: Cannot find name 'exportFinancialReport'.

230         () => exportFinancialReport(reportData),
                  ~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/statistics/components/CategoryPieChart.tsx:8:3 - error TS2687: All declarations of 'color' must have identical modifiers.

8   color: string;
    ~~~~~

client/src/components/admin/statistics/components/CategoryPieChart.tsx:20:3 - error TS2687: All declarations of 'color' must have identical modifiers.

20   color?: string; // Make color optional since we have fallback
     ~~~~~

client/src/components/admin/statistics/components/CategoryPieChart.tsx:20:3 - error TS2717: Subsequent property declarations must have the same type.  Property 'color' must be of type 'string', but here has type 'string | undefined'.

20   color?: string; // Make color optional since we have fallback
     ~~~~~

  client/src/components/admin/statistics/components/CategoryPieChart.tsx:8:3
    8   color: string;
        ~~~~~
    'color' was also declared here.

client/src/components/admin/statistics/components/ExportToExcelButton.tsx:6:10 - error TS2614: Module '"@/lib/excel-export"' has no exported member 'exportToExcel'. Did you mean to use 'import exportToExcel from "@/lib/excel-export"' instead?

6 import { exportToExcel } from '@/lib/excel-export';
           ~~~~~~~~~~~~~

client/src/components/admin/statistics/components/ExportToExcelButton.tsx:8:10 - error TS2614: Module '"@/lib/excel-export"' has no exported member 'ExportData'. Did you mean to use 'import ExportData from "@/lib/excel-export"' instead?

8 import { ExportData } from '@/lib/excel-export';
           ~~~~~~~~~~

client/src/components/admin/statistics/components/RevenueChart.tsx:17:38 - error TS2339: Property 'loading' does not exist on type 'RevenueChartProps'.

17 export function RevenueChart({ data, loading = false, period }: RevenueChartProps) {
                                        ~~~~~~~

client/src/components/admin/statistics/components/RevenueChart.tsx:17:55 - error TS2339: Property 'period' does not exist on type 'RevenueChartProps'.

17 export function RevenueChart({ data, loading = false, period }: RevenueChartProps) {
                                                         ~~~~~~

client/src/components/admin/suppliers-management.tsx:81:13 - error TS2322: Type '{ id: number; name: string; company: string | undefined; email: string; phone: string; address: string; category: string | undefined; rating: number; status: "active" | "inactive" | "pending"; ... 7 more ...; paymentTerms: string | undefined; }[]' is not assignable to type 'Supplier[]'.
  Type '{ id: number; name: string; company: string | undefined; email: string; phone: string; address: string; category: string | undefined; rating: number; status: "active" | "inactive" | "pending"; ... 7 more ...; paymentTerms: string | undefined; }' is not assignable to type 'Supplier' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'company' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'.

81       const mockSuppliers: Supplier[] = Array.from({ length: 12 }, (_, i) => ({
               ~~~~~~~~~~~~~

client/src/components/admin/suppliers-management.tsx:122:9 - error TS2322: Type '{ id: string; supplier: string; amount: number; status: string | undefined; date: string; }[]' is not assignable to type '{ id: string; supplier: string; amount: number; status: string; date: string; }[]'.
  Type '{ id: string; supplier: string; amount: number; status: string | undefined; date: string; }' is not assignable to type '{ id: string; supplier: string; amount: number; status: string; date: string; }'.
    Types of property 'status' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'.

122         recentOrders: Array.from({ length: 5 }, (_, i) => ({
            ~~~~~~~~~~~~

  client/src/components/admin/suppliers-management.tsx:56:3
    56   recentOrders: { id: string; supplier: string; amount: number; status: string; date: string }[];
         ~~~~~~~~~~~~
    The expected type comes from property 'recentOrders' which is declared here on type 'SupplierStats'

client/src/components/admin/suppliers-management.tsx:124:21 - error TS2532: Object is possibly 'undefined'.

124           supplier: mockSuppliers[i].company,
                        ~~~~~~~~~~~~~~~~

client/src/components/admin/suppliers-management.tsx:716:25 - error TS2322: Type '{ value: number; className: string; indicatorClassName: string | undefined; }' is not assignable to type 'IntrinsicAttributes & Omit<ProgressProps & RefAttributes<HTMLDivElement>, "ref"> & RefAttributes<HTMLDivElement>'.
  Property 'indicatorClassName' does not exist on type 'IntrinsicAttributes & Omit<ProgressProps & RefAttributes<HTMLDivElement>, "ref"> & RefAttributes<HTMLDivElement>'.

716                         indicatorClassName={getCategoryColor(category.category).replace('bg-', 'bg-').split(' ')[0]}
                            ~~~~~~~~~~~~~~~~~~

client/src/components/admin/table-management.tsx:151:33 - error TS2559: Type '() => void' has no properties in common with type 'WebSocketConfig'.

151   useWebSocket('table-updates', () => {
                                    ~~~~~~~

client/src/components/admin/table-management.tsx:172:57 - error TS2353: Object literal may only specify known properties, and 'data' does not exist in type 'RequestInit'.

172       apiRequest('/api/admin/tables', { method: 'POST', data }),
                                                            ~~~~

client/src/components/admin/table-management.tsx:184:62 - error TS2353: Object literal may only specify known properties, and 'data' does not exist in type 'RequestInit'.

184       apiRequest(`/api/admin/tables/${id}`, { method: 'PUT', data }),
                                                                 ~~~~

client/src/components/admin/table-management.tsx:193:69 - error TS2353: Object literal may only specify known properties, and 'data' does not exist in type 'RequestInit'.

193       apiRequest(`/api/admin/tables/${id}/status`, { method: 'PUT', data: { status } }),
                                                                        ~~~~

client/src/components/admin/table-management.tsx:233:32 - error TS2379: Argument of type '{ number: number; shape: "round" | "square" | "rectangle"; location: "main_floor" | "terrace" | "private_room" | "bar"; capacity: number; isVip?: boolean | undefined; notes?: string | undefined; }' is not assignable to parameter of type 'Omit<RestaurantTable, "id">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ number: number; shape: "round" | "square" | "rectangle"; location: "main_floor" | "terrace" | "private_room" | "bar"; capacity: number; isVip?: boolean | undefined; notes?: string | undefined; }' is missing the following properties from type 'Omit<RestaurantTable, "id">': position, status

233     createTableMutation.mutate(data);
                                   ~~~~

client/src/components/admin/table-management.tsx:390:28 - error TS2375: Type '{ checked: boolean | undefined; onCheckedChange: (...event: any[]) => void; }' is not assignable to type 'SwitchProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

390                           <Switch checked={field.value} onCheckedChange={field.onChange} />
                               ~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:210:34 - error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'string'.

210       const message = JSON.parse(lastMessage.data);
                                     ~~~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:244:15 - error TS2339: Property 'error' does not exist on type '(props: ToastProps) => string | number'.

244         toast.error('Échec du chargement des profils');
                  ~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:313:13 - error TS2339: Property 'success' does not exist on type '(props: ToastProps) => string | number'.

313       toast.success('Profil mis à jour avec succès');
                ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:317:13 - error TS2339: Property 'error' does not exist on type '(props: ToastProps) => string | number'.

317       toast.error('Échec de la mise à jour du profil');
                ~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:332:13 - error TS2339: Property 'success' does not exist on type '(props: ToastProps) => string | number'.

332       toast.success('Adresse ajoutée avec succès');
                ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:348:13 - error TS2339: Property 'success' does not exist on type '(props: ToastProps) => string | number'.

348       toast.success('Adresse mise à jour avec succès');
                ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:363:13 - error TS2339: Property 'success' does not exist on type '(props: ToastProps) => string | number'.

363       toast.success('Adresse supprimée avec succès');
                ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:378:13 - error TS2339: Property 'success' does not exist on type '(props: ToastProps) => string | number'.

378       toast.success('Mise à jour groupée réussie');
                ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:404:13 - error TS2339: Property 'success' does not exist on type '(props: ToastProps) => string | number'.

404       toast.success('Export Excel généré avec succès');
                ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:407:13 - error TS2339: Property 'error' does not exist on type '(props: ToastProps) => string | number'.

407       toast.error('Échec de l\'export Excel');
                ~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:419:13 - error TS2339: Property 'success' does not exist on type '(props: ToastProps) => string | number'.

419       toast.success('Importation des profils réussie');
                ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:421:13 - error TS2339: Property 'error' does not exist on type '(props: ToastProps) => string | number'.

421       toast.error('Échec de l\'importation');
                ~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:443:7 - error TS2448: Block-scoped variable 'paginatedUsers' used before its declaration.

443   }, [paginatedUsers, selectedUsers.length]);
          ~~~~~~~~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:490:9
    490   const paginatedUsers = sortedUsers.slice(
                ~~~~~~~~~~~~~~
    'paginatedUsers' is declared here.

client/src/components/admin/user-profile-enhanced-optimized.tsx:443:7 - error TS2454: Variable 'paginatedUsers' is used before being assigned.

443   }, [paginatedUsers, selectedUsers.length]);
          ~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:447:5 - error TS2353: Object literal may only specify known properties, and 'content' does not exist in type 'UseReactToPrintOptions'.

447     content: () => printRef.current,
        ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:558:7 - error TS2375: Type '{ firstName: string; lastName: string; birthDate: string; preferences: { currency: string; emailNotifications: boolean; smsNotifications: boolean; promotionalEmails: boolean; dietaryRestrictions: string[]; allergens: string[]; language: string; favoriteTable?: number | undefined; }; ... 4 more ...; postalCode?: stri...' is not assignable to type 'Partial<UserProfile>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'email' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

558       updates: values
          ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:304:44
    304     mutationFn: async (data: { id: number; updates: Partial<UserProfile> }) => {
                                                   ~~~~~~~
    The expected type comes from property 'updates' which is declared here on type '{ id: number; updates: Partial<UserProfile>; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:568:9 - error TS2375: Type '{ type: "other" | "home" | "work"; city: string; postalCode: string; street: string; country: string; isDefault?: boolean | undefined; }' is not assignable to type 'Partial<Address>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'isDefault' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

568         updates: values
            ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:339:51
    339     mutationFn: async (data: { addressId: number; updates: Partial<Address> }) => {
                                                          ~~~~~~~
    The expected type comes from property 'updates' which is declared here on type '{ addressId: number; updates: Partial<Address>; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:573:9 - error TS2322: Type '{ type: "other" | "home" | "work"; city: string; postalCode: string; street: string; country: string; isDefault?: boolean | undefined; }' is not assignable to type 'Omit<Address, "id">'.
  Types of property 'isDefault' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

573         address: values
            ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:323:48
    323     mutationFn: async (data: { userId: number; address: Omit<Address, 'id'> }) => {
                                                       ~~~~~~~
    The expected type comes from property 'address' which is declared here on type '{ userId: number; address: Omit<Address, "id">; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:619:36 - error TS2339: Property 'canImport' does not exist on type '{ permissions: Permission[]; userRole: UserRole | null; loading: boolean; error: string | null; hasPermission: (module: ModuleName, action: PermissionAction) => boolean; ... 10 more ...; getUserAccessLevel: () => "admin" | ... 2 more ... | "basic"; }'.

619             disabled={!permissions.canImport || isImporting}
                                       ~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:628:36 - error TS2339: Property 'canExport' does not exist on type '{ permissions: Permission[]; userRole: UserRole | null; loading: boolean; error: string | null; hasPermission: (module: ModuleName, action: PermissionAction) => boolean; ... 10 more ...; getUserAccessLevel: () => "admin" | ... 2 more ... | "basic"; }'.

628             disabled={!permissions.canExport || exporting}
                                       ~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:634:12 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?

634           {permissions.canCreate && (
               ~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:874:18 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?

874                 {permissions.canEdit && (
                     ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:887:18 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?

887                 {permissions.canDelete && (
                     ~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:1650:24 - error TS2375: Type '{ checked: boolean | undefined; onCheckedChange: (...event: any[]) => void; }' is not assignable to type 'SwitchProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

1650                       <Switch
                            ~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:1683:9 - error TS2322: Type '{ open: boolean; onOpenChange: (open: boolean) => false | void; title: string; message: string; confirmText: string; onConfirm: () => void; loading: boolean; }' is not assignable to type 'IntrinsicAttributes & ConfirmationDialogProps'.
  Property 'message' does not exist on type 'IntrinsicAttributes & ConfirmationDialogProps'.

1683         message="Êtes-vous sûr de vouloir supprimer cette adresse ? Cette action est irréversible."
             ~~~~~~~

client/src/components/admin/work-schedule.tsx:3:31 - error TS2307: Cannot find module 'react-error-boundary' or its corresponding type declarations.

3 import { ErrorBoundary } from 'react-error-boundary';
                                ~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule.tsx:46:21 - error TS2339: Property 'isLoading' does not exist on type '{ permissions: Permission[]; userRole: UserRole | null; loading: boolean; error: string | null; hasPermission: (module: ModuleName, action: PermissionAction) => boolean; ... 10 more ...; getUserAccessLevel: () => "admin" | ... 2 more ... | "basic"; }'.

46   const { userRole, isLoading: isPermissionsLoading } = usePermissions();
                       ~~~~~~~~~

client/src/components/admin/work-schedule.tsx:85:15 - error TS2322: Type '"employe" | UserRole' is not assignable to type '"directeur" | "employe"'.
  Type '"admin"' is not assignable to type '"directeur" | "employe"'.

85               userRole={userRole || 'employe'}
                 ~~~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:295:3
    295   userRole: 'directeur' | 'employe';
          ~~~~~~~~
    The expected type comes from property 'userRole' which is declared here on type 'IntrinsicAttributes & WorkScheduleProps'

client/src/components/admin/work-schedule.tsx:86:15 - error TS2322: Type '"full" | "personal" | "team"' is not assignable to type 'ViewMode'.
  Type '"full"' is not assignable to type 'ViewMode'.

86               viewMode={viewMode}
                 ~~~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:298:3
    298   viewMode?: ViewMode;
          ~~~~~~~~
    The expected type comes from property 'viewMode' which is declared here on type 'IntrinsicAttributes & WorkScheduleProps'

client/src/components/admin/work-schedule/WorkSchedule.tsx:59:5 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

59     start: dateRange.start,
       ~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:60:5 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

60     end: dateRange.end
       ~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:66:5 - error TS2339: Property 'selectedEmployeeData' does not exist on type '{ selectedShift: Shift | null; selectedEmployee: Employee | null; selectedDate: string; viewMode: ViewMode; timePeriod: TimePeriod; filters: ScheduleFilter; ... 24 more ...; setIsEditingShift: Dispatch<...>; }'.

66     selectedEmployeeData,
       ~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:67:5 - error TS2339: Property 'viewModeState' does not exist on type '{ selectedShift: Shift | null; selectedEmployee: Employee | null; selectedDate: string; viewMode: ViewMode; timePeriod: TimePeriod; filters: ScheduleFilter; ... 24 more ...; setIsEditingShift: Dispatch<...>; }'.

67     viewModeState,
       ~~~~~~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:87:7 - error TS2322: Type '{ start: string | undefined; end: string | undefined; }' is not assignable to type '{ start: string; end: string; }'.
  Types of property 'start' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

87       dateRange
         ~~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:97:55 - error TS2339: Property 'conflicts' does not exist on type '{ isValid: boolean; errors: string[]; } | { isValid: boolean; conflicts: never[]; warnings: string[]; suggestions: never[]; }'.
  Property 'conflicts' does not exist on type '{ isValid: boolean; errors: string[]; }'.

97       console.error('Validation échouée:', validation.conflicts);
                                                         ~~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:119:26 - error TS2345: Argument of type '{ id: number; firstName: string; lastName: string; position: string; department: string; isActive: boolean; }' is not assignable to parameter of type 'Employee'.
  Type '{ id: number; firstName: string; lastName: string; position: string; department: string; isActive: boolean; }' is missing the following properties from type 'Employee': email, phone, salary, hireDate, and 3 more.

119     handleEmployeeSelect(employee);
                             ~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:162:11 - error TS2322: Type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Shift[]' is not assignable to type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Shift[]'.
  Type 'Shift' is missing the following properties from type 'Shift': hourlyRate, totalHours, totalPay, isRecurring

162           shifts={filteredShifts}
              ~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:312:3
    312   shifts: Shift[];
          ~~~~~~
    The expected type comes from property 'shifts' which is declared here on type 'IntrinsicAttributes & CalendarViewProps'

client/src/components/admin/work-schedule/WorkSchedule.tsx:174:11 - error TS2322: Type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Shift[]' is not assignable to type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Shift[]'.
  Type 'Shift' is missing the following properties from type 'Shift': hourlyRate, totalHours, totalPay, isRecurring

174           shifts={filteredShifts}
              ~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:322:3
    322   shifts: Shift[];
          ~~~~~~
    The expected type comes from property 'shifts' which is declared here on type 'IntrinsicAttributes & ShiftListViewProps'

client/src/components/admin/work-schedule/WorkSchedule.tsx:186:11 - error TS2322: Type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Shift[]' is not assignable to type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Shift[]'.
  Type 'Shift' is missing the following properties from type 'Shift': hourlyRate, totalHours, totalPay, isRecurring

186           shifts={filteredShifts}
              ~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:335:3
    335   shifts: Shift[];
          ~~~~~~
    The expected type comes from property 'shifts' which is declared here on type 'IntrinsicAttributes & EmployeeOverviewProps'

client/src/components/admin/work-schedule/components/CalendarView.tsx:41:23 - error TS7053: Element implicitly has an 'any' type because expression of type 'ShiftStatus' can't be used to index type '{ readonly scheduled: "bg-blue-100 text-blue-800 border-blue-200"; readonly confirmed: "bg-green-100 text-green-800 border-green-200"; readonly in_progress: "bg-yellow-100 text-yellow-800 border-yellow-200"; readonly completed: "bg-gray-100 text-gray-800 border-gray-200"; readonly cancelled: "bg-red-100 text-red-800...'.
  Property 'no_show' does not exist on type '{ readonly scheduled: "bg-blue-100 text-blue-800 border-blue-200"; readonly confirmed: "bg-green-100 text-green-800 border-green-200"; readonly in_progress: "bg-yellow-100 text-yellow-800 border-yellow-200"; readonly completed: "bg-gray-100 text-gray-800 border-gray-200"; readonly cancelled: "bg-red-100 text-red-800...'.

41   const statusColor = SHIFT_STATUS_COLORS[shift.status];
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/components/CalendarView.tsx:165:15 - error TS2322: Type '(e: any) => void' is not assignable to type '() => void'.
  Target signature provides too few arguments. Expected 1 or more, but got 0.

165               onClick={(e) => {
                  ~~~~~~~

  client/src/components/admin/work-schedule/components/CalendarView.tsx:32:3
    32   onClick: () => void;
         ~~~~~~~
    The expected type comes from property 'onClick' which is declared here on type 'IntrinsicAttributes & ShiftItemProps'

client/src/components/admin/work-schedule/components/CalendarView.tsx:165:25 - error TS7006: Parameter 'e' implicitly has an 'any' type.

165               onClick={(e) => {
                            ~

client/src/components/admin/work-schedule/components/CalendarView.tsx:196:30 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string | number | Date'.
      Type 'undefined' is not assignable to type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string | number'.
      Type 'undefined' is not assignable to type 'string | number'.

196     const dateObj = new Date(currentDate);
                                 ~~~~~~~~~~~


client/src/components/admin/work-schedule/components/CalendarView.tsx:218:30 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string | number | Date'.
      Type 'undefined' is not assignable to type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string | number'.
      Type 'undefined' is not assignable to type 'string | number'.

218     const current = new Date(currentDate);
                                 ~~~~~~~~~~~


client/src/components/admin/work-schedule/components/CalendarView.tsx:232:27 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string | number | Date'.
      Type 'undefined' is not assignable to type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string | number'.
      Type 'undefined' is not assignable to type 'string | number'.

232     const date = new Date(currentDate);
                              ~~~~~~~~~~~


client/src/components/admin/work-schedule/components/CalendarView.tsx:246:19 - error TS18048: 'start' is possibly 'undefined'.

246         return `${start.toLocaleDateString('fr-FR', { day: 'numeric', month: 'short' })} - ${end.toLocaleDateString('fr-FR', { day: 'numeric', month: 'short', year: 'numeric' })}`;
                      ~~~~~

client/src/components/admin/work-schedule/components/CalendarView.tsx:246:94 - error TS18048: 'end' is possibly 'undefined'.

246         return `${start.toLocaleDateString('fr-FR', { day: 'numeric', month: 'short' })} - ${end.toLocaleDateString('fr-FR', { day: 'numeric', month: 'short', year: 'numeric' })}`;
                                                                                                 ~~~

client/src/components/admin/work-schedule/components/CalendarView.tsx:325:13 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

325             date={currentDate}
                ~~~~

  client/src/components/admin/work-schedule/components/CalendarView.tsx:18:3
    18   date: string;
         ~~~~
    The expected type comes from property 'date' which is declared here on type 'IntrinsicAttributes & DayColumnProps'

client/src/components/admin/work-schedule/components/CalendarView.tsx:326:34 - error TS2538: Type 'undefined' cannot be used as an index type.

326             shifts={shiftsByDate[currentDate] || []}
                                     ~~~~~~~~~~~

client/src/components/admin/work-schedule/components/CalendarView.tsx:330:13 - error TS2322: Type '(shift: Omit<Shift, "id">) => void' is not assignable to type '(newShift: Partial<Shift>) => void'.
  Types of parameters 'shift' and 'newShift' are incompatible.
    Type 'Partial<Shift>' is not assignable to type 'Omit<Shift, "id">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Property 'position' is optional in type 'Partial<Shift>' but required in type 'Omit<Shift, "id">'.

330             onShiftCreate={onShiftCreate}
                ~~~~~~~~~~~~~

  client/src/components/admin/work-schedule/components/CalendarView.tsx:23:3
    23   onShiftCreate: (newShift: Partial<Shift>) => void;
         ~~~~~~~~~~~~~
    The expected type comes from property 'onShiftCreate' which is declared here on type 'IntrinsicAttributes & DayColumnProps'

client/src/components/admin/work-schedule/components/CalendarView.tsx:342:17 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

342                 date={date.toISOString().split('T')[0]}
                    ~~~~

  client/src/components/admin/work-schedule/components/CalendarView.tsx:18:3
    18   date: string;
         ~~~~
    The expected type comes from property 'date' which is declared here on type 'IntrinsicAttributes & DayColumnProps'

client/src/components/admin/work-schedule/components/CalendarView.tsx:343:38 - error TS2538: Type 'undefined' cannot be used as an index type.

343                 shifts={shiftsByDate[date.toISOString().split('T')[0]] || []}
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/components/CalendarView.tsx:347:17 - error TS2322: Type '(shift: Omit<Shift, "id">) => void' is not assignable to type '(newShift: Partial<Shift>) => void'.
  Types of parameters 'shift' and 'newShift' are incompatible.
    Type 'Partial<Shift>' is not assignable to type 'Omit<Shift, "id">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Property 'position' is optional in type 'Partial<Shift>' but required in type 'Omit<Shift, "id">'.

347                 onShiftCreate={onShiftCreate}
                    ~~~~~~~~~~~~~

  client/src/components/admin/work-schedule/components/CalendarView.tsx:23:3
    23   onShiftCreate: (newShift: Partial<Shift>) => void;
         ~~~~~~~~~~~~~
    The expected type comes from property 'onShiftCreate' which is declared here on type 'IntrinsicAttributes & DayColumnProps'

client/src/components/admin/work-schedule/components/EmployeeOverview.tsx:153:52 - error TS2551: Property 'departmentColor' does not exist on type 'Employee'. Did you mean 'department'?

153                 style={{ backgroundColor: employee.departmentColor }}
                                                       ~~~~~~~~~~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:10:3
    10   department: Department;
         ~~~~~~~~~~
    'department' is declared here.

client/src/components/admin/work-schedule/components/StatCard.tsx:185:4 - error TS2375: Type '{ title: string; value: string; icon: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; color: "blue"; loading: boolean | undefined; }' is not assignable to type 'StatCardProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'loading' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

185   <StatCard
       ~~~~~~~~

client/src/components/admin/work-schedule/components/StatCard.tsx:199:4 - error TS2375: Type '{ title: string; value: number; change: number | undefined; changeType: "increase" | "neutral"; icon: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; color: "green"; loading: boolean | undefined; }' is not assignable to type 'StatCardProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'change' are incompatible.
    Type 'number | undefined' is not assignable to type 'number'.
      Type 'undefined' is not assignable to type 'number'.

199   <StatCard
       ~~~~~~~~

client/src/components/admin/work-schedule/components/StatCard.tsx:215:4 - error TS2375: Type '{ title: string; value: number; change: number | undefined; icon: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; color: "yellow"; loading: boolean | undefined; }' is not assignable to type 'StatCardProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'change' are incompatible.
    Type 'number | undefined' is not assignable to type 'number'.
      Type 'undefined' is not assignable to type 'number'.

215   <StatCard
       ~~~~~~~~

client/src/components/admin/work-schedule/components/StatCard.tsx:230:4 - error TS2375: Type '{ title: string; value: number; change: number | undefined; icon: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; color: "purple"; loading: boolean | undefined; }' is not assignable to type 'StatCardProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'change' are incompatible.
    Type 'number | undefined' is not assignable to type 'number'.
      Type 'undefined' is not assignable to type 'number'.

230   <StatCard
       ~~~~~~~~

client/src/components/admin/work-schedule/components/StatCard.tsx:244:4 - error TS2375: Type '{ title: string; value: number; icon: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; color: "green" | "red"; loading: boolean | undefined; }' is not assignable to type 'StatCardProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'loading' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

244   <StatCard
       ~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:36:60 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string | (() => string)'.
  Type 'undefined' is not assignable to type 'string | (() => string)'.

36   const [selectedDate, setSelectedDate] = useState<string>(new Date().toISOString().split('T')[0]);
                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:47:5 - error TS2322: Type '{ start: string | undefined; end: string | undefined; }' is not assignable to type '{ start: string; end: string; }'.
  Types of property 'start' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

47     dateRange: initialFilters?.dateRange || {
       ~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:67:33 - error TS2345: Argument of type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Shift[]' is not assignable to parameter of type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Shift[]'.
  Type 'Shift' is missing the following properties from type 'Shift': employeeName, createdAt, updatedAt

67     let filtered = filterShifts(shifts, {
                                   ~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:81:57 - error TS2554: Expected 1-2 arguments, but got 3.

81         const validation = validateShift(shift, shifts, employee);
                                                           ~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:88:50 - error TS2339: Property 'overtimeHours' does not exist on type 'Shift'.

88       filtered = filtered.filter(shift => (shift.overtimeHours || 0) > 0);
                                                    ~~~~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:91:48 - error TS2554: Expected 1-2 arguments, but got 3.

91     return sortShifts(filtered, sorting.field, sorting.direction);
                                                  ~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:96:51 - error TS2345: Argument of type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Employee[]' is not assignable to parameter of type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Employee[]'.
  Type 'Employee' is missing the following properties from type 'Employee': status, createdAt, updatedAt

96     return shiftsToCalendarEvents(filteredShifts, employees);
                                                     ~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:101:35 - error TS2345: Argument of type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Employee[]' is not assignable to parameter of type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Employee[]'.
  Type 'Employee' is missing the following properties from type 'Employee': status, createdAt, updatedAt

101     return generateEmployeeColors(employees);
                                      ~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:108:29 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Date'.

108         return getWeekDates(selectedDate);
                                ~~~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:110:30 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Date'.

110         return getMonthDates(selectedDate);
                                 ~~~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:126:55 - error TS2554: Expected 1-2 arguments, but got 3.

126       const validation = validateShift(shift, shifts, employee);
                                                          ~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:128:41 - error TS2339: Property 'conflicts' does not exist on type '{ isValid: boolean; errors: string[]; }'.

128         allConflicts.push(...validation.conflicts);
                                            ~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:157:38 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Date'.

157       const weekDates = getWeekDates(date);
                                         ~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:158:18 - error TS2345: Argument of type '(prev: ScheduleFilter) => { dateRange: { start: Date | undefined; end: Date | undefined; }; departments: string[]; positions: string[]; employees: number[]; status: ShiftStatus[]; showConflicts: boolean; showOvertime: boolean; }' is not assignable to parameter of type 'SetStateAction<ScheduleFilter>'.
  Type '(prev: ScheduleFilter) => { dateRange: { start: Date | undefined; end: Date | undefined; }; departments: string[]; positions: string[]; employees: number[]; status: ShiftStatus[]; showConflicts: boolean; showOvertime: boolean; }' is not assignable to type '(prevState: ScheduleFilter) => ScheduleFilter'.
    Call signature return types '{ dateRange: { start: Date | undefined; end: Date | undefined; }; departments: string[]; positions: string[]; employees: number[]; status: ShiftStatus[]; showConflicts: boolean; showOvertime: boolean; }' and 'ScheduleFilter' are incompatible.
      The types of 'dateRange.start' are incompatible between these types.
        Type 'Date | undefined' is not assignable to type 'string'.
          Type 'undefined' is not assignable to type 'string'.

158       setFilters(prev => ({
                     ~~~~~~~~~~
159         ...prev,
    ~~~~~~~~~~~~~~~~
... 
163         }
    ~~~~~~~~~
164       }));
    ~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:166:40 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Date'.

166       const monthDates = getMonthDates(date);
                                           ~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:167:18 - error TS2345: Argument of type '(prev: ScheduleFilter) => { dateRange: { start: Date | undefined; end: Date | undefined; }; departments: string[]; positions: string[]; employees: number[]; status: ShiftStatus[]; showConflicts: boolean; showOvertime: boolean; }' is not assignable to parameter of type 'SetStateAction<ScheduleFilter>'.
  Type '(prev: ScheduleFilter) => { dateRange: { start: Date | undefined; end: Date | undefined; }; departments: string[]; positions: string[]; employees: number[]; status: ShiftStatus[]; showConflicts: boolean; showOvertime: boolean; }' is not assignable to type '(prevState: ScheduleFilter) => ScheduleFilter'.
    Call signature return types '{ dateRange: { start: Date | undefined; end: Date | undefined; }; departments: string[]; positions: string[]; employees: number[]; status: ShiftStatus[]; showConflicts: boolean; showOvertime: boolean; }' and 'ScheduleFilter' are incompatible.
      The types of 'dateRange.start' are incompatible between these types.
        Type 'Date | undefined' is not assignable to type 'string'.
          Type 'undefined' is not assignable to type 'string'.

167       setFilters(prev => ({
                     ~~~~~~~~~~
168         ...prev,
    ~~~~~~~~~~~~~~~~
... 
172         }
    ~~~~~~~~~
173       }));
    ~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:211:9 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

211         start: new Date().toISOString().split('T')[0],
            ~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:172:5
    172     start: string;
            ~~~~~
    The expected type comes from property 'start' which is declared here on type '{ start: string; end: string; }'

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:212:9 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

212         end: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]
            ~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:173:5
    173     end: string;
            ~~~
    The expected type comes from property 'end' which is declared here on type '{ start: string; end: string; }'

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:237:45 - error TS2554: Expected 1-2 arguments, but got 3.

237     return validateShift(shiftData, shifts, employee);
                                                ~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:256:22 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

256     handleDateSelect(currentDate.toISOString().split('T')[0]);
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:262:74 - error TS2339: Property 'totalHours' does not exist on type 'Shift'.

262     const totalHours = filteredShifts.reduce((sum, shift) => sum + shift.totalHours, 0);
                                                                             ~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:263:72 - error TS2339: Property 'totalPay' does not exist on type 'Shift'.

263     const totalPay = filteredShifts.reduce((sum, shift) => sum + shift.totalPay, 0);
                                                                           ~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:266:58 - error TS2339: Property 'overtimeHours' does not exist on type 'Shift'.

266     const overtimeShifts = filteredShifts.filter(s => (s.overtimeHours || 0) > 0).length;
                                                             ~~~~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:304:7 - error TS2532: Object is possibly 'undefined'.

304       groups[groupKey].push(shift);
          ~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/hooks/useShiftManagement.ts:304:29 - error TS2379: Argument of type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Shift' is not assignable to parameter of type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Shift' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type 'Shift' is missing the following properties from type 'Shift': hourlyRate, totalHours, totalPay, isRecurring

304       groups[groupKey].push(shift);
                                ~~~~~

client/src/components/admin/work-schedule/utils/schedule.utils.ts:204:46 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

204     isSameDay(parseISO(shift.date), parseISO(newShift.date))
                                                 ~~~~~~~~~~~~~

client/src/components/admin/work-schedule/utils/schedule.utils.ts:241:10 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ service: string; kitchen: string; management: string; cleaning: string; security: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ service: string; kitchen: string; management: string; cleaning: string; security: string; }'.

241   return labels[department] || department;
             ~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/utils/schedule.utils.ts:253:10 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ barista: string; server: string; chef: string; manager: string; cashier: string; cleaner: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ barista: string; server: string; chef: string; manager: string; cashier: string; cleaner: string; }'.

253   return labels[position] || position;
             ~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/utils/schedule.utils.ts:341:5 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

341     employeeColors[employee.id] = colors[index % colors.length];
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/advanced-loyalty.tsx:348:55 - error TS2379: Argument of type '{ pointsCost: number | undefined; id?: number; name?: string; description?: string; type?: "discount" | "free_item" | "special_offer"; value?: number; category?: string; available?: boolean; expiryDate?: string; usageCount?: number; maxUsage?: number; imageUrl?: string; }' is not assignable to parameter of type 'SetStateAction<Partial<LoyaltyReward>>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ pointsCost: number | undefined; id?: number; name?: string; description?: string; type?: "discount" | "free_item" | "special_offer"; value?: number; category?: string; available?: boolean; expiryDate?: string; usageCount?: number; maxUsage?: number; imageUrl?: string; }' is not assignable to type 'Partial<LoyaltyReward>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'pointsCost' are incompatible.
      Type 'number | undefined' is not assignable to type 'number'.
        Type 'undefined' is not assignable to type 'number'.

348                     onChange={(e) => setNewRewardData({...newRewardData, pointsCost: parseInt(e.target.value) || undefined})}
                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/advanced-loyalty.tsx:353:20 - error TS2375: Type '{ children: Element[]; value: "free_item" | "discount" | "special_offer" | undefined; onValueChange: (value: string) => void; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

353                   <Select
                       ~~~~~~

client/src/components/analytics-dashboard.tsx:32:73 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

32     const dayOrders = orders.filter(order => order.createdAt.startsWith(date));
                                                                           ~~~~

client/src/components/analytics-dashboard.tsx:44:5 - error TS2532: Object is possibly 'undefined'.

44     acc[order.platform].orders++;
       ~~~~~~~~~~~~~~~~~~~

client/src/components/analytics-dashboard.tsx:45:5 - error TS2532: Object is possibly 'undefined'.

45     acc[order.platform].revenue += order.totalAmount;
       ~~~~~~~~~~~~~~~~~~~

client/src/components/analytics-dashboard.tsx:86:68 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

86                 {orders.filter(order => order.createdAt.startsWith(today.toISOString().split('T')[0])).length}
                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/auth/PermissionGuard.tsx:26:26 - error TS2339: Property 'isLoading' does not exist on type '{ permissions: Permission[]; userRole: UserRole | null; loading: boolean; error: string | null; hasPermission: (module: ModuleName, action: PermissionAction) => boolean; ... 10 more ...; getUserAccessLevel: () => "admin" | ... 2 more ... | "basic"; }'.

26   const { hasPermission, isLoading } = usePermissions(user);
                            ~~~~~~~~~

client/src/components/auth/PermissionGuard.tsx:26:55 - error TS2554: Expected 0 arguments, but got 1.

26   const { hasPermission, isLoading } = usePermissions(user);
                                                         ~~~~

client/src/components/auth/PermissionGuard.tsx:32:22 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'ModuleName'.

32   if (!hasPermission(module, action)) {
                        ~~~~~~

client/src/components/auth/PermissionGuard.tsx:61:44 - error TS2554: Expected 0 arguments, but got 1.

61   const { hasPermission } = usePermissions(user);
                                              ~~~~

client/src/components/auth/PermissionGuard.tsx:63:24 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'ModuleName'.

63   return hasPermission(module, action);
                          ~~~~~~

client/src/components/dashboard-charts.tsx:387:26 - error TS18048: 'data' is possibly 'undefined'.

387                         {data.icon}
                             ~~~~

client/src/components/dashboard-charts.tsx:476:26 - error TS18048: 'data' is possibly 'undefined'.

476                         {data.icon}
                             ~~~~

client/src/components/dashboard-main.tsx:106:69 - error TS2339: Property 'count' does not exist on type '{}'.

106             <div className="text-2xl font-bold">{todayReservations?.count || 12}</div>
                                                                        ~~~~~

client/src/components/dashboard-main.tsx:121:64 - error TS2339: Property 'count' does not exist on type '{}'.

121             <div className="text-2xl font-bold">{activeOrders?.count || 8}</div>
                                                                   ~~~~~

client/src/components/dashboard-main.tsx:136:66 - error TS2339: Property 'revenue' does not exist on type '{}'.

136             <div className="text-2xl font-bold">{monthlyRevenue?.revenue || "0"}€</div>
                                                                     ~~~~~~~

client/src/components/dashboard-main.tsx:151:65 - error TS2339: Property 'rate' does not exist on type '{}'.

151             <div className="text-2xl font-bold">{occupancyRate?.rate || "78"}%</div>
                                                                    ~~~~

client/src/components/dashboard-main.tsx:171:26 - error TS2740: Type '{}' is missing the following properties from type 'any[]': length, pop, push, concat, and 29 more.

171               <LineChart data={dailyData}>
                             ~~~~

  node_modules/recharts/types/chart/generateCategoricalChart.d.ts:62:5
    62     data?: any[];
           ~~~~
    The expected type comes from property 'data' which is declared here on type 'IntrinsicAttributes & CategoricalChartProps & RefAttributes<{ readonly eventEmitterSymbol: Symbol; clipPathId: string; accessibilityManager: AccessibilityManager; ... 65 more ...; UNSAFE_componentWillUpdate?(nextProps: Readonly<...>, nextState: Readonly<...>, nextContext: any): void; }>'

client/src/components/dashboard-main.tsx:200:19 - error TS2740: Type '{}' is missing the following properties from type 'any[]': length, pop, push, concat, and 29 more.

200                   data={statusData.length > 0 ? statusData : [
                      ~~~~

  node_modules/recharts/types/polar/Pie.d.ts:54:5
    54     data?: any[];
           ~~~~
    The expected type comes from property 'data' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<Pie> & Pick<Readonly<Props>, "string" | "children" | ... 483 more ... | "cornerRadius"> & InexactPartial<...> & InexactPartial<...>'

client/src/components/dashboard-main.tsx:200:36 - error TS2339: Property 'length' does not exist on type '{}'.

200                   data={statusData.length > 0 ? statusData : [
                                       ~~~~~~

client/src/components/dashboard-main.tsx:210:32 - error TS2339: Property 'length' does not exist on type '{}'.

210                   {(statusData.length > 0 ? statusData : [{ name: "Aucune donnée", value: 1, color: "#9CA3AF" }]).map((entry, index) => (
                                   ~~~~~~

client/src/components/dashboard-main.tsx:210:115 - error TS2339: Property 'map' does not exist on type '{}'.

210                   {(statusData.length > 0 ? statusData : [{ name: "Aucune donnée", value: 1, color: "#9CA3AF" }]).map((entry, index) => (
                                                                                                                      ~~~

client/src/components/dashboard-main.tsx:210:120 - error TS7006: Parameter 'entry' implicitly has an 'any' type.

210                   {(statusData.length > 0 ? statusData : [{ name: "Aucune donnée", value: 1, color: "#9CA3AF" }]).map((entry, index) => (
                                                                                                                           ~~~~~

client/src/components/dashboard-main.tsx:210:127 - error TS7006: Parameter 'index' implicitly has an 'any' type.

210                   {(statusData.length > 0 ? statusData : [{ name: "Aucune donnée", value: 1, color: "#9CA3AF" }]).map((entry, index) => (
                                                                                                                                  ~~~~~

client/src/components/dashboard-main.tsx:218:27 - error TS2339: Property 'length' does not exist on type '{}'.

218               {statusData.length > 0 ? statusData.map((item, index: unknown) => (
                              ~~~~~~

client/src/components/dashboard-main.tsx:218:51 - error TS2339: Property 'map' does not exist on type '{}'.

218               {statusData.length > 0 ? statusData.map((item, index: unknown) => (
                                                      ~~~

client/src/components/dashboard-main.tsx:218:56 - error TS7006: Parameter 'item' implicitly has an 'any' type.

218               {statusData.length > 0 ? statusData.map((item, index: unknown) => (
                                                           ~~~~

client/src/components/dashboard-main.tsx:219:22 - error TS2322: Type 'unknown' is not assignable to type 'Key | null | undefined'.

219                 <div key={index} className="flex items-center gap-2">
                         ~~~

  node_modules/@types/react/index.d.ts:262:9
    262         key?: Key | null | undefined;
                ~~~
    The expected type comes from property 'key' which is declared here on type 'DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>'

client/src/components/dashboard-stats.tsx:93:47 - error TS2554: Expected 1 arguments, but got 2.

93       title: t('dashboard.todayReservations', "Réservations Aujourd'hui"),
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:100:43 - error TS2554: Expected 1 arguments, but got 2.

100       title: t('dashboard.pendingOrders', "Commandes en Cours"),
                                              ~~~~~~~~~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:107:45 - error TS2554: Expected 1 arguments, but got 2.

107       title: t('dashboard.activeCustomers', "Clients Actifs"),
                                                ~~~~~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:114:43 - error TS2554: Expected 1 arguments, but got 2.

114       title: t('dashboard.occupancyRate', "Taux d'Occupation"),
                                              ~~~~~~~~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:125:43 - error TS2554: Expected 1 arguments, but got 2.

125       'pending': t('orderStatus.pending', 'En Attente'),
                                              ~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:126:47 - error TS2554: Expected 1 arguments, but got 2.

126       'confirmed': t('orderStatus.confirmed', 'Confirmées'),
                                                  ~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:127:47 - error TS2554: Expected 1 arguments, but got 2.

127       'completed': t('orderStatus.completed', 'Terminées'),
                                                  ~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:128:47 - error TS2554: Expected 1 arguments, but got 2.

128       'cancelled': t('orderStatus.cancelled', 'Annulées')
                                                  ~~~~~~~~~~

client/src/components/dashboard-stats.tsx:168:43 - error TS2554: Expected 1 arguments, but got 2.

168               {t('dashboard.topProducts', 'Produits les Plus Vendus')}
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:186:46 - error TS2554: Expected 1 arguments, but got 2.

186                   {t('dashboard.noProducts', 'Aucun produit disponible')}
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:197:43 - error TS2554: Expected 1 arguments, but got 2.

197               {t('dashboard.orderStatus', 'État des Commandes')}
                                              ~~~~~~~~~~~~~~~~~~~~

client/src/components/dashboard-stats.tsx:217:44 - error TS2554: Expected 1 arguments, but got 2.

217                   {t('dashboard.noOrders', 'Aucune commande')}
                                               ~~~~~~~~~~~~~~~~~

client/src/components/dashboard/dashboard-main.tsx:244:11 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

244           icon={Calendar}
              ~~~~

  client/src/components/dashboard/dashboard-main.tsx:59:3
    59   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes & StatsCardProps'

client/src/components/dashboard/dashboard-main.tsx:252:11 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

252           icon={ShoppingCart}
              ~~~~

  client/src/components/dashboard/dashboard-main.tsx:59:3
    59   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes & StatsCardProps'

client/src/components/dashboard/dashboard-main.tsx:260:11 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

260           icon={DollarSign}
              ~~~~

  client/src/components/dashboard/dashboard-main.tsx:59:3
    59   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes & StatsCardProps'

client/src/components/dashboard/dashboard-main.tsx:268:11 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

268           icon={TrendingUp}
              ~~~~

  client/src/components/dashboard/dashboard-main.tsx:59:3
    59   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes & StatsCardProps'

client/src/components/dashboard/dashboard-main.tsx:281:13 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

281             icon={Users}
                ~~~~

  client/src/components/dashboard/dashboard-main.tsx:59:3
    59   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes & StatsCardProps'

client/src/components/dashboard/dashboard-main.tsx:288:13 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

288             icon={Coffee}
                ~~~~

  client/src/components/dashboard/dashboard-main.tsx:59:3
    59   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes & StatsCardProps'

client/src/components/dashboard/dashboard-main.tsx:296:13 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

296             icon={CheckCircle}
                ~~~~

  client/src/components/dashboard/dashboard-main.tsx:59:3
    59   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes & StatsCardProps'

client/src/components/dashboard/dashboard-main.tsx:304:13 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

304             icon={Clock}
                ~~~~

  client/src/components/dashboard/dashboard-main.tsx:59:3
    59   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes & StatsCardProps'

client/src/components/dashboard/sidebar.tsx:75:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

75       icon: Home,
         ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:82:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

82       icon: Calendar,
         ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:87:9 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

87         icon: Plus,
           ~~~~

client/src/components/dashboard/sidebar.tsx:95:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

95       icon: ShoppingCart,
         ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:103:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

103       icon: Users,
          ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:110:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

110       icon: MenuIcon,
          ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:117:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

117       icon: MessageSquare,
          ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:125:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

125       icon: User,
          ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:132:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

132       icon: BarChart3,
          ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:139:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

139       icon: History,
          ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/dashboard/sidebar.tsx:146:7 - error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ComponentType<{ className?: string; }>'.
  Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'FunctionComponent<{ className?: string; }>'.
    Types of property 'defaultProps' are incompatible.
      Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>> | undefined' is not assignable to type 'Partial<{ className?: string; }> | undefined'.
        Type 'Partial<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'Partial<{ className?: string; }>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'className' are incompatible.
            Type 'string | undefined' is not assignable to type 'string'.
              Type 'undefined' is not assignable to type 'string'.

146       icon: Settings,
          ~~~~

  client/src/components/dashboard/sidebar.tsx:42:3
    42   icon: React.ComponentType<{ className?: string }>;
         ~~~~
    The expected type comes from property 'icon' which is declared here on type 'NavItem'

client/src/components/green-black-home.tsx:8:27 - error TS2307: Cannot find module 'react-intersection-observer' or its corresponding type declarations.

8 import { useInView } from 'react-intersection-observer';
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/green-black-home.tsx:34:33 - error TS2448: Block-scoped variable 'menuCategories' used before its declaration.

34   const totalSlides = Math.ceil(menuCategories.length / slidesToShow);
                                   ~~~~~~~~~~~~~~

  client/src/components/green-black-home.tsx:36:9
    36   const menuCategories: MenuCategory[] = [
               ~~~~~~~~~~~~~~
    'menuCategories' is declared here.

client/src/components/green-black-home.tsx:34:33 - error TS2454: Variable 'menuCategories' is used before being assigned.

34   const totalSlides = Math.ceil(menuCategories.length / slidesToShow);
                                   ~~~~~~~~~~~~~~

client/src/components/interactive-reservation.tsx:135:48 - error TS2559: Type '"/api/menu/categories"' has no properties in common with type 'RequestInit'.

135       const response = await apiRequest('GET', '/api/menu/categories');
                                                   ~~~~~~~~~~~~~~~~~~~~~~

client/src/components/interactive-reservation.tsx:150:48 - error TS2559: Type '"/api/menu/items"' has no properties in common with type 'RequestInit'.

150       const response = await apiRequest('GET', '/api/menu/items');
                                                   ~~~~~~~~~~~~~~~~~

client/src/components/interactive-reservation.tsx:166:48 - error TS2559: Type 'string' has no properties in common with type 'RequestInit'.

166       const response = await apiRequest('GET', `/api/reservations/timeslots?date=${selectedDate}`);
                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/interactive-reservation.tsx:196:70 - error TS2554: Expected 1-2 arguments, but got 3.

196       const response = await apiRequest('POST', '/api/reservations', reservationData);
                                                                         ~~~~~~~~~~~~~~~

client/src/components/interactive-reservation.tsx:462:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ café: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; ... 17 more ...; glaces: ForwardRefExoticComponent<...>; }'.
  No index signature with a parameter of type 'string' was found on type '{ café: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; ... 17 more ...; glaces: ForwardRefExoticComponent<...>; }'.

462     return icons[name] || Sandwich;
               ~~~~~~~~~~~

client/src/components/interactive-reservation.tsx:1007:26 - error TS2375: Type '{ children: Element[]; value: "window" | "none" | "bar" | "indoor" | "outdoor" | "private" | undefined; onValueChange: (value: "window" | "none" | "bar" | "indoor" | "outdoor" | "private") => void; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

1007                         <Select
                              ~~~~~~

client/src/components/interactive-reservation.tsx:1029:26 - error TS2375: Type '{ children: Element[]; value: "date" | "none" | "celebration" | "birthday" | "anniversary" | "business" | undefined; onValueChange: (value: "date" | "none" | "celebration" | "birthday" | "anniversary" | "business") => void; }' is not assignable to type '{ value?: string; defaultValue?: string; onValueChange?(value: string): void; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

1029                         <Select
                              ~~~~~~

client/src/components/online-ordering.tsx:131:7 - error TS2532: Object is possibly 'undefined'.

131       newCart[existingItemIndex].quantity += 1;
          ~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/online-ordering.tsx:134:13 - error TS2375: Type '{ id: number; menuItem: MenuItem; quantity: number; customizations: Record<string, string>; notes: string | undefined; }' is not assignable to type 'CartItem' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'notes' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

134       const newItem: CartItem = {
                ~~~~~~~

client/src/components/reservation-notifications.tsx:89:27 - error TS2559: Type 'string' has no properties in common with type 'RequestInit'.

89       apiRequest("PATCH", `/api/admin/reservations/${reservationId}/notification-sent`),
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/table-management.tsx:372:40 - error TS2345: Argument of type '{ number: string; capacity: number; location: string; shape: string; features: string[]; status: string; x: number; y: number; }' is not assignable to parameter of type 'Partial<Table>'.
  Types of property 'status' are incompatible.
    Type 'string' is not assignable to type '"available" | "maintenance" | "occupied" | "reserved"'.

372             createTableMutation.mutate(tableData);
                                           ~~~~~~~~~

client/src/components/table-management.tsx:443:42 - error TS2345: Argument of type '{ id: number; number: string; capacity: number; location: string; shape: string; features: string[]; }' is not assignable to parameter of type 'Partial<Table> & { id: number; }'.
  Type '{ id: number; number: string; capacity: number; location: string; shape: string; features: string[]; }' is not assignable to type 'Partial<Table>'.
    Types of property 'shape' are incompatible.
      Type 'string' is not assignable to type '"round" | "square" | "rectangular"'.

443               updateTableMutation.mutate(tableData);
                                             ~~~~~~~~~

client/src/components/ui/accordion.tsx:181:12 - error TS2375: Type '{ children: Element[]; key: string; value: string; variant: "default" | "ghost" | "bordered" | "filled" | null | undefined; disabled: boolean | undefined; }' is not assignable to type 'Omit<AccordionItemProps & RefAttributes<HTMLDivElement>, "ref">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'disabled' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

181           <AccordionItem
               ~~~~~~~~~~~~~

client/src/components/ui/accordion.tsx:187:14 - error TS2375: Type '{ children: string; size: "default" | "sm" | "lg" | null | undefined; iconType: "chevron" | "plus-minus" | undefined; }' is not assignable to type '{ iconType?: "chevron" | "plus-minus"; hideIcon?: boolean; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'iconType' are incompatible.
    Type '"chevron" | "plus-minus" | undefined' is not assignable to type '"chevron" | "plus-minus"'.
      Type 'undefined' is not assignable to type '"chevron" | "plus-minus"'.

187             <AccordionTrigger size={size} iconType={iconType}>
                 ~~~~~~~~~~~~~~~~

client/src/components/ui/accordion.tsx:207:10 - error TS2375: Type '{ children: Element[]; key: string; value: string; variant: "default" | "ghost" | "bordered" | "filled" | null | undefined; disabled: boolean | undefined; }' is not assignable to type 'Omit<AccordionItemProps & RefAttributes<HTMLDivElement>, "ref">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'disabled' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

207         <AccordionItem
             ~~~~~~~~~~~~~

client/src/components/ui/accordion.tsx:213:12 - error TS2375: Type '{ children: string; size: "default" | "sm" | "lg" | null | undefined; iconType: "chevron" | "plus-minus" | undefined; }' is not assignable to type '{ iconType?: "chevron" | "plus-minus"; hideIcon?: boolean; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'iconType' are incompatible.
    Type '"chevron" | "plus-minus" | undefined' is not assignable to type '"chevron" | "plus-minus"'.
      Type 'undefined' is not assignable to type '"chevron" | "plus-minus"'.

213           <AccordionTrigger size={size} iconType={iconType}>
               ~~~~~~~~~~~~~~~~

client/src/components/ui/alert-dialog.tsx:248:6 - error TS2375: Type '{ children: Element; open: boolean | undefined; onOpenChange: ((open: boolean) => void) | undefined; }' is not assignable to type 'AlertDialogProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'open' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

248     <AlertDialog open={open} onOpenChange={onOpenChange}>
         ~~~~~~~~~~~

client/src/components/ui/chart.tsx:277:62 - error TS2345: Argument of type 'TooltipPayloadItem | undefined' is not assignable to parameter of type 'PayloadData'.
  Type 'undefined' is not assignable to type 'PayloadData'.

277       const itemConfig = getPayloadConfigFromPayload(config, item, key)
                                                                 ~~~~

client/src/components/ui/chart.tsx:339:17 - error TS2322: Type '{}' is not assignable to type 'string'.

339                 indicatorColor={indicatorColor}
                    ~~~~~~~~~~~~~~

  client/src/components/ui/chart.tsx:373:3
    373   indicatorColor: string
          ~~~~~~~~~~~~~~
    The expected type comes from property 'indicatorColor' which is declared here on type 'IntrinsicAttributes & { item: TooltipPayloadItem; index: number; itemConfig: ItemConfig | undefined; indicatorColor: string; ... 4 more ...; tooltipLabel: ReactNode; }'

client/src/components/ui/checkbox.tsx:49:6 - error TS2375: Type '{ children: Element; checked: CheckedState | undefined; suppressHydrationWarning?: boolean | undefined; color?: string | undefined; id: string | undefined; ... 274 more ...; className: string; }' is not assignable to type 'CheckboxProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'CheckedState | undefined' is not assignable to type 'CheckedState'.
      Type 'undefined' is not assignable to type 'CheckedState'.

49     <CheckboxPrimitive.Root
        ~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/checkbox.tsx:163:10 - error TS2375: Type '{ key: string; variant: "default" | "destructive" | "outline" | "secondary" | "success" | null | undefined; size: "default" | "sm" | "lg" | null | undefined; label: string; description: string | undefined; disabled: boolean | undefined; checked: boolean; onCheckedChange: (checked: CheckedState) => void; }' is not assignable to type 'CheckboxProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'description' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

163         <Checkbox
             ~~~~~~~~

client/src/components/ui/combobox.tsx:141:18 - error TS2375: Type '{ children: (Element | undefined)[]; key: string; value: string; disabled: boolean | undefined; onSelect: (selectedValue: string) => void; className: string; }' is not assignable to type 'Omit<Children & Omit<Pick<Pick<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof HTMLAttributes<...>> & { ...; } & { ...; }, "key" | ... 1 more ... | "asChild">, "onSelect" | ... 1 more ... | "disabled"> & { ...; } & RefAttributes<...>, "ref">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'disabled' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

141                 <CommandItem
                     ~~~~~~~~~~~

client/src/components/ui/context-menu.tsx:108:4 - error TS2375: Type '{ children: (Element | ReactNode)[]; suppressHydrationWarning?: boolean | undefined; color?: string | undefined; id?: string | undefined; lang?: string | undefined; ... 265 more ...; checked: CheckedState | undefined; }' is not assignable to type 'ContextMenuCheckboxItemProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'CheckedState | undefined' is not assignable to type 'CheckedState'.
      Type 'undefined' is not assignable to type 'CheckedState'.

108   <ContextMenuPrimitive.CheckboxItem
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/data-grid.tsx:91:16 - error TS2339: Property 'accessor' does not exist on type 'DataGridColumn<T>'.

91     if (column.accessor) {
                  ~~~~~~~~

client/src/components/ui/data-grid.tsx:92:21 - error TS2339: Property 'accessor' does not exist on type 'DataGridColumn<T>'.

92       return column.accessor(row);
                       ~~~~~~~~

client/src/components/ui/data-grid.tsx:94:16 - error TS2339: Property 'accessorKey' does not exist on type 'DataGridColumn<T>'.

94     if (column.accessorKey) {
                  ~~~~~~~~~~~

client/src/components/ui/data-grid.tsx:95:34 - error TS2339: Property 'accessorKey' does not exist on type 'DataGridColumn<T>'.

95       return (row as any)[column.accessorKey];
                                    ~~~~~~~~~~~

client/src/components/ui/data-grid.tsx:118:48 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

118         const column = columns.find(col => col.id === columnId);
                                                   ~~

client/src/components/ui/data-grid.tsx:122:24 - error TS2339: Property 'type' does not exist on type 'DataGridColumn<T>'.

122             if (column.type === 'boolean') {
                           ~~~~

client/src/components/ui/data-grid.tsx:133:46 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

133       const column = columns.find(col => col.id === sortState.columnId);
                                                 ~~

client/src/components/ui/data-grid.tsx:140:22 - error TS2339: Property 'type' does not exist on type 'DataGridColumn<T>'.

140           if (column.type === 'number') {
                         ~~~~

client/src/components/ui/data-grid.tsx:142:29 - error TS2339: Property 'type' does not exist on type 'DataGridColumn<T>'.

142           } else if (column.type === 'date') {
                                ~~~~

client/src/components/ui/data-grid.tsx:164:44 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

164     const column = columns.find(col => col.id === columnId);
                                               ~~

client/src/components/ui/data-grid.tsx:219:20 - error TS2339: Property 'type' does not exist on type 'DataGridColumn<T>'.

219     switch (column.type) {
                       ~~~~

client/src/components/ui/data-grid.tsx:322:33 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

322                     key={column.id}
                                    ~~

client/src/components/ui/data-grid.tsx:335:73 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

335                     onClick={() => column.sortable && handleSort(column.id)}
                                                                            ~~

client/src/components/ui/data-grid.tsx:338:23 - error TS2322: Type 'ComponentType<{ column: DataGridColumn<T>; }> | undefined' is not assignable to type 'ReactNode'.
  Type 'ComponentClass<{ column: DataGridColumn<T>; }, any>' is not assignable to type 'ReactNode'.

338                       {column.header}
                          ~~~~~~~~~~~~~~~

client/src/components/ui/data-grid.tsx:339:73 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

339                       {column.sortable && sortState.columnId === column.id && (
                                                                            ~~

client/src/components/ui/data-grid.tsx:385:57 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

385                           key={`${globalIndex}-${column.id}`}
                                                            ~~

client/src/components/ui/data-grid.tsx:485:47 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

485     setColumns(prev => prev.filter(col => col.id !== columnId));
                                                  ~~

client/src/components/ui/data-grid.tsx:489:44 - error TS2339: Property 'id' does not exist on type 'DataGridColumn<T>'.

489     setColumns(prev => prev.map(col => col.id === columnId ? { ...col, ...updates } : col));
                                               ~~

client/src/components/ui/data-table.tsx:138:31 - error TS2379: Argument of type '{ data: TData[]; columns: ColumnDef<TData, TValue>[]; onSortingChange: React.Dispatch<React.SetStateAction<SortingState>>; ... 13 more ...; enableGlobalFilter: boolean | undefined; }' is not assignable to parameter of type 'TableOptions<TData>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'enableColumnFilters' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

138   const table = useReactTable({
                                  ~
139     data,
    ~~~~~~~~~
... 
162     enableGlobalFilter: filtering.globalFilter,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
163   })
    ~~~

client/src/components/ui/dropdown-menu.tsx:97:4 - error TS2375: Type '{ children: (Element | ReactNode)[]; suppressHydrationWarning?: boolean | undefined; color?: string | undefined; id?: string | undefined; lang?: string | undefined; ... 265 more ...; checked: CheckedState | undefined; }' is not assignable to type 'DropdownMenuCheckboxItemProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'CheckedState | undefined' is not assignable to type 'CheckedState'.
      Type 'undefined' is not assignable to type 'CheckedState'.

97   <DropdownMenuPrimitive.CheckboxItem
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/error-boundary.tsx:44:3 - error TS4114: This member must have an 'override' modifier because it overrides a member in the base class 'Component<ErrorBoundaryProps, ErrorBoundaryState, any>'.

44   componentDidCatch(error: Error, errorInfo: ErrorInfo) {
     ~~~~~~~~~~~~~~~~~

client/src/components/ui/error-boundary.tsx:82:3 - error TS4114: This member must have an 'override' modifier because it overrides a member in the base class 'Component<ErrorBoundaryProps, ErrorBoundaryState, any>'.

82   render() {
     ~~~~~~

client/src/components/ui/file-upload.tsx:85:23 - error TS2379: Argument of type '{ file: File; id: string; progress: number; error: string | undefined; preview: string | undefined; }' is not assignable to parameter of type 'UploadedFile' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'error' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

 85         newFiles.push({
                          ~
 86           file,
    ~~~~~~~~~~~~~~~
... 
 90           preview,
    ~~~~~~~~~~~~~~~~~~
 91         });
    ~~~~~~~~~

client/src/components/ui/form.tsx:216:11 - error TS7031: Binding element 'field' implicitly has an 'any' type.

216       {({ field, fieldState, formState }) => (
              ~~~~~

client/src/components/ui/form.tsx:216:18 - error TS7031: Binding element 'fieldState' implicitly has an 'any' type.

216       {({ field, fieldState, formState }) => (
                     ~~~~~~~~~~

client/src/components/ui/form.tsx:216:30 - error TS7031: Binding element 'formState' implicitly has an 'any' type.

216       {({ field, fieldState, formState }) => (
                                 ~~~~~~~~~

client/src/components/ui/form.tsx:222:27 - error TS2345: Argument of type '{ field: any; }' is not assignable to parameter of type '{ field: ControllerRenderProps<TFieldValues, TName>; fieldState: ControllerFieldState; formState: UseFormStateReturn<TFieldValues>; }'.
  Type '{ field: any; }' is missing the following properties from type '{ field: ControllerRenderProps<TFieldValues, TName>; fieldState: ControllerFieldState; formState: UseFormStateReturn<TFieldValues>; }': fieldState, formState

222             {props.render({ field })}
                              ~~~~~~~~~

client/src/components/ui/index.ts:75:1 - error TS2308: Module "./toaster" has already exported a member named 'Toaster'. Consider explicitly re-exporting to resolve the ambiguity.

75 export * from "./sonner"
   ~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:89:1 - error TS2308: Module "./avatar" has already exported a member named 'AvatarProps'. Consider explicitly re-exporting to resolve the ambiguity.

89 export * from "./types"
   ~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:89:1 - error TS2308: Module "./date-picker" has already exported a member named 'DateRangePickerProps'. Consider explicitly re-exporting to resolve the ambiguity.

89 export * from "./types"
   ~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:89:1 - error TS2308: Module "./radio-group" has already exported a member named 'RadioGroupItemProps'. Consider explicitly re-exporting to resolve the ambiguity.

89 export * from "./types"
   ~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:90:1 - error TS2308: Module "./types" has already exported a member named 'ToastVariant'. Consider explicitly re-exporting to resolve the ambiguity.

90 export * from './use-toast'
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:93:27 - error TS2300: Duplicate identifier 'ComponentSize'.

93 export type { SafeObject, ComponentSize, ComponentVariant, BaseUIComponentProps } from './ui-utils'
                             ~~~~~~~~~~~~~

client/src/components/ui/index.ts:93:42 - error TS2300: Duplicate identifier 'ComponentVariant'.

93 export type { SafeObject, ComponentSize, ComponentVariant, BaseUIComponentProps } from './ui-utils'
                                            ~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:100:3 - error TS2724: '"./types"' has no exported member named 'LabelProps'. Did you mean 'TableProps'?

100   LabelProps,
      ~~~~~~~~~~

client/src/components/ui/index.ts:101:3 - error TS2305: Module '"./types"' has no exported member 'TextareaProps'.

101   TextareaProps,
      ~~~~~~~~~~~~~

client/src/components/ui/index.ts:114:3 - error TS2724: '"./types"' has no exported member named 'DataTableProps'. Did you mean 'TableProps'?

114   DataTableProps,
      ~~~~~~~~~~~~~~

client/src/components/ui/index.ts:125:3 - error TS2724: '"./types"' has no exported member named 'AlertProps'. Did you mean 'TableProps'?

125   AlertProps,
      ~~~~~~~~~~

client/src/components/ui/index.ts:128:3 - error TS2300: Duplicate identifier 'ComponentVariant'.

128   ComponentVariant,
      ~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:128:3 - error TS2305: Module '"./types"' has no exported member 'ComponentVariant'.

128   ComponentVariant,
      ~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:129:3 - error TS2300: Duplicate identifier 'ComponentSize'.

129   ComponentSize,
      ~~~~~~~~~~~~~

client/src/components/ui/index.ts:134:3 - error TS2305: Module '"./types"' has no exported member 'Country'.

134   Country,
      ~~~~~~~

client/src/components/ui/index.ts:135:3 - error TS2305: Module '"./types"' has no exported member 'InternationalPhoneInputProps'.

135   InternationalPhoneInputProps,
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:138:3 - error TS2305: Module '"./types"' has no exported member 'LoadingSpinnerProps'.

138   LoadingSpinnerProps,
      ~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:139:3 - error TS2305: Module '"./types"' has no exported member 'LoadingPageProps'.

139   LoadingPageProps,
      ~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:140:3 - error TS2724: '"./types"' has no exported member named 'SkeletonLoaderProps'. Did you mean 'SkeletonProps'?

140   SkeletonLoaderProps,
      ~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:143:3 - error TS2305: Module '"./types"' has no exported member 'ChartConfig'.

143   ChartConfig,
      ~~~~~~~~~~~

client/src/components/ui/index.ts:144:3 - error TS2305: Module '"./types"' has no exported member 'StatsCardProps'.

144   StatsCardProps,
      ~~~~~~~~~~~~~~

client/src/components/ui/index.ts:147:3 - error TS2305: Module '"./types"' has no exported member 'BreadcrumbProps'.

147   BreadcrumbProps,
      ~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:148:3 - error TS2305: Module '"./types"' has no exported member 'PaginationProps'.

148   PaginationProps,
      ~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:151:3 - error TS2305: Module '"./types"' has no exported member 'ConfirmationDialogProps'.

151   ConfirmationDialogProps,
      ~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:154:3 - error TS2305: Module '"./types"' has no exported member 'ResizableLayoutProps'.

154   ResizableLayoutProps,
      ~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:155:3 - error TS2305: Module '"./types"' has no exported member 'ResizablePanelGroupProps'.

155   ResizablePanelGroupProps,
      ~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:156:3 - error TS2305: Module '"./types"' has no exported member 'ResizableHandleProps'.

156   ResizableHandleProps,
      ~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:159:3 - error TS2305: Module '"./types"' has no exported member 'AspectRatioProps'.

159   AspectRatioProps,
      ~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:162:3 - error TS2305: Module '"./types"' has no exported member 'CollapsibleTriggerButtonProps'.

162   CollapsibleTriggerButtonProps,
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/index.ts:163:3 - error TS2305: Module '"./types"' has no exported member 'CollapsibleContentWrapperProps'.

163   CollapsibleContentWrapperProps,
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/input-otp.tsx:9:33 - error TS2312: An interface can only extend an object type or intersection of object types with statically known members.

9 interface InputOTPProps extends React.ComponentPropsWithoutRef<typeof OTPInput> {
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/input-otp.tsx:22:17 - error TS2339: Property 'containerClassName' does not exist on type 'InputOTPProps'.

22 >(({ className, containerClassName, ...props }, ref) => (
                   ~~~~~~~~~~~~~~~~~~

client/src/components/ui/input-otp.tsx:23:4 - error TS2322: Type '{ ref: ForwardedRef<HTMLInputElement>; containerClassName: string; className: string; }' is not assignable to type 'IntrinsicAttributes & (OTPInputProps & RefAttributes<HTMLInputElement>)'.
  Property 'maxLength' is missing in type '{ ref: ForwardedRef<HTMLInputElement>; containerClassName: string; className: string; }' but required in type '{ value?: string; onChange?: (newValue: string) => unknown; maxLength: number; textAlign?: "center" | "left" | "right"; onComplete?: (...args: any[]) => unknown; pushPasswordManagerStrategy?: "none" | "increase-width"; pasteTransformer?: (pasted: string) => string; containerClassName?: string; noScriptCSSFallback?: ...'.

23   <OTPInput
      ~~~~~~~~

  node_modules/input-otp/dist/index.d.ts:18:5
    18     maxLength: number;
           ~~~~~~~~~
    'maxLength' is declared here.

client/src/components/ui/input-otp.tsx:48:11 - error TS2339: Property 'char' does not exist on type 'SlotProps | undefined'.

48   const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]
             ~~~~

client/src/components/ui/input-otp.tsx:48:17 - error TS2339: Property 'hasFakeCaret' does not exist on type 'SlotProps | undefined'.

48   const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]
                   ~~~~~~~~~~~~

client/src/components/ui/input-otp.tsx:48:31 - error TS2339: Property 'isActive' does not exist on type 'SlotProps | undefined'.

48   const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]
                                 ~~~~~~~~

client/src/components/ui/international-phone-input.tsx:63:18 - error TS2320: Interface 'InternationalPhoneInputProps' cannot simultaneously extend types 'Omit<InputHTMLAttributes<HTMLInputElement>, "onChange" | "value">' and 'VariantProps<(props?: (ConfigVariants<{ variant: { default: string; compact: string; separated: string; }; size: { sm: string; default: string; lg: string; }; }> & ClassProp) | undefined) => string>'.
  Named property 'size' of types 'Omit<InputHTMLAttributes<HTMLInputElement>, "onChange" | "value">' and 'VariantProps<(props?: (ConfigVariants<{ variant: { default: string; compact: string; separated: string; }; size: { sm: string; default: string; lg: string; }; }> & ClassProp) | undefined) => string>' are not identical.

63 export interface InternationalPhoneInputProps
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/international-phone-input.tsx:103:7 - error TS2322: Type 'Country | undefined' is not assignable to type 'Country'.
  Type 'undefined' is not assignable to type 'Country'.

103       return countries.find(c => c.code === defaultCountry) || countries[0]
          ~~~~~~

client/src/components/ui/international-phone-input.tsx:108:5 - error TS2322: Type 'Country | undefined' is not assignable to type 'Country'.
  Type 'undefined' is not assignable to type 'Country'.

108     return country || countries.find(c => c.code === defaultCountry) || countries[0]
        ~~~~~~

client/src/components/ui/international-phone-input.tsx:213:56 - error TS2322: Type 'number | undefined' is not assignable to type '"default" | "sm" | "lg" | null | undefined'.
  Type 'number' is not assignable to type '"default" | "sm" | "lg" | null | undefined'.

213       <div className={cn(phoneInputVariants({ variant, size }), className)}>
                                                           ~~~~

client/src/components/ui/international-phone-input.tsx:269:13 - error TS2322: Type 'HTMLInputTypeAttribute | undefined' is not assignable to type '"number" | "search" | "time" | "text" | "password" | "date" | "email" | "tel" | "url" | "datetime-local"'.
  Type 'undefined' is not assignable to type '"number" | "search" | "time" | "text" | "password" | "date" | "email" | "tel" | "url" | "datetime-local"'.

269             type="tel"
                ~~~~

  client/src/components/ui/input.tsx:42:3
    42   type?: AllowedInputType
         ~~~~
    The expected type comes from property 'type' which is declared here on type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'

client/src/components/ui/international-phone-input.tsx:392:6 - error TS2375: Type '{ placeholder?: string; required?: boolean; disabled?: boolean; className?: string; value: string | undefined; onChange: (newValue: string, isValid: boolean) => void; }' is not assignable to type 'InternationalPhoneInputProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

392     <InternationalPhoneInput
         ~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/menubar.tsx:130:4 - error TS2375: Type '{ children: (Element | ReactNode)[]; suppressHydrationWarning?: boolean | undefined; color?: string | undefined; id?: string | undefined; lang?: string | undefined; ... 265 more ...; checked: CheckedState | undefined; }' is not assignable to type 'MenubarCheckboxItemProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'CheckedState | undefined' is not assignable to type 'CheckedState'.
      Type 'undefined' is not assignable to type 'CheckedState'.

130   <MenubarPrimitive.CheckboxItem
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/performance.tsx:30:13 - error TS7030: Not all code paths return a value.

30   useEffect(() => {
               ~~~~~~~

client/src/components/ui/performance.tsx:78:32 - error TS18048: 'entry' is possibly 'undefined'.

78         const isIntersecting = entry.isIntersecting;
                                  ~~~~~

client/src/components/ui/performance.tsx:285:15 - error TS18048: 'entry' is possibly 'undefined'.

285           if (entry.isIntersecting) {
                  ~~~~~

client/src/components/ui/phone-input.tsx:75:67 - error TS2345: Argument of type 'Country | undefined' is not assignable to parameter of type 'Country | (() => Country)'.
  Type 'undefined' is not assignable to type 'Country | (() => Country)'.

75   const [selectedCountry, setSelectedCountry] = useState<Country>(countries[0]); // Maroc par défaut
                                                                     ~~~~~~~~~~~~

client/src/components/ui/radio-group.tsx:156:10 - error TS2375: Type '{ key: string; value: string; variant: "default" | "destructive" | "outline" | "secondary" | null | undefined; size: "default" | "sm" | "lg" | null | undefined; label: string; description: string | undefined; disabled: boolean | undefined; }' is not assignable to type 'RadioGroupItemProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'description' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

156         <RadioGroupItem
             ~~~~~~~~~~~~~~

client/src/components/ui/resizable.tsx:24:18 - error TS2320: Interface 'ResizablePanelGroupProps' cannot simultaneously extend types 'Omit<Omit<HTMLAttributes<keyof HTMLElementTagNameMap>, "id"> & { autoSaveId?: string | null | undefined; className?: string | undefined; ... 7 more ...; dir?: "auto" | ... 2 more ... | undefined; } & { ...; } & RefAttributes<...>, "ref">' and 'VariantProps<(props?: (ConfigVariants<{ direction: { horizontal: string; vertical: string; }; }> & ClassProp) | undefined) => string>'.
  Named property 'direction' of types 'Omit<Omit<HTMLAttributes<keyof HTMLElementTagNameMap>, "id"> & { autoSaveId?: string | null | undefined; className?: string | undefined; ... 7 more ...; dir?: "auto" | ... 2 more ... | undefined; } & { ...; } & RefAttributes<...>, "ref">' and 'VariantProps<(props?: (ConfigVariants<{ direction: { horizontal: string; vertical: string; }; }> & ClassProp) | undefined) => string>' are not identical.

24 export interface ResizablePanelGroupProps
                    ~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/resizable.tsx:92:5 - error TS2375: Type '{ children: false | Element | undefined; suppressHydrationWarning?: boolean | undefined; color?: string | undefined; lang?: string | undefined; style?: CSSProperties; ... 263 more ...; className: string; }' is not assignable to type 'IntrinsicAttributes & Omit<HTMLAttributes<keyof HTMLElementTagNameMap>, "id" | "onFocus" | "onBlur" | "onClick" | "onPointerDown" | "onPointerUp"> & { ...; } & { ...; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Property 'ref' does not exist on type 'IntrinsicAttributes & Omit<HTMLAttributes<keyof HTMLElementTagNameMap>, "id" | "onFocus" | "onBlur" | "onClick" | "onPointerDown" | "onPointerUp"> & { ...; } & { ...; }'.

92     ref={ref}
       ~~~

client/src/components/ui/resizable.tsx:172:6 - error TS2375: Type '{ children: Element[]; direction: "horizontal" | "vertical"; onLayout: (newSizes: number[]) => void; className: string | undefined; }' is not assignable to type 'ResizablePanelGroupProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'className' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

172     <ResizablePanelGroup
         ~~~~~~~~~~~~~~~~~~~

client/src/components/ui/sonner.tsx:12:6 - error TS2375: Type '{ id?: string; invert?: boolean; theme: "dark" | "system" | "light" | undefined; position?: Position; hotkey?: string[]; richColors?: boolean; expand?: boolean; duration?: number; gap?: number; ... 12 more ...; key?: Key | ... 1 more ... | undefined; }' is not assignable to type 'ToasterProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'theme' are incompatible.
    Type '"dark" | "system" | "light" | undefined' is not assignable to type '"dark" | "system" | "light"'.
      Type 'undefined' is not assignable to type '"dark" | "system" | "light"'.

12     <Sonner
        ~~~~~~

client/src/components/ui/stats-card.tsx:32:18 - error TS2430: Interface 'StatsCardProps' incorrectly extends interface 'VariantProps<(props?: (ConfigVariants<{ variant: { default: string; gradient: string; highlighted: string; }; trend: { up: string; down: string; neutral: string; none: string; }; }> & ClassProp) | undefined) => string>'.
  Types of property 'trend' are incompatible.
    Type '{ value: number; label?: string; isPercentage?: boolean; }' is not assignable to type '"up" | "down" | "none" | "neutral" | null | undefined'.

32 export interface StatsCardProps
                    ~~~~~~~~~~~~~~

client/src/components/ui/stats-card.tsx:92:13 - error TS2322: Type '"up" | "down" | "none" | "neutral" | { value: number; label?: string; isPercentage?: boolean; }' is not assignable to type '"up" | "down" | "none" | "neutral" | null | undefined'.
  Type '{ value: number; label?: string; isPercentage?: boolean; }' is not assignable to type '"up" | "down" | "none" | "neutral" | null | undefined'.

92             trend: trendVariant || determineTrendVariant()
               ~~~~~

client/src/components/ui/theme-provider.tsx:67:13 - error TS7030: Not all code paths return a value.

67   useEffect(() => {
               ~~~~~~~

client/src/components/ui/types.ts:172:12 - error TS2304: Cannot find name 'Locale'.

172   locale?: Locale
               ~~~~~~

client/src/components/ui/ui-utils.ts:26:29 - error TS2686: 'React' refers to a UMD global, but the current file is a module. Consider adding an import instead.

26   const [state, setState] = React.useState<T>(initialValue)
                               ~~~~~

client/src/components/ui/ui-utils.ts:28:24 - error TS2686: 'React' refers to a UMD global, but the current file is a module. Consider adding an import instead.

28   const setSafeState = React.useCallback((value: T) => {
                          ~~~~~

client/src/components/user-profile.tsx:210:95 - error TS2345: Argument of type 'UserProfile' is not assignable to parameter of type 'Record<string, unknown>'.
  Index signature for type 'string' is missing in type 'UserProfile'.

210               <form onSubmit={profileForm.handleSubmit((data) => updateProfileMutation.mutate(data))} className="space-y-4">
                                                                                                  ~~~~

client/src/constants/permissions.ts:51:5 - error TS2322: Type 'undefined[]' is not assignable to type 'PermissionAction[]'.
  Type 'undefined' is not assignable to type 'PermissionAction'.

51     permissions: [,],
       ~~~~~~~~~~~

client/src/constants/permissions.ts:53:5 - error TS2322: Type 'undefined[]' is not assignable to type 'PermissionAction[]'.
  Type 'undefined' is not assignable to type 'PermissionAction'.

53     backups: [,],
       ~~~~~~~

client/src/constants/permissions.ts:54:5 - error TS2322: Type 'undefined[]' is not assignable to type 'PermissionAction[]'.
  Type 'undefined' is not assignable to type 'PermissionAction'.

54     accounting: [,],
       ~~~~~~~~~~

client/src/contexts/ThemeContext.tsx:43:3 - error TS2739: Type 'ThemeContextType' is missing the following properties from type 'ReactElement<any, any>': type, props, key

43   return context;
     ~~~~~~

client/src/hooks/index.ts:26:10 - error TS2724: '"./use-mobile"' has no exported member named 'useMobile'. Did you mean 'useIsMobile'?

26 export { useMobile } from './use-mobile';
            ~~~~~~~~~

  client/src/hooks/use-mobile.tsx:5:17
    5 export function useIsMobile() {
                      ~~~~~~~~~~~
    'useIsMobile' is declared here.

client/src/hooks/use-toast.ts:45:23 - error TS2379: Argument of type '{ title: string; description: string | undefined; variant: "success"; duration: number | undefined; }' is not assignable to parameter of type 'ToastProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'description' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

45     return this.toast({ title, description, variant: 'success', duration });
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/hooks/use-toast.ts:49:23 - error TS2379: Argument of type '{ title: string; description: string | undefined; variant: "destructive"; duration: number | undefined; }' is not assignable to parameter of type 'ToastProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'description' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

49     return this.toast({ title, description, variant: 'destructive', duration });
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/hooks/use-toast.ts:53:23 - error TS2379: Argument of type '{ title: string; description: string | undefined; variant: "warning"; duration: number | undefined; }' is not assignable to parameter of type 'ToastProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'description' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

53     return this.toast({ title, description, variant: 'warning', duration });
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/hooks/use-toast.ts:57:23 - error TS2379: Argument of type '{ title: string; description: string | undefined; variant: "info"; duration: number | undefined; }' is not assignable to parameter of type 'ToastProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'description' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

57     return this.toast({ title, description, variant: 'info', duration });
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/hooks/use-toast.ts:85:23 - error TS2379: Argument of type '{ title: string; description: string | undefined; variant: "warning"; action: { label: string; onClick: () => void; }; }' is not assignable to parameter of type 'ToastProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'description' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

 85     return this.toast({
                          ~
 86       title,
    ~~~~~~~~~~~~
... 
 95       }
    ~~~~~~~
 96     });
    ~~~~~

client/src/hooks/use-toast.ts:100:23 - error TS2379: Argument of type '{ title: string; description: string | undefined; variant: "info"; duration: number; }' is not assignable to parameter of type 'ToastProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'description' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

100     return this.toast({
                          ~
101       title,
    ~~~~~~~~~~~~
... 
104       duration: 0 // Persistant jusqu'à dismiss
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
105     });
    ~~~~~

client/src/hooks/use-toast.ts:159:33 - error TS2304: Cannot find name 'toast'.

159   success: (message: string) => toast({ title: "Succès", description: message }),
                                    ~~~~~

client/src/hooks/use-toast.ts:160:31 - error TS2304: Cannot find name 'toast'.

160   error: (message: string) => toast({ title: "Erreur", description: message, variant: "destructive" }),
                                  ~~~~~

client/src/hooks/use-toast.ts:161:30 - error TS2304: Cannot find name 'toast'.

161   info: (message: string) => toast({ title: "Information", description: message }),
                                 ~~~~~

client/src/hooks/use-toast.ts:162:33 - error TS2304: Cannot find name 'toast'.

162   warning: (message: string) => toast({ title: "Attention", description: message, variant: "destructive" })
                                    ~~~~~

client/src/hooks/use-user.tsx:2:15 - error TS2724: '"@shared/schema"' has no exported member named 'User'. Did you mean 'users'?

2 import type { User } from "@shared/schema";
                ~~~~

  shared/schema.ts:19:14
    19 export const users = pgTable('users', {
                    ~~~~~
    'users' is declared here.

client/src/hooks/usePermissions.ts:124:7 - error TS2412: Type 'string | undefined' is not assignable to type 'number | undefined' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

124       userId: user?.id
          ~~~~~~

  client/src/hooks/usePermissions.ts:22:3
    22   userId?: number;
         ~~~~~~
    The expected type comes from property 'userId' which is declared here on type 'PermissionsCache'

client/src/hooks/usePermissions.ts:157:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(input: string | URL | Request, init?: RequestInit | undefined): Promise<Response>', gave the following error.
    Object literal may only specify known properties, and 'timeout' does not exist in type 'RequestInit'.
  Overload 2 of 2, '(input: URL | RequestInfo, init?: RequestInit | undefined): Promise<Response>', gave the following error.
    Object literal may only specify known properties, and 'timeout' does not exist in type 'RequestInit'.

157         timeout: 10000 // 10 secondes
            ~~~~~~~


client/src/hooks/usePermissionsSync.ts:69:38 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?

69     if (!isAuthenticated || !user || isAdmin) return;
                                        ~~~~~~~

client/src/hooks/usePermissionsSync.ts:84:38 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?

84     if (!isAuthenticated || !user || isAdmin) return;
                                        ~~~~~~~

client/src/hooks/useQRCode.ts:2:25 - error TS2307: Cannot find module 'qrcode' or its corresponding type declarations.

2 import * as QRCode from 'qrcode';
                          ~~~~~~~~

client/src/hooks/useReservations.ts:192:34 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

192     return getReservationsByDate(today);
                                     ~~~~~

client/src/hooks/useReservations.ts:197:67 - error TS18048: 'today' is possibly 'undefined'.

197     return reservations.filter(reservation => reservation.date >= today);
                                                                      ~~~~~

client/src/hooks/useUser.ts:201:15 - error TS2345: Argument of type 'User' is not assignable to parameter of type 'SetStateAction<User | null>'.
  Property 'username' is missing in type 'import("/home/runner/workspace/client/src/hooks/useAuth").User' but required in type 'User'.

201       setUser(contextUser);
                  ~~~~~~~~~~~

  client/src/hooks/useUser.ts:7:3
    7   username: string;
        ~~~~~~~~
    'username' is declared here.

client/src/hooks/useUser.ts:206:5 - error TS2322: Type 'User | User | null' is not assignable to type 'User | null'.
  Property 'username' is missing in type 'import("/home/runner/workspace/client/src/hooks/useAuth").User' but required in type 'User'.

206     user: user || contextUser,
        ~~~~

  client/src/hooks/useUser.ts:7:3
    7   username: string;
        ~~~~~~~~
    'username' is declared here.
  client/src/hooks/useUser.ts:22:3
    22   user: User | null;
         ~~~~
    The expected type comes from property 'user' which is declared here on type 'UseUserReturn'

client/src/lib/auth-utils.ts:117:38 - error TS2379: Argument of type '{ method: string; headers: { 'Content-Type': string; }; body: string | undefined; }' is not assignable to parameter of type 'RequestInit' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'body' are incompatible.
    Type 'string | undefined' is not assignable to type 'BodyInit | null'.
      Type 'undefined' is not assignable to type 'BodyInit | null'.

117     return this.request<T>(endpoint, {
                                         ~
118       method: 'POST',
    ~~~~~~~~~~~~~~~~~~~~~
... 
122       body: data ? JSON.stringify(data) : undefined,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
123     });
    ~~~~~

client/src/lib/auth-utils.ts:131:38 - error TS2379: Argument of type '{ method: string; headers: { 'Content-Type': string; }; body: string | undefined; }' is not assignable to parameter of type 'RequestInit' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'body' are incompatible.
    Type 'string | undefined' is not assignable to type 'BodyInit | null'.
      Type 'undefined' is not assignable to type 'BodyInit | null'.

131     return this.request<T>(endpoint, {
                                         ~
132       method: 'PUT',
    ~~~~~~~~~~~~~~~~~~~~
... 
136       body: data ? JSON.stringify(data) : undefined,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
137     });
    ~~~~~

client/src/lib/excel-export.ts:98:44 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(o: {}): string[]', gave the following error.
    Argument of type 'ExportData | undefined' is not assignable to parameter of type '{}'.
      Type 'undefined' is not assignable to type '{}'.
  Overload 2 of 2, '(o: object): string[]', gave the following error.
    Argument of type 'ExportData | undefined' is not assignable to parameter of type 'object'.
      Type 'undefined' is not assignable to type 'object'.

98     const columns = headers || Object.keys(data[0]);
                                              ~~~~~~~


client/src/lib/security.ts:271:32 - error TS2532: Object is possibly 'undefined'.

271     while (calls.length > 0 && calls[0] <= now - windowMs) {
                                   ~~~~~~~~

client/src/pages/AdminFinal.tsx:79:44 - error TS2554: Expected 0 arguments, but got 1.

79   const { hasPermission } = usePermissions(user?.role || 'employe');
                                              ~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/Reservations.tsx:39:20 - error TS2339: Property 'mutate' does not exist on type 'UseMutateFunction<Reservation, Error, ReservationForm, unknown>'.

39     addReservation.mutate(form, {
                      ~~~~~~

client/src/pages/Reservations.tsx:102:56 - error TS2339: Property 'isPending' does not exist on type 'UseMutateFunction<Reservation, Error, ReservationForm, unknown>'.

102         <button type="submit" disabled={addReservation.isPending}>
                                                           ~~~~~~~~~

client/src/pages/Reservations.tsx:103:27 - error TS2339: Property 'isPending' does not exist on type 'UseMutateFunction<Reservation, Error, ReservationForm, unknown>'.

103           {addReservation.isPending ? "Envoi..." : "Réserver"}
                              ~~~~~~~~~

client/src/pages/register.tsx:26:5 - error TS2322: Type 'null' is not assignable to type 'Element'.

26     return null;
       ~~~~~~

client/src/pages/reservation-with-cart.tsx:81:7 - error TS2322: Type 'string' is not assignable to type 'Date'.

81       date: "",
         ~~~~

client/src/pages/reservation-with-cart.tsx:92:38 - error TS2559: Type '"/api/menu/categories"' has no properties in common with type 'RequestInit'.

92     queryFn: () => apiRequest("GET", "/api/menu/categories").then(res => res.json()),
                                        ~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:98:38 - error TS2559: Type '"/api/menu/items"' has no properties in common with type 'RequestInit'.

98     queryFn: () => apiRequest("GET", "/api/menu/items").then(res => res.json()),
                                        ~~~~~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:223:18 - error TS2375: Type '{ children: any[]; value: string | undefined; onValueChange: (value: string) => void; }' is not assignable to type 'TabsProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

223                 <Tabs value={selectedCategory?.toString()} onValueChange={(value) => setSelectedCategory(parseInt(value))}>
                     ~~~~

client/src/pages/reservation-with-cart.tsx:346:46 - error TS2345: Argument of type '(data: ReservationFormData) => void' is not assignable to parameter of type 'SubmitHandler<TFieldValues>'.
  Types of parameters 'data' and 'data' are incompatible.
    Type 'TFieldValues' is not assignable to type '{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }'.
      Type 'FieldValues' is missing the following properties from type '{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }': time, date, partySize

346                 <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
                                                 ~~~~~~~~

client/src/pages/reservation-with-cart.tsx:352:38 - error TS2345: Argument of type '"customerName"' is not assignable to parameter of type '"id" | "time" | "status" | "date" | "notes" | "createdAt" | "updatedAt" | "partySize" | "specialRequests" | "customerId" | "tableId"'.

352                         {...register("customerName")}
                                         ~~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:355:31 - error TS2339: Property 'customerName' does not exist on type 'FieldErrors<{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }>'.

355                       {errors.customerName && (
                                  ~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:357:35 - error TS2339: Property 'customerName' does not exist on type 'FieldErrors<{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }>'.

357                           {errors.customerName.message}
                                      ~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:367:38 - error TS2345: Argument of type '"customerEmail"' is not assignable to parameter of type '"id" | "time" | "status" | "date" | "notes" | "createdAt" | "updatedAt" | "partySize" | "specialRequests" | "customerId" | "tableId"'.

367                         {...register("customerEmail")}
                                         ~~~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:370:31 - error TS2551: Property 'customerEmail' does not exist on type 'FieldErrors<{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }>'. Did you mean 'customerId'?

370                       {errors.customerEmail && (
                                  ~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:372:35 - error TS2551: Property 'customerEmail' does not exist on type 'FieldErrors<{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }>'. Did you mean 'customerId'?

372                           {errors.customerEmail.message}
                                      ~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:381:38 - error TS2345: Argument of type '"customerPhone"' is not assignable to parameter of type '"id" | "time" | "status" | "date" | "notes" | "createdAt" | "updatedAt" | "partySize" | "specialRequests" | "customerId" | "tableId"'.

381                         {...register("customerPhone")}
                                         ~~~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:385:31 - error TS2339: Property 'customerPhone' does not exist on type 'FieldErrors<{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }>'.

385                       {errors.customerPhone && (
                                  ~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:387:35 - error TS2339: Property 'customerPhone' does not exist on type 'FieldErrors<{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }>'.

387                           {errors.customerPhone.message}
                                      ~~~~~~~~~~~~~

client/src/pages/reservation-with-cart.tsx:438:38 - error TS2345: Argument of type '"guests"' is not assignable to parameter of type '"id" | "time" | "status" | "date" | "notes" | "createdAt" | "updatedAt" | "partySize" | "specialRequests" | "customerId" | "tableId"'.

438                         {...register("guests", { valueAsNumber: true })}
                                         ~~~~~~~~

client/src/pages/reservation-with-cart.tsx:441:31 - error TS2339: Property 'guests' does not exist on type 'FieldErrors<{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }>'.

441                       {errors.guests && (
                                  ~~~~~~

client/src/pages/reservation-with-cart.tsx:443:35 - error TS2339: Property 'guests' does not exist on type 'FieldErrors<{ time: string; date: Date; partySize: number; id?: number | undefined; status?: "cancelled" | "completed" | "pending" | "confirmed" | undefined; notes?: string | null | undefined; ... 4 more ...; tableId?: number | ... 1 more ... | undefined; }>'.

443                           {errors.guests.message}
                                      ~~~~~~

client/src/types/admin.ts:128:3 - error TS2717: Subsequent property declarations must have the same type.  Property 'role' must be of type '"directeur" | "employe"', but here has type 'string'.

128   role: string;
      ~~~~

  client/src/types/admin.ts:4:3
    4   role: 'directeur' | 'employe';
        ~~~~
    'role' was also declared here.

client/src/types/admin.ts:171:10 - error TS2304: Cannot find name 'AuthenticatedUser'.

171   user?: AuthenticatedUser;
             ~~~~~~~~~~~~~~~~~

server/ImageManager.ts:31:36 - error TS2322: Type '{ id: number; menuItemId: number | null; imageUrl: string; altText: string | null; isPrimary: boolean; sortOrder: number; createdAt: Date; } | undefined' is not assignable to type 'MenuItemImage | null'.
  Type 'undefined' is not assignable to type 'MenuItemImage | null'.

31         return result.length > 0 ? result[0] : null;
                                      ~~~~~~~~~

server/ImageManager.ts:39:9 - error TS2322: Type '{ id: number; menuItemId: number | null; imageUrl: string; altText: string | null; isPrimary: boolean; sortOrder: number; createdAt: Date; }[]' is not assignable to type 'MenuItemImage[]'.
  Type '{ id: number; menuItemId: number | null; imageUrl: string; altText: string | null; isPrimary: boolean; sortOrder: number; createdAt: Date; }' is missing the following properties from type 'MenuItemImage': uploadMethod, updatedAt

39         return await db
           ~~~~~~

server/ImageManager.ts:60:57 - error TS2532: Object is possibly 'undefined'.

60             altText = menuItem.length > 0 ? `Image de ${menuItem[0].name}` : 'Image du menu';
                                                           ~~~~~~~~~~~

server/ImageManager.ts:73:14 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { imageUrl: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; sortOrder?: number | ... 2 more ... | undefined; altText?: string | ... 3 more ... | undefined; menuItemId?: number | ... 3 more ... | undefined; isPrimary?: boolean | ... 2 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'uploadMethod' does not exist in type '{ imageUrl: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; sortOrder?: number | ... 2 more ... | undefined; altText?: string | ... 3 more ... | undefined; menuItemId?: number | ... 3 more...'.
  Overload 2 of 2, '(values: { imageUrl: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; sortOrder?: number | ... 2 more ... | undefined; altText?: string | ... 3 more ... | undefined; menuItemId?: number | ... 3 more ... | undefined; isPrimary?: boolean | ... 2 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'altText' does not exist in type '{ imageUrl: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; sortOrder?: number | ... 2 more ... | undefined; altText?: string | ... 3 more ... | undefined; menuItemId?: number | ... 3 more...'.

73             .values({
                ~~~~~~


server/ImageManager.ts:80:9 - error TS2322: Type '{ id: number; imageUrl: string; createdAt: Date; sortOrder: number; altText: string | null; menuItemId: number | null; isPrimary: boolean; } | undefined' is not assignable to type 'MenuItemImage'.
  Type 'undefined' is not assignable to type 'MenuItemImage'.

80         return newImage;
           ~~~~~~

server/ImageManager.ts:101:28 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "menu_item_id"; tableName: "menu_item_images"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'number | null' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'null' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<number | null>, right: number | SQLWrapper | null): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "menu_item_id"; tableName: "menu_item_images"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number | null>'.
      Type 'PgColumn<{ name: "menu_item_id"; tableName: "menu_item_images"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number | null>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "menu_item_id"; tableName: "menu_item_images"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

101                     .where(eq(menuItemImages.menuItemId, existingImage[0].menuItemId));
                               ~~


server/ImageManager.ts:101:58 - error TS2532: Object is possibly 'undefined'.

101                     .where(eq(menuItemImages.menuItemId, existingImage[0].menuItemId));
                                                             ~~~~~~~~~~~~~~~~

server/ImageManager.ts:107:32 - error TS2353: Object literal may only specify known properties, and 'updatedAt' does not exist in type '{ imageUrl?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; id?: number | SQL<unknown> | PgColumn<...> | undefined; ... 4 more ...; isPrimary?: boolean | ... 2 more ... | undefined; }'.

107             .set({ ...updates, updatedAt: new Date() })
                                   ~~~~~~~~~

server/ImageManager.ts:111:9 - error TS2322: Type '{ id: number; menuItemId: number | null; imageUrl: string; altText: string | null; isPrimary: boolean; sortOrder: number; createdAt: Date; } | null' is not assignable to type 'MenuItemImage | null'.
  Type '{ id: number; menuItemId: number | null; imageUrl: string; altText: string | null; isPrimary: boolean; sortOrder: number; createdAt: Date; }' is missing the following properties from type 'MenuItemImage': uploadMethod, updatedAt

111         return result[0] || null;
            ~~~~~~

server/ImageManager.ts:148:52 - error TS2532: Object is possibly 'undefined'.

148         const menuItemName = menuItem.length > 0 ? menuItem[0].name : 'Élément de menu';
                                                       ~~~~~~~~~~~

server/ImageManager.ts:190:25 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

190                         imageUrl: imageMapping[menuItem.name],
                            ~~~~~~~~

  server/image-manager.ts:16:3
    16   imageUrl: string;
         ~~~~~~~~
    The expected type comes from property 'imageUrl' which is declared here on type 'InsertMenuItemImage'

server/ImageManager.ts:205:17 - error TS2304: Cannot find name 'logger'.

205                 logger.error(`❌ Erreur migration image pour ${menuItem.name}:`, { error: error instanceof Error ? error.message : 'Erreur inconnue' });
                    ~~~~~~

server/config/production.ts:5:23 - error TS2307: Cannot find module 'express-rate-limit' or its corresponding type declarations.

5 import rateLimit from 'express-rate-limit';
                        ~~~~~~~~~~~~~~~~~~~~

server/config/production.ts:55:17 - error TS7006: Parameter 'req' implicitly has an 'any' type.

55       handler: (req, res) => {
                   ~~~

server/config/production.ts:55:22 - error TS7006: Parameter 'res' implicitly has an 'any' type.

55       handler: (req, res) => {
                        ~~~

server/config/production.ts:114:9 - error TS18048: 'allowed' is possibly 'undefined'.

114         allowed.includes('*') ?
            ~~~~~~~

server/config/production.ts:115:22 - error TS18048: 'allowed' is possibly 'undefined'.

115         origin.match(allowed.replace('*', '.*')) :
                         ~~~~~~~

server/middleware/api-validator.ts:60:59 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Error'.

60         logger.error('🚨 Réponse API non-JSON détectée:', body.substring(0, 100));
                                                             ~~~~~~~~~~~~~~~~~~~~~~

server/middleware/api-validator.ts:91:53 - error TS2345: Argument of type 'ApiResponse<unknown>' is not assignable to parameter of type 'Record<string, unknown>'.
  Index signature for type 'string' is missing in type 'ApiResponse<unknown>'.

91       logger.warn('Schéma de réponse non standard', response);
                                                       ~~~~~~~~

server/middleware/api-validator.ts:102:70 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Error'.

102         logger.error('🚨 Tentative d\'envoi de HTML sur route API:', req.path);
                                                                         ~~~~~~~~

server/middleware/api-validator.ts:150:5 - error TS2353: Object literal may only specify known properties, and 'error' does not exist in type 'Error'.

150     error: error,
        ~~~~~

server/middleware/api-validator.ts:178:55 - error TS2345: Argument of type 'ApiResponse<unknown>' is not assignable to parameter of type 'Record<string, unknown>'.
  Index signature for type 'string' is missing in type 'ApiResponse<unknown>'.

178     logger.warn('Response schema validation failed:', response);
                                                          ~~~~~~~~

server/middleware/api-validator.ts:204:5 - error TS2322: Type '{ name: string; message: string; stack: string | undefined; details: {} | null | undefined; }' is not assignable to type 'string | StandardError'.
  Type '{ name: string; message: string; stack: string | undefined; details: {} | null | undefined; }' is not assignable to type 'StandardError' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'stack' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'.

204     return {
        ~~~~~~

server/middleware/auth.ts:163:13 - error TS18048: 'user' is possibly 'undefined'.

163         id: user.id,
                ~~~~

server/middleware/auth.ts:164:16 - error TS18048: 'user' is possibly 'undefined'.

164         email: user.email,
                   ~~~~

server/middleware/auth.ts:165:20 - error TS18048: 'user' is possibly 'undefined'.

165         firstName: user.firstName || '',
                       ~~~~

server/middleware/auth.ts:166:19 - error TS18048: 'user' is possibly 'undefined'.

166         lastName: user.lastName || '',
                      ~~~~

server/middleware/auth.ts:167:16 - error TS18048: 'user' is possibly 'undefined'.

167         role: (user.role as AppRole) || 'customer',
                   ~~~~

server/middleware/auth.ts:168:46 - error TS18048: 'user' is possibly 'undefined'.

168         permissions: this.getRolePermissions(user.role as AppRole),
                                                 ~~~~

server/middleware/auth.ts:169:19 - error TS18048: 'user' is possibly 'undefined'.

169         isActive: user.isActive ?? true
                      ~~~~

server/middleware/auth.ts:389:35 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

389       const resourceId = parseInt(req.params[resourceIdParam]);
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/middleware/authorization.ts:20:52 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

20         .where(and(eq(permissions.userId, parseInt(user.id)), eq(permissions.module, moduleName)))
                                                      ~~~~~~~

server/middleware/cache-advanced.ts:275:21 - error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.

275     metrics: typeof this.metrics;
                        ~~~~

  server/middleware/cache-advanced.ts:275:5
    275     metrics: typeof this.metrics;
            ~~~~~~~
    An outer value of 'this' is shadowed by this container.

server/middleware/cache-advanced.ts:359:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

359       return res.json(cachedData);
          ~~~~~~

server/middleware/cache-advanced.ts:500:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

500       return res.status(400).json({
          ~~~~~~

server/middleware/database-middleware.ts:2:10 - error TS2614: Module '"../db"' has no exported member 'checkDatabaseHealth'. Did you mean to use 'import checkDatabaseHealth from "../db"' instead?

2 import { checkDatabaseHealth, initializeDatabase } from '../db';
           ~~~~~~~~~~~~~~~~~~~

server/middleware/database-middleware.ts:2:31 - error TS2614: Module '"../db"' has no exported member 'initializeDatabase'. Did you mean to use 'import initializeDatabase from "../db"' instead?

2 import { checkDatabaseHealth, initializeDatabase } from '../db';
                                ~~~~~~~~~~~~~~~~~~

server/middleware/database-middleware.ts:24:50 - error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Record<string, unknown> | undefined'.

24       logger.error('❌ Échec de la reconnexion:', reconnectError);
                                                    ~~~~~~~~~~~~~~

server/middleware/error-handler-enhanced.ts:25:5 - error TS2412: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'.

25     this.requestId = requestId;
       ~~~~~~~~~~~~~~

server/middleware/error-handler-enhanced.ts:37:5 - error TS2412: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'.

37     this.field = field;
       ~~~~~~~~~~

server/middleware/error-handler-enhanced.ts:162:7 - error TS2412: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'.

162       errorResponse.error.stack = error.stack;
          ~~~~~~~~~~~~~~~~~~~~~~~~~

server/middleware/error-handler.ts:18:11 - error TS2395: Individual declarations in merged declaration 'AppError' must be all exported or all local.

18 interface AppError extends Error {
             ~~~~~~~~

server/middleware/error-handler.ts:34:11 - error TS2395: Individual declarations in merged declaration 'ValidationError' must be all exported or all local.

34 interface ValidationError extends AppError {
             ~~~~~~~~~~~~~~~

server/middleware/error-handler.ts:102:5 - error TS2304: Cannot find name 'metrics'.

102     metrics.increment('server.errors', 1);
        ~~~~~~~

server/middleware/error-handler.ts:187:7 - error TS2304: Cannot find name 'metrics'.

187       metrics.increment('database.errors', 1);
          ~~~~~~~

server/middleware/error-handler.ts:255:65 - error TS2379: Argument of type '{ code: string | undefined; details: any; expose: true; }' is not assignable to parameter of type '{ code?: string; details?: any; retryAfter?: number; expose?: boolean; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'code' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

255         createErrorResponse(err.statusCode || 500, err.message, {
                                                                    ~
256           code: err.code?.toString(),
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
... 
258           expose: true
    ~~~~~~~~~~~~~~~~~~~~~~
259         })
    ~~~~~~~~~

server/middleware/error-handler.ts:297:14 - error TS2395: Individual declarations in merged declaration 'AppError' must be all exported or all local.

297 export class AppError extends Error {
                 ~~~~~~~~

server/middleware/error-handler.ts:327:14 - error TS2395: Individual declarations in merged declaration 'ValidationError' must be all exported or all local.

327 export class ValidationError extends AppError {
                 ~~~~~~~~~~~~~~~

server/middleware/logger.ts:42:11 - error TS2375: Type '{ timestamp: string; level: "INFO"; message: string; metadata: Record<string, unknown> | undefined; }' is not assignable to type 'LogEntry' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'metadata' are incompatible.
    Type 'Record<string, unknown> | undefined' is not assignable to type 'Record<string, unknown>'.
      Type 'undefined' is not assignable to type 'Record<string, unknown>'.

42     const entry: LogEntry = {
             ~~~~~

server/middleware/logger.ts:54:11 - error TS2375: Type '{ timestamp: string; level: "WARN"; message: string; metadata: Record<string, unknown> | undefined; }' is not assignable to type 'LogEntry' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'metadata' are incompatible.
    Type 'Record<string, unknown> | undefined' is not assignable to type 'Record<string, unknown>'.
      Type 'undefined' is not assignable to type 'Record<string, unknown>'.

54     const entry: LogEntry = {
             ~~~~~

server/middleware/logger.ts:73:43 - error TS2345: Argument of type '"" | Error' is not assignable to parameter of type 'Error | undefined'.
  Type 'string' is not assignable to type 'Error'.

73     logger.error(`🚨 [ERROR] ${message}`, error || '');
                                             ~~~~~~~~~~~

server/middleware/logger.ts:83:9 - error TS2322: Type 'unknown' is not assignable to type 'Record<string, unknown>'.

83         metadata
           ~~~~~~~~

  server/middleware/logger.ts:17:3
    17   metadata?: Record<string, unknown>;
         ~~~~~~~~
    The expected type comes from property 'metadata' which is declared here on type 'LogEntry'

server/middleware/logger.ts:101:11 - error TS2375: Type '{ timestamp: string; level: "ERROR" | "INFO"; method: string; url: string; statusCode: number; responseTime: number; userAgent: string | undefined; ip: string | undefined; userId: any; message: string; metadata: { ...; }; }' is not assignable to type 'LogEntry' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'userAgent' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

101     const logEntry: LogEntry = {
              ~~~~~~~~

server/middleware/logger.ts:119:12 - error TS2341: Property 'writeLog' is private and only accessible within class 'Logger'.

119     logger.writeLog(logEntry);
               ~~~~~~~~

server/middleware/logging.ts:216:11 - error TS2375: Type '{ timestamp: string; level: LogLevel; module: string; message: string; meta: Record<string, unknown> | undefined; }' is not assignable to type 'LogEntry' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'meta' are incompatible.
    Type 'Record<string, unknown> | undefined' is not assignable to type 'Record<string, unknown>'.
      Type 'undefined' is not assignable to type 'Record<string, unknown>'.

216     const entry: LogEntry = {
              ~~~~~

server/middleware/logging.ts:230:57 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

230       const logFileDate = this.currentLogFile?.includes(currentDate);
                                                            ~~~~~~~~~~~

server/middleware/metrics.ts:13:7 - error TS2300: Duplicate identifier 'MetricsCollector'.

13 class MetricsCollector {
         ~~~~~~~~~~~~~~~~

server/middleware/metrics.ts:29:7 - error TS2451: Cannot redeclare block-scoped variable 'metricsCollector'.

29 const metricsCollector = new MetricsCollector();
         ~~~~~~~~~~~~~~~~

server/middleware/metrics.ts:31:14 - error TS2451: Cannot redeclare block-scoped variable 'metricsMiddleware'.

31 export const metricsMiddleware = (req: Request, res: Response, next: NextFunction): void => {
                ~~~~~~~~~~~~~~~~~

server/middleware/metrics.ts:43:7 - error TS2412: Type 'number | undefined' is not assignable to type 'string | undefined' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

43       userId: req.user?.id
         ~~~~~~

  server/middleware/metrics.ts:10:3
    10   userId?: string;
         ~~~~~~
    The expected type comes from property 'userId' which is declared here on type 'MetricsData'

server/middleware/metrics.ts:50:10 - error TS2300: Duplicate identifier 'metricsCollector'.

50 export { metricsCollector };
            ~~~~~~~~~~~~~~~~

server/middleware/metrics.ts:83:7 - error TS2300: Duplicate identifier 'MetricsCollector'.

83 class MetricsCollector {
         ~~~~~~~~~~~~~~~~

server/middleware/metrics.ts:84:11 - error TS2564: Property 'metrics' has no initializer and is not definitely assigned in the constructor.

84   private metrics: Metrics;
             ~~~~~~~

server/middleware/metrics.ts:209:7 - error TS2451: Cannot redeclare block-scoped variable 'metricsCollector'.

209 const metricsCollector = new MetricsCollector();
          ~~~~~~~~~~~~~~~~

server/middleware/metrics.ts:211:14 - error TS2451: Cannot redeclare block-scoped variable 'metricsMiddleware'.

211 export const metricsMiddleware = (req: Request, res: Response, next: NextFunction) => {
                 ~~~~~~~~~~~~~~~~~

server/middleware/metrics.ts:219:22 - error TS2339: Property 'recordRequest' does not exist on type 'MetricsCollector'.

219     metricsCollector.recordRequest(req.method, route, res.statusCode, responseTime);
                         ~~~~~~~~~~~~~

server/middleware/metrics.ts:227:10 - error TS2300: Duplicate identifier 'metricsCollector'.

227 export { metricsCollector };
             ~~~~~~~~~~~~~~~~

server/middleware/validation.ts:123:22 - error TS2339: Property 'input' does not exist on type 'ZodIssue'.
  Property 'input' does not exist on type 'ZodInvalidTypeIssue & { fatal?: boolean | undefined; message: string; }'.

123           value: err.input
                         ~~~~~

server/middleware/validation.ts:391:47 - error TS2339: Property 'partial' does not exist on type 'ZodType<T, ZodTypeDef, T>'.

391   update: <T>(schema: ZodSchema<T>) => schema.partial(),
                                                  ~~~~~~~

server/middleware/validation.ts:404:32 - error TS2339: Property 'shape' does not exist on type 'ZodEffects<ZodObject<{ startDate: ZodOptional<ZodString>; endDate: ZodOptional<ZodString>; }, "strip", ZodTypeAny, { startDate?: string | undefined; endDate?: string | undefined; }, { ...; }>, { ...; }, { ...; }>'.

404     ...commonSchemas.dateRange.shape
                                   ~~~~~

server/modules/ai-automation.ts:83:52 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

83       const command = await this.parseVoiceCommand(transcript);
                                                      ~~~~~~~~~~

server/modules/ai-automation.ts:282:27 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

282     const hour = parseInt(time.split(':')[0]);
                              ~~~~~~~~~~~~~~~~~~

server/routes/admin/customers.routes.ts:76:40 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

76       .where(eq(customers.id, parseInt(id)))
                                          ~~

server/routes/admin/customers.routes.ts:80:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

80       return res.status(404).json({
         ~~~~~~

server/routes/admin/customers.routes.ts:111:40 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

111       .where(eq(customers.id, parseInt(id)))
                                           ~~

server/routes/admin/customers.routes.ts:115:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

115       return res.status(404).json({
          ~~~~~~

server/routes/admin/customers.routes.ts:142:40 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

142       .where(eq(customers.id, parseInt(id)))
                                           ~~

server/routes/admin/customers.routes.ts:146:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

146       return res.status(404).json({
          ~~~~~~

server/routes/admin/customers.routes.ts:181:16 - error TS2532: Object is possibly 'undefined'.

181         total: totalCustomers[0].count,
                   ~~~~~~~~~~~~~~~~~

server/routes/admin/customers.routes.ts:182:17 - error TS2532: Object is possibly 'undefined'.

182         active: activeCustomers[0].count,
                    ~~~~~~~~~~~~~~~~~~

server/routes/admin/menu-admin.routes.ts:53:30 - error TS2339: Property 'sortOrder' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'.

53         sortOrder: menuItems.sortOrder,
                                ~~~~~~~~~

server/routes/admin/menu-admin.routes.ts:60:26 - error TS2339: Property 'sortOrder' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'.

60       .orderBy(menuItems.sortOrder, menuItems.name);
                            ~~~~~~~~~

server/routes/admin/menu-admin.routes.ts:97:16 - error TS7030: Not all code paths return a value.

97   asyncHandler(async (req: Request, res: Response) => {
                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/admin/menu-admin.routes.ts:136:16 - error TS7030: Not all code paths return a value.

136   asyncHandler(async (req: Request, res: Response) => {
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/admin/reservations.routes.ts:48:7 - error TS2741: Property 'where' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"reservations", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; ...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"reservations", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; ...'.

48       query = query.where(sql`DATE(${reservations.date}) = ${date}`);
         ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:402:5
    402     where(where: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined): PgSelectWithout<this, TDynamic, 'where'>;
            ~~~~~
    'where' is declared here.

server/routes/admin/reservations.routes.ts:52:7 - error TS2741: Property 'where' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"reservations", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; ...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"reservations", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; ...'.

52       query = query.where(eq(reservations.status, status as any));
         ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:402:5
    402     where(where: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined): PgSelectWithout<this, TDynamic, 'where'>;
            ~~~~~
    'where' is declared here.

server/routes/admin/reservations.routes.ts:114:43 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

114       .where(eq(reservations.id, parseInt(id)))
                                              ~~

server/routes/admin/reservations.routes.ts:118:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

118       return res.status(404).json({
          ~~~~~~

server/routes/admin/reservations.routes.ts:145:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

145       return res.status(400).json({
          ~~~~~~

server/routes/admin/reservations.routes.ts:157:43 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

157       .where(eq(reservations.id, parseInt(id)))
                                              ~~

server/routes/admin/reservations.routes.ts:161:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

161       return res.status(404).json({
          ~~~~~~

server/routes/admin/reservations.routes.ts:188:43 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

188       .where(eq(reservations.id, parseInt(id)))
                                              ~~

server/routes/admin/reservations.routes.ts:192:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

192       return res.status(404).json({
          ~~~~~~

server/routes/admin/reservations.routes.ts:240:16 - error TS2532: Object is possibly 'undefined'.

240         total: totalReservations[0].count,
                   ~~~~~~~~~~~~~~~~~~~~

server/routes/admin/reservations.routes.ts:241:16 - error TS2532: Object is possibly 'undefined'.

241         today: todayReservations[0].count,
                   ~~~~~~~~~~~~~~~~~~~~

server/routes/admin/reservations.routes.ts:242:20 - error TS2532: Object is possibly 'undefined'.

242         confirmed: confirmedReservations[0].count,
                       ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/admin/reservations.routes.ts:243:18 - error TS2532: Object is possibly 'undefined'.

243         pending: pendingReservations[0].count
                     ~~~~~~~~~~~~~~~~~~~~~~

server/routes/admin/statistics.routes.ts:50:16 - error TS2532: Object is possibly 'undefined'.

50         total: totalCustomers[0].count,
                  ~~~~~~~~~~~~~~~~~

server/routes/admin/statistics.routes.ts:51:23 - error TS2532: Object is possibly 'undefined'.

51         newThisMonth: newCustomersThisMonth[0].count,
                         ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/admin/statistics.routes.ts:55:21 - error TS2532: Object is possibly 'undefined'.

55         totalItems: totalMenuItems[0].count,
                       ~~~~~~~~~~~~~~~~~

server/routes/admin/statistics.routes.ts:56:22 - error TS2532: Object is possibly 'undefined'.

56         activeItems: activeMenuItems[0].count,
                        ~~~~~~~~~~~~~~~~~~

server/routes/admin/statistics.routes.ts:57:26 - error TS2532: Object is possibly 'undefined'.

57         totalCategories: totalCategories[0].count
                            ~~~~~~~~~~~~~~~~~~

server/routes/admin/statistics.routes.ts:197:16 - error TS2532: Object is possibly 'undefined'.

197         total: totalCustomers[0].count,
                   ~~~~~~~~~~~~~~~~~

server/routes/admin/statistics.routes.ts:198:17 - error TS2532: Object is possibly 'undefined'.

198         active: activeCustomers[0].count,
                    ~~~~~~~~~~~~~~~~~~

server/routes/admin/statistics.routes.ts:199:42 - error TS2532: Object is possibly 'undefined'.

199         averageLoyaltyPoints: Math.round(averageLoyaltyPoints[0].avg || 0)
                                             ~~~~~~~~~~~~~~~~~~~~~~~

server/routes/advanced-features.ts:5:11 - error TS2430: Interface 'AuthenticatedRequest' incorrectly extends interface 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of property 'user' are incompatible.
    Type '{ id: number; username: string; role: string; }' is missing the following properties from type 'AuthUser': email, firstName, lastName, permissions, isActive

5 interface AuthenticatedRequest extends Request {
            ~~~~~~~~~~~~~~~~~~~~

server/routes/advanced-features.ts:20:26 - error TS7030: Not all code paths return a value.

20 const authenticateUser = (req: Request, res: Response, next: NextFunction) => {
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/advanced-features.ts:33:6 - error TS2352: Conversion of type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' to type 'AuthenticatedRequest' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Types of property 'user' are incompatible.
    Property 'username' is missing in type 'AuthUser' but required in type '{ id: number; username: string; role: string; }'.

33     (req as AuthenticatedRequest).user = decoded;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/routes/advanced-features.ts:8:5
    8     username: string;
          ~~~~~~~~
    'username' is declared here.

server/routes/advanced-features.ts:96:54 - error TS7030: Not all code paths return a value.

96 router.post('/ai/chatbot/respond', authenticateUser, async (req, res) => {
                                                        ~~~~~~~~~~~~~~~~~~~~~

server/routes/advanced-features.ts:519:62 - error TS7030: Not all code paths return a value.

519 router.post('/reports/:reportId/generate', authenticateUser, async (req, res) => {
                                                                 ~~~~~~~~~~~~~~~~~~~~~

server/routes/advanced-features.ts:570:62 - error TS7030: Not all code paths return a value.

570 router.post('/modules/:moduleId/activate', authenticateUser, async (req, res) => {
                                                                 ~~~~~~~~~~~~~~~~~~~~~

server/routes/advanced-features.ts:594:64 - error TS7030: Not all code paths return a value.

594 router.post('/modules/:moduleId/deactivate', authenticateUser, async (req, res) => {
                                                                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/advanced-features.ts:619:63 - error TS7030: Not all code paths return a value.

619 router.post('/modules/:moduleId/configure', authenticateUser, async (req, res) => {
                                                                  ~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.routes.ts:146:28 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

146     const hours = parseInt(time.split(':')[0]);
                               ~~~~~~~~~~~~~~~~~~

server/routes/ai.routes.ts:163:7 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

163       transcript: randomTranscript,
          ~~~~~~~~~~

  server/routes/ai.routes.ts:155:5
    155     transcript: string;
            ~~~~~~~~~~
    The expected type comes from property 'transcript' which is declared here on type '{ transcript: string; confidence: number; }'

server/routes/ai.routes.ts:181:13 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: Date | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'Date | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

181             eq(reservations.date, date),
                ~~


server/routes/ai.routes.ts:191:75 - error TS2339: Property 'guests' does not exist on type '{ id: number; customerId: number | null; tableId: number | null; date: Date; time: string; partySize: number; status: "cancelled" | "completed" | "pending" | "confirmed"; specialRequests: string | null; notes: string | null; createdAt: Date; updatedAt: Date; }'.

191       const totalGuests = existingReservations.reduce((sum, r) => sum + r.guests, 0);
                                                                              ~~~~~~

server/routes/ai.routes.ts:462:16 - error TS7030: Not all code paths return a value.

462   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.routes.ts:490:10 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { time: string | SQL<unknown> | Placeholder<string, any>; date: Date | SQL<unknown> | Placeholder<string, any>; partySize: number | SQL<unknown> | Placeholder<...>; ... 7 more ...; tableId?: number | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'guests' does not exist in type '{ time: string | SQL<unknown> | Placeholder<string, any>; date: Date | SQL<unknown> | Placeholder<string, any>; partySize: number | SQL<unknown> | Placeholder<...>; ... 7 more ...; tableId?: number | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { time: string | SQL<unknown> | Placeholder<string, any>; date: Date | SQL<unknown> | Placeholder<string, any>; partySize: number | SQL<unknown> | Placeholder<...>; ... 7 more ...; tableId?: number | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'date' does not exist in type '{ time: string | SQL<unknown> | Placeholder<string, any>; date: Date | SQL<unknown> | Placeholder<string, any>; partySize: number | SQL<unknown> | Placeholder<...>; ... 7 more ...; tableId?: number | ... 3 more ... | undefined; }[]'.

490         .values({
             ~~~~~~


server/routes/ai.routes.ts:503:13 - error TS2375: Type '{ success: true; data: { id: number; time: string; status: "cancelled" | "completed" | "pending" | "confirmed"; date: Date; notes: string | null; createdAt: Date; updatedAt: Date; partySize: number; specialRequests: string | null; customerId: number | null; tableId: number | null; } | undefined; timestamp: string; c...' is not assignable to type 'AIResponse<{ id: number; time: string; status: "cancelled" | "completed" | "pending" | "confirmed"; date: Date; notes: string | null; createdAt: Date; updatedAt: Date; partySize: number; specialRequests: string | null; customerId: number | null; tableId: number | null; } | undefined>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'data' are incompatible.
    Type '{ id: number; time: string; status: "cancelled" | "completed" | "pending" | "confirmed"; date: Date; notes: string | null; createdAt: Date; updatedAt: Date; partySize: number; specialRequests: string | null; customerId: number | null; tableId: number | null; } | undefined' is not assignable to type '{ id: number; time: string; status: "cancelled" | "completed" | "pending" | "confirmed"; date: Date; notes: string | null; createdAt: Date; updatedAt: Date; partySize: number; specialRequests: string | null; customerId: number | null; tableId: number | null; }'.
      Type 'undefined' is not assignable to type '{ id: number; time: string; status: "cancelled" | "completed" | "pending" | "confirmed"; date: Date; notes: string | null; createdAt: Date; updatedAt: Date; partySize: number; specialRequests: string | null; customerId: number | null; tableId: number | null; }'.

503       const aiResponse: AIResponse<typeof reservation> = {
                ~~~~~~~~~~

server/routes/ai.routes.ts:557:57 - error TS2345: Argument of type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

557       const predictions = AIService.generatePredictions(timeframe, metrics);
                                                            ~~~~~~~~~

server/routes/ai.routes.ts:608:67 - error TS2345: Argument of type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to parameter of type 'string | undefined'.
  Type 'string[]' is not assignable to type 'string'.

608       const suggestions = AIService.generateAutomationSuggestions(category, priority);
                                                                      ~~~~~~~~

server/routes/analytics.routes.ts:8:10 - error TS2614: Module '"../db"' has no exported member 'orders'. Did you mean to use 'import orders from "../db"' instead?

8 import { orders, customers, menuItems, orderItems } from '../db';
           ~~~~~~

server/routes/analytics.routes.ts:8:18 - error TS2614: Module '"../db"' has no exported member 'customers'. Did you mean to use 'import customers from "../db"' instead?

8 import { orders, customers, menuItems, orderItems } from '../db';
                   ~~~~~~~~~

server/routes/analytics.routes.ts:8:29 - error TS2614: Module '"../db"' has no exported member 'menuItems'. Did you mean to use 'import menuItems from "../db"' instead?

8 import { orders, customers, menuItems, orderItems } from '../db';
                              ~~~~~~~~~

server/routes/analytics.routes.ts:8:40 - error TS2614: Module '"../db"' has no exported member 'orderItems'. Did you mean to use 'import orderItems from "../db"' instead?

8 import { orders, customers, menuItems, orderItems } from '../db';
                                         ~~~~~~~~~~

server/routes/analytics.routes.ts:197:58 - error TS2353: Object literal may only specify known properties, and 'code' does not exist in type 'Pick<Locale, "options" | "localize" | "formatLong">'.

197           periodLabel = format(date, 'MMMM', { locale: { code: 'fr' } });
                                                             ~~~~

server/routes/analytics.ts:40:33 - error TS2352: Conversion of type 'ParsedQs' to type '{ period: "month" | "week" | "year" | "today" | "yesterday"; compare: boolean; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'ParsedQs' is missing the following properties from type '{ period: "month" | "week" | "year" | "today" | "yesterday"; compare: boolean; }': period, compare

40     const { period, compare } = req.query as z.infer<typeof kpiQuerySchema>;
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/analytics.ts:97:11 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>, right: "cancelled" | ... 4 more ... | "ready"): SQL<...>', gave the following error.
    Argument of type '"completed"' is not assignable to parameter of type '"cancelled" | "pending" | "delivered" | SQLWrapper | "preparing" | "ready"'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

97           eq(orders.status, 'completed')
             ~~


server/routes/analytics.ts:174:44 - error TS2352: Conversion of type 'ParsedQs' to type '{ limit: number; period: "month" | "week" | "day" | "year"; startDate?: string | undefined; endDate?: string | undefined; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'ParsedQs' is missing the following properties from type '{ limit: number; period: "month" | "week" | "day" | "year"; startDate?: string | undefined; endDate?: string | undefined; }': limit, period

174     const { startDate, endDate, period } = req.query as z.infer<typeof analyticsQuerySchema>;
                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/analytics.ts:189:9 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>, right: "cancelled" | ... 4 more ... | "ready"): SQL<...>', gave the following error.
    Argument of type '"completed"' is not assignable to parameter of type '"cancelled" | "pending" | "delivered" | SQLWrapper | "preparing" | "ready"'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

189         eq(orders.status, 'completed')
            ~~


server/routes/analytics.ts:233:43 - error TS2352: Conversion of type 'ParsedQs' to type '{ limit: number; period: "month" | "week" | "day" | "year"; startDate?: string | undefined; endDate?: string | undefined; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'ParsedQs' is missing the following properties from type '{ limit: number; period: "month" | "week" | "day" | "year"; startDate?: string | undefined; endDate?: string | undefined; }': limit, period

233     const { startDate, endDate, limit } = req.query as z.infer<typeof analyticsQuerySchema>;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/analytics.ts:244:29 - error TS2551: Property 'category' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'. Did you mean 'categoryId'?

244         category: menuItems.category,
                                ~~~~~~~~

server/routes/auth/auth.routes.ts:83:14 - error TS2769: No overload matches this call.
  Overload 1 of 5, '(payload: string | object | Buffer<ArrayBufferLike>, secretOrPrivateKey: null, options?: (SignOptions & { algorithm: "none"; }) | undefined): string', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'null'.
  Overload 2 of 5, '(payload: string | object | Buffer<ArrayBufferLike>, secretOrPrivateKey: Buffer<ArrayBufferLike> | Secret | PrivateKeyInput | JsonWebKeyInput, options?: SignOptions | undefined): string', gave the following error.
    Type 'string' is not assignable to type 'number | StringValue | undefined'.
  Overload 3 of 5, '(payload: string | object | Buffer<ArrayBufferLike>, secretOrPrivateKey: Buffer<ArrayBufferLike> | Secret | PrivateKeyInput | JsonWebKeyInput, callback: SignCallback): void', gave the following error.
    Object literal may only specify known properties, and 'expiresIn' does not exist in type 'SignCallback'.

83   return jwt.sign(
                ~~~~


server/routes/auth/auth.routes.ts:127:16 - error TS7030: Not all code paths return a value.

127   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/auth/auth.routes.ts:164:23 - error TS2551: Property 'active' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>;...'. Did you mean 'isActive'?

164         active: users.active,
                          ~~~~~~

server/routes/auth/auth.routes.ts:212:16 - error TS7030: Not all code paths return a value.

212   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/auth/auth.routes.ts:228:23 - error TS2551: Property 'active' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>;...'. Did you mean 'isActive'?

228         active: users.active,
                          ~~~~~~

server/routes/auth/auth.routes.ts:234:24 - error TS2551: Property 'isActive' does not exist on type '{ id: number; firstName: string | null; lastName: string | null; email: string; password: string; role: string; active: any; createdAt: Date; }'. Did you mean 'active'?

234     if (!user || !user.isActive) {
                           ~~~~~~~~

server/routes/dashboard.routes.ts:27:9 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: Date | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'Date | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

27         gte(reservations.date, startOfDay.toISOString()),
           ~~~


server/routes/dashboard.routes.ts:28:9 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: Date | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'Date | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "date"; tableName: "reservations"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

28         lte(reservations.date, endOfDay.toISOString())
           ~~~


server/routes/dashboard.routes.ts:39:35 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

39       .select({ total: sum(orders.totalAmount) })
                                     ~~~~~~~~~~~

server/routes/dashboard.routes.ts:42:9 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "created_at"; tableName: "orders"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: Date | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'Date | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "created_at"; tableName: "orders"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "created_at"; tableName: "orders"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "created_at"; tableName: "orders"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

42         gte(orders.createdAt, startOfMonth.toISOString()),
           ~~~


server/routes/dashboard.routes.ts:43:9 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>, right: "cancelled" | ... 4 more ... | "ready"): SQL<...>', gave the following error.
    Argument of type '"completed"' is not assignable to parameter of type '"cancelled" | "pending" | "delivered" | SQLWrapper | "preparing" | "ready"'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

43         eq(orders.status, 'completed')
           ~~


server/routes/dashboard.routes.ts:48:33 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

48       .select({ avg: avg(orders.totalAmount) })
                                   ~~~~~~~~~~~

server/routes/dashboard.routes.ts:50:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>, right: "cancelled" | ... 4 more ... | "ready"): SQL<...>', gave the following error.
    Argument of type '"completed"' is not assignable to parameter of type '"cancelled" | "pending" | "delivered" | SQLWrapper | "preparing" | "ready"'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

50       .where(eq(orders.status, 'completed'));
                ~~


server/routes/dashboard.routes.ts:106:36 - error TS2339: Property 'customerName' does not exist on type 'PgTableWithColumns<{ name: "reservations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<...>; }; d...'.

106         customerName: reservations.customerName,
                                       ~~~~~~~~~~~~

server/routes/dashboard.routes.ts:107:35 - error TS2339: Property 'tableNumber' does not exist on type 'PgTableWithColumns<{ name: "reservations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<...>; }; d...'.

107         tableNumber: reservations.tableNumber,
                                      ~~~~~~~~~~~

server/routes/dashboard.routes.ts:119:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

119         totalAmount: orders.totalAmount,
                                ~~~~~~~~~~~

server/routes/dashboard.routes.ts:139:43 - error TS2367: This comparison appears to be unintentional because the types '"cancelled" | "pending" | "delivered" | "preparing" | "ready"' and '"completed"' have no overlap.

139         message: `Commande #${order.id} ${order.status === 'completed' ? 'terminée' : 'en cours'}`,
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/dashboard.routes.ts:141:17 - error TS2367: This comparison appears to be unintentional because the types '"cancelled" | "pending" | "delivered" | "preparing" | "ready"' and '"completed"' have no overlap.

141         status: order.status === 'completed' ? 'success' as const : 'info' as const,
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/dashboard/dashboard.routes.ts:75:41 - error TS2345: Argument of type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

75     const { start, end } = getDateRange(period, startDate, endDate);
                                           ~~~~~~

server/routes/dashboard/dashboard.routes.ts:82:57 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

82         totalRevenue: sql<number>`coalesce(sum(${orders.totalAmount}), 0)`
                                                           ~~~~~~~~~~~

server/routes/dashboard/dashboard.routes.ts:95:57 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

95         totalRevenue: sql<number>`coalesce(sum(${orders.totalAmount}), 0)`,
                                                           ~~~~~~~~~~~

server/routes/dashboard/dashboard.routes.ts:96:62 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

96         averageOrderValue: sql<number>`coalesce(avg(${orders.totalAmount}), 0)`
                                                                ~~~~~~~~~~~

server/routes/dashboard/dashboard.routes.ts:218:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

218         totalAmount: orders.totalAmount,
                                ~~~~~~~~~~~

server/routes/dashboard/dashboard.routes.ts:241:115 - error TS2339: Property 'contactPhone' does not exist on type 'PgTableWithColumns<{ name: "reservations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<...>; }; d...'.

241         customerName: sql<string>`coalesce(${customers.firstName} || ' ' || ${customers.lastName}, ${reservations.contactPhone})`
                                                                                                                      ~~~~~~~~~~~~

server/routes/dashboard/dashboard.routes.ts:269:104 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

269         revenueToday: sql<number>`coalesce(sum(case when ${orders.createdAt} >= ${today} then ${orders.totalAmount} end), 0)`,
                                                                                                           ~~~~~~~~~~~

server/routes/dashboard/dashboard.routes.ts:311:41 - error TS2345: Argument of type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

311     const { start, end } = getDateRange(period, startDate, endDate);
                                            ~~~~~~

server/routes/dashboard/dashboard.routes.ts:342:52 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

342         revenue: sql<number>`coalesce(sum(${orders.totalAmount}), 0)`,
                                                       ~~~~~~~~~~~

server/routes/dashboard/dashboard.routes.ts:394:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

394         totalAmount: orders.totalAmount
                                ~~~~~~~~~~~

server/routes/database.routes.ts:9:30 - error TS2307: Cannot find module '../db/schema' or its corresponding type declarations.

9 import { activityLogs } from '../db/schema';
                               ~~~~~~~~~~~~~~

server/routes/database.routes.ts:139:47 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

139         connections: Number(connectionsResult.rows[0]?.connections) || 0,
                                                  ~~~~

server/routes/database.routes.ts:141:32 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

141         version: versionResult.rows[0]?.version || 'Unknown'
                                   ~~~~

server/routes/database.routes.ts:211:32 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

211         database: dbInfoResult.rows[0]?.database_name || 'Unknown',
                                   ~~~~

server/routes/database.routes.ts:212:32 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

212         version: versionResult.rows[0]?.version || 'Unknown',
                                   ~~~~

server/routes/database.routes.ts:213:28 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

213         size: dbInfoResult.rows[0]?.size || 'Unknown',
                               ~~~~

server/routes/database.routes.ts:214:33 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

214         sizeBytes: dbInfoResult.rows[0]?.size_bytes || 0,
                                    ~~~~

server/routes/database.routes.ts:215:37 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

215         tables: Number(tablesResult.rows[0]?.count) || 0,
                                        ~~~~

server/routes/database.routes.ts:216:53 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

216         activeConnections: Number(connectionsResult.rows[0]?.active_connections) || 0,
                                                        ~~~~

server/routes/database.routes.ts:217:50 - error TS2339: Property 'rows' does not exist on type 'Record<string, unknown>[] & Iterable<Record<string, unknown>> & ResultQueryMeta<number, string>'.

217         maxConnections: Number(connectionsResult.rows[0]?.max_connections) || 0
                                                     ~~~~

server/routes/database.routes.ts:253:16 - error TS7030: Not all code paths return a value.

253   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/database.routes.ts:265:34 - error TS2339: Property 'rows' does not exist on type 'RowList<Record<string, unknown>[]>'.

265       if (!migrationsTableExists.rows[0]?.exists) {
                                     ~~~~

server/routes/database.routes.ts:287:34 - error TS2339: Property 'rows' does not exist on type 'RowList<Record<string, unknown>[]>'.

287           migrations: migrations.rows.map(row => ({
                                     ~~~~

server/routes/database.routes.ts:287:43 - error TS7006: Parameter 'row' implicitly has an 'any' type.

287           migrations: migrations.rows.map(row => ({
                                              ~~~

server/routes/delivery.ts:217:37 - error TS2322: Type '"staff"' is not assignable to type 'AppRole'.

217   requireRoles(['admin', 'manager', 'staff']),
                                        ~~~~~~~

server/routes/delivery.ts:347:37 - error TS2322: Type '"staff"' is not assignable to type 'AppRole'.

347   requireRoles(['admin', 'manager', 'staff']),
                                        ~~~~~~~

server/routes/delivery.ts:349:16 - error TS7030: Not all code paths return a value.

349   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/delivery.ts:353:63 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

353       const delivery = deliveries.find(d => d.id === parseInt(id));
                                                                  ~~

server/routes/delivery.ts:402:37 - error TS2322: Type '"staff"' is not assignable to type 'AppRole'.

402   requireRoles(['admin', 'manager', 'staff']),
                                        ~~~~~~~

server/routes/delivery.ts:469:37 - error TS2322: Type '"staff"' is not assignable to type 'AppRole'.

469   requireRoles(['admin', 'manager', 'staff']),
                                        ~~~~~~~

server/routes/delivery.ts:472:16 - error TS7030: Not all code paths return a value.

472   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/delivery.ts:477:63 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

477       const delivery = deliveries.find(d => d.id === parseInt(id));
                                                                  ~~

server/routes/delivery.ts:563:16 - error TS7030: Not all code paths return a value.

563   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/delivery.ts:568:58 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

568       const driver = drivers.find(d => d.id === parseInt(id));
                                                             ~~

server/routes/feedback/feedback.routes.ts:72:7 - error TS2769: No overload matches this call.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]'.

72       id: crypto.randomUUID(),
         ~~


server/routes/feedback/feedback.routes.ts:92:37 - error TS2322: Type '"staff"' is not assignable to type 'AppRole'.

92   requireRoles(['admin', 'manager', 'staff']),
                                       ~~~~~~~

server/routes/feedback/feedback.routes.ts:149:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "category"; tableName: "feedback"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | SQLWrapper'.
      Type 'string[]' is not assignable to type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "category"; tableName: "feedback"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "category"; tableName: "feedback"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "category"; tableName: "feedback"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is not assignable to parameter of type 'never'.

149       conditions.push(eq(feedback.category, category));
                          ~~


server/routes/feedback/feedback.routes.ts:153:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "rating"; tableName: "feedback"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'string' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "rating"; tableName: "feedback"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "rating"; tableName: "feedback"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "rating"; tableName: "feedback"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

153       conditions.push(eq(feedback.rating, rating));
                          ~~


server/routes/feedback/feedback.routes.ts:157:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "rating"; tableName: "feedback"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'string' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "rating"; tableName: "feedback"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "rating"; tableName: "feedback"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "rating"; tableName: "feedback"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

157       conditions.push(gte(feedback.rating, minRating));
                          ~~~


server/routes/feedback/feedback.routes.ts:161:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "status"; tableName: "feedback"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | SQLWrapper'.
      Type 'string[]' is not assignable to type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "feedback"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "status"; tableName: "feedback"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "feedback"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is not assignable to parameter of type 'never'.

161       conditions.push(eq(feedback.status, status));
                          ~~


server/routes/feedback/feedback.routes.ts:176:56 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number | Date'.
      Type 'string[]' is not assignable to type 'string | number | Date'.
        Type 'string[]' is missing the following properties from type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString, and 37 more.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number'.
      Type 'string[]' is not assignable to type 'string | number'.

176       conditions.push(gte(feedback.createdAt, new Date(startDate)));
                                                           ~~~~~~~~~


server/routes/feedback/feedback.routes.ts:180:56 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number | Date'.
      Type 'string[]' is not assignable to type 'string | number | Date'.
        Type 'string[]' is missing the following properties from type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString, and 37 more.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number'.
      Type 'string[]' is not assignable to type 'string | number'.

180       conditions.push(lte(feedback.createdAt, new Date(endDate)));
                                                           ~~~~~~~


server/routes/feedback/feedback.routes.ts:184:7 - error TS2741: Property 'where' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"feedback", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverPa...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"feedback", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverPa...'.

184       query = query.where(and(...conditions));
          ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:402:5
    402     where(where: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined): PgSelectWithout<this, TDynamic, 'where'>;
            ~~~~~
    'where' is declared here.

server/routes/feedback/feedback.routes.ts:193:5 - error TS2741: Property 'orderBy' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"feedback", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverPa...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"feedback", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverPa...'.

193     query = sortOrder === 'desc' ?
        ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:471:5
    471     orderBy(builder: (aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>): PgSelectWithout<this, TDynamic, 'orderBy'>;
            ~~~~~~~
    'orderBy' is declared here.

server/routes/feedback/feedback.routes.ts:198:21 - error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

198     const offset = (page - 1) * limit;
                        ~~~~

server/routes/feedback/feedback.routes.ts:198:33 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

198     const offset = (page - 1) * limit;
                                    ~~~~~

server/routes/feedback/feedback.routes.ts:199:44 - error TS2345: Argument of type 'string | string[] | 20 | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | Placeholder<string, any>'.
  Type 'string' is not assignable to type 'number | Placeholder<string, any>'.

199     const feedbackData = await query.limit(limit).offset(offset);
                                               ~~~~~

server/routes/feedback/feedback.routes.ts:202:14 - error TS2339: Property 'count' does not exist on type '{ count: number; } | undefined'.

202     const [{ count }] = await db
                 ~~~~~

server/routes/feedback/feedback.routes.ts:221:39 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

221         totalPages: Math.ceil(count / limit)
                                          ~~~~~

server/routes/feedback/feedback.routes.ts:230:37 - error TS2322: Type '"staff"' is not assignable to type 'AppRole'.

230   requireRoles(['admin', 'manager', 'staff']),
                                        ~~~~~~~

server/routes/feedback/feedback.routes.ts:233:16 - error TS7030: Not all code paths return a value.

233   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/feedback/feedback.routes.ts:266:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

266       .where(eq(feedback.id, id));
                 ~~


server/routes/feedback/feedback.routes.ts:281:31 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

281           totalAmount: orders.totalAmount,
                                  ~~~~~~~~~~~

server/routes/feedback/feedback.routes.ts:307:16 - error TS7030: Not all code paths return a value.

307   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/feedback/feedback.routes.ts:375:16 - error TS7030: Not all code paths return a value.

375   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/feedback/feedback.routes.ts:384:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

384       .where(eq(feedback.id, id));
                 ~~


server/routes/feedback/feedback.routes.ts:409:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

409       .where(eq(feedback.id, id))
                 ~~


server/routes/feedback/feedback.routes.ts:443:16 - error TS7030: Not all code paths return a value.

443   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/feedback/feedback.routes.ts:453:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

453       .where(eq(feedback.id, id));
                 ~~


server/routes/feedback/feedback.routes.ts:470:9 - error TS2353: Object literal may only specify known properties, and 'isPublic' does not exist in type '{ rating?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; category?: string | SQL<...> | PgColumn<...> | undefined; ... 14 more ...; contactEmail?: string | ... 3 more ... | undefined; }'.

470         isPublic,
            ~~~~~~~~

server/routes/feedback/feedback.routes.ts:473:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "feedback"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

473       .where(eq(feedback.id, id))
                 ~~


server/routes/feedback/feedback.routes.ts:514:56 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number | Date'.
      Type 'string[]' is not assignable to type 'string | number | Date'.
        Type 'string[]' is missing the following properties from type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString, and 37 more.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number'.
      Type 'string[]' is not assignable to type 'string | number'.

514       conditions.push(gte(feedback.createdAt, new Date(startDate)));
                                                           ~~~~~~~~~


server/routes/feedback/feedback.routes.ts:517:56 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number | Date'.
      Type 'string[]' is not assignable to type 'string | number | Date'.
        Type 'string[]' is missing the following properties from type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString, and 37 more.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number'.
      Type 'string[]' is not assignable to type 'string | number'.

517       conditions.push(lte(feedback.createdAt, new Date(endDate)));
                                                           ~~~~~~~


server/routes/feedback/feedback.routes.ts:576:14 - error TS18048: 'generalStats' is possibly 'undefined'.

576       total: generalStats.total,
                 ~~~~~~~~~~~~

server/routes/feedback/feedback.routes.ts:577:29 - error TS18048: 'generalStats' is possibly 'undefined'.

577       averageRating: Number(generalStats.averageRating?.toFixed(2)) || 0,
                                ~~~~~~~~~~~~

server/routes/image-routes.ts:39:28 - error TS7030: Not all code paths return a value.

39 router.param('menuItemId', (req, res, next, value) => {
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/image-routes.ts:47:25 - error TS7030: Not all code paths return a value.

47 router.param('imageId', (req, res, next, value) => {
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/image-routes.ts:81:57 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.

81     const images = await imageManager.getMenuItemImages(menuItemId);
                                                           ~~~~~~~~~~

server/routes/image-routes.ts:121:52 - error TS2379: Argument of type '{ imageUrl: string; menuItemId: number; metadata?: Record<string, unknown> | undefined; altText?: string | undefined; isPrimary?: boolean | undefined; uploadMethod?: "url" | "generated" | "upload" | "pexels" | undefined; }' is not assignable to parameter of type 'InsertMenuItemImage' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'altText' are incompatible.
    Type 'string | undefined' is not assignable to type 'string | null'.
      Type 'undefined' is not assignable to type 'string | null'.

121       const newImage = await imageManager.addImage(req.body);
                                                       ~~~~~~~~

server/routes/image-routes.ts:166:3 - error TS7030: Not all code paths return a value.

166   async (req, res) => {
      ~~~~~~~~~~~~~~~~~~~~~

server/routes/image-routes.ts:169:68 - error TS2379: Argument of type '{ metadata?: Record<string, unknown> | undefined; imageUrl?: string | undefined; altText?: string | undefined; isPrimary?: boolean | undefined; }' is not assignable to parameter of type 'Partial<InsertMenuItemImage>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'imageUrl' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

169       const updatedImage = await imageManager.updateImage(imageId, req.body);
                                                                       ~~~~~~~~

server/routes/image-routes.ts:214:28 - error TS7030: Not all code paths return a value.

214 router.delete("/:imageId", async (req, res) => {
                               ~~~~~~~~~~~~~~~~~~~~~

server/routes/image-routes.ts:217:52 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.

217     const deleted = await imageManager.deleteImage(imageId);
                                                       ~~~~~~~

server/routes/image-routes.ts:268:54 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.

268     const image = await imageManager.getOptimalImage(menuItemId, categorySlug);
                                                         ~~~~~~~~~~

server/routes/image-routes.ts:275:26 - error TS2339: Property 'isPrimary' does not exist on type '{ url: string; alt: string; }'.

275         isPrimary: image.isPrimary,
                             ~~~~~~~~~

server/routes/image-routes.ts:276:27 - error TS2339: Property 'dimensions' does not exist on type '{ url: string; alt: string; }'.

276         dimensions: image.dimensions
                              ~~~~~~~~~~

server/routes/inventory/inventory.routes.ts:171:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "supplier_id"; tableName: "inventory"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'string' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "supplier_id"; tableName: "inventory"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "supplier_id"; tableName: "inventory"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "supplier_id"; tableName: "inventory"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

171       conditions.push(eq(inventory.supplierId, supplierId));
                          ~~


server/routes/inventory/inventory.routes.ts:186:7 - error TS2741: Property 'where' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"inventory", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "inventory"; dataType: "number"; columnType: "PgSerial"; data: number; driver...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"inventory", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "inventory"; dataType: "number"; columnType: "PgSerial"; data: number; driver...'.

186       query = query.where(and(...conditions));
          ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:402:5
    402     where(where: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined): PgSelectWithout<this, TDynamic, 'where'>;
            ~~~~~
    'where' is declared here.

server/routes/inventory/inventory.routes.ts:214:7 - error TS2741: Property 'where' is missing in type 'Omit<PgSelectBase<"inventory", { count: SQL<number>; }, "partial", Record<"inventory", "not-null"> & { menu_items: "nullable"; }, false, "where", { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>, "where">' but required in type 'Omit<PgSelectBase<"inventory", { count: SQL<number>; }, "partial", Record<"inventory", "not-null"> & { menu_items: "nullable"; }, false, never, { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>, never>'.

214       countQuery = countQuery.where(and(...conditions));
          ~~~~~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:402:5
    402     where(where: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined): PgSelectWithout<this, TDynamic, 'where'>;
            ~~~~~
    'where' is declared here.

server/routes/inventory/inventory.routes.ts:342:16 - error TS7030: Not all code paths return a value.

342   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/inventory/inventory.routes.ts:420:16 - error TS7030: Not all code paths return a value.

420   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/inventory/inventory.routes.ts:445:40 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

445       .where(eq(inventory.id, parseInt(id)))
                                           ~~

server/routes/inventory/inventory.routes.ts:477:16 - error TS7030: Not all code paths return a value.

477   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/inventory/inventory.routes.ts:535:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Record<MovementType, string>'.

535       actionMap[type],
          ~~~~~~~~~~~~~~~

server/routes/inventory/inventory.routes.ts:589:29 - error TS2551: Property 'category' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'. Did you mean 'categoryId'?

589         category: menuItems.category,
                                ~~~~~~~~

server/routes/inventory/inventory.routes.ts:595:26 - error TS2551: Property 'category' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'. Did you mean 'categoryId'?

595       .groupBy(menuItems.category);
                             ~~~~~~~~

server/routes/kpis.routes.ts:125:49 - error TS7030: Not all code paths return a value.

125 router.get('/period/:period', authenticateUser, async (req, res) => {
                                                    ~~~~~~~~~~~~~~~~~~~~~

server/routes/loyalty-advanced.ts:9:64 - error TS2305: Module '"../../shared/schema"' has no exported member 'loyaltyCampaigns'.

9 import { customers, orders, loyaltyTransactions, activityLogs, loyaltyCampaigns, loyaltyRewards } from '../../shared/schema';
                                                                 ~~~~~~~~~~~~~~~~

server/routes/loyalty-advanced.ts:9:82 - error TS2305: Module '"../../shared/schema"' has no exported member 'loyaltyRewards'.

9 import { customers, orders, loyaltyTransactions, activityLogs, loyaltyCampaigns, loyaltyRewards } from '../../shared/schema';
                                                                                   ~~~~~~~~~~~~~~

server/routes/loyalty-advanced.ts:208:3 - error TS2375: Type '{ id: number; name: string; minPoints: number; maxPoints: undefined; pointsRate: number; benefits: string[]; color: string; discountPercentage: number; icon: string; description: string; }' is not assignable to type 'LoyaltyLevel' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'maxPoints' are incompatible.
    Type 'undefined' is not assignable to type 'number'.

208   {
      ~
209     id: 5,
    ~~~~~~~~~~
... 
225     description: 'Le summum de l\'expérience client'
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
226   }
    ~~~

server/routes/loyalty-advanced.ts:338:5 - error TS2322: Type 'LoyaltyLevel | undefined' is not assignable to type 'LoyaltyLevel'.
  Type 'undefined' is not assignable to type 'LoyaltyLevel'.

338     return level || LOYALTY_LEVELS[LOYALTY_LEVELS.length - 1];
        ~~~~~~

server/routes/loyalty-advanced.ts:360:38 - error TS18048: 'nextLevel' is possibly 'undefined'.

360     const pointsNeededForNextLevel = nextLevel.minPoints - currentLevel.minPoints;
                                         ~~~~~~~~~

server/routes/loyalty-advanced.ts:362:38 - error TS18048: 'nextLevel' is possibly 'undefined'.

362     const pointsToNext = Math.max(0, nextLevel.minPoints - currentPoints);
                                         ~~~~~~~~~

server/routes/loyalty-advanced.ts:368:5 - error TS2375: Type '{ nextLevel: LoyaltyLevel | undefined; progress: number; pointsToNext: number; daysToNext: number; estimatedSpendingToNext: number; }' is not assignable to type '{ nextLevel?: LoyaltyLevel; progress: number; pointsToNext: number; daysToNext?: number; estimatedSpendingToNext?: number; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'nextLevel' are incompatible.
    Type 'LoyaltyLevel | undefined' is not assignable to type 'LoyaltyLevel'.
      Type 'undefined' is not assignable to type 'LoyaltyLevel'.

368     return {
        ~~~~~~

server/routes/loyalty-advanced.ts:525:33 - error TS2532: Object is possibly 'undefined'.

525       (now.getTime() - new Date(transactions[0].createdAt).getTime()) / (1000 * 3600 * 24) : 365;
                                    ~~~~~~~~~~~~~~~

server/routes/loyalty-advanced.ts:727:75 - error TS2345: Argument of type '{ id: number; customerId: number | null; points: number; type: string; description: string | null; orderId: number | null; createdAt: Date; }[]' is not assignable to parameter of type 'LoyaltyTransaction[]'.
  Property 'balance' is missing in type '{ id: number; customerId: number | null; points: number; type: string; description: string | null; orderId: number | null; createdAt: Date; }' but required in type 'LoyaltyTransaction'.

727           const metrics = AdvancedLoyaltyService.calculateAdvancedMetrics(transactions);
                                                                              ~~~~~~~~~~~~

  server/routes/loyalty-advanced.ts:89:3
    89   balance: number;
         ~~~~~~~
    'balance' is declared here.

server/routes/loyalty-advanced.ts:744:38 - error TS2339: Property 'rewardId' does not exist on type 'PgTableWithColumns<{ name: "loyalty_transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "loyalty_transactions"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; createdAt: PgColumn<...>; }; ...'.

744               eq(loyaltyTransactions.rewardId, reward.id),
                                         ~~~~~~~~

server/routes/loyalty-advanced.ts:763:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "created_at"; tableName: "loyalty_transactions"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: Date | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'Date | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "created_at"; tableName: "loyalty_transactions"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "created_at"; tableName: "loyalty_transactions"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "created_at"; tableName: "loyalty_transactions"; dataType: "date"; columnType: "PgTimestamp"; data: Date; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

763       .where(gte(loyaltyTransactions.createdAt, last30Days.toISOString()));
                 ~~~


server/routes/loyalty-advanced.ts:806:16 - error TS7030: Not all code paths return a value.

806   asyncHandler(async (req: Request, res: Response) => {
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/loyalty-advanced.ts:807:33 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

807     const customerId = parseInt(req.params.customerId);
                                    ~~~~~~~~~~~~~~~~~~~~~

server/routes/loyalty-advanced.ts:835:22 - error TS18048: 'customer' is possibly 'undefined'.

835       const points = customer.loyaltyPoints || 0;
                         ~~~~~~~~

server/routes/loyalty-advanced.ts:846:71 - error TS2345: Argument of type '{ id: number; customerId: number | null; points: number; type: string; description: string | null; orderId: number | null; createdAt: Date; }[]' is not assignable to parameter of type 'LoyaltyTransaction[]'.
  Property 'balance' is missing in type '{ id: number; customerId: number | null; points: number; type: string; description: string | null; orderId: number | null; createdAt: Date; }' but required in type 'LoyaltyTransaction'.

846       const metrics = AdvancedLoyaltyService.calculateAdvancedMetrics(allTransactions);
                                                                          ~~~~~~~~~~~~~~~

  server/routes/loyalty-advanced.ts:89:3
    89   balance: number;
         ~~~~~~~
    'balance' is declared here.

server/routes/loyalty-advanced.ts:865:18 - error TS2339: Property 'rewardId' does not exist on type '{ id: number; customerId: number | null; points: number; type: string; description: string | null; orderId: number | null; createdAt: Date; }'.

865           if (!t.rewardId) return null;
                     ~~~~~~~~

server/routes/loyalty-advanced.ts:866:56 - error TS2339: Property 'rewardId' does not exist on type '{ id: number; customerId: number | null; points: number; type: string; description: string | null; orderId: number | null; createdAt: Date; }'.

866           return ENHANCED_REWARDS.find(r => r.id === t.rewardId) || null;
                                                           ~~~~~~~~

server/routes/loyalty-advanced.ts:895:26 - error TS18048: 'customer' is possibly 'undefined'.

895             memberSince: customer.createdAt,
                             ~~~~~~~~

server/routes/loyalty-advanced.ts:896:27 - error TS18048: 'customer' is possibly 'undefined'.

896             lastActivity: customer.updatedAt,
                              ~~~~~~~~

server/routes/loyalty-advanced.ts:910:30 - error TS2532: Object is possibly 'undefined'.

910             recommendations: this.generateCustomerRecommendations(stats, level, metrics)
                                 ~~~~

server/routes/loyalty-advanced.ts:959:16 - error TS7030: Not all code paths return a value.

959   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/loyalty-advanced.ts:979:29 - error TS18048: 'customer' is possibly 'undefined'.

979       const currentPoints = customer.loyaltyPoints || 0;
                                ~~~~~~~~

server/routes/loyalty-advanced.ts:1030:13 - error TS2322: Type 'string' is not assignable to type 'Date | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.

1030             updatedAt: new Date().toISOString()
                 ~~~~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/update.d.ts:27:57
    27 export type PgUpdateSetSource<TTable extends PgTable> = {
                                                               ~
    28     [Key in keyof TTable['$inferInsert']]?: GetColumnData<TTable['_']['columns'][Key]> | SQL | PgColumn | undefined;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    29 } & {};
       ~
    The expected type comes from property 'updatedAt' which is declared here on type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; firstName?: string | SQL<...> | PgColumn<...> | undefined; ... 9 more ...; loyaltyPoints?: number | ... 2 more ... | undefined; }'

server/routes/loyalty-advanced.ts:1075:39 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'Date | SQL<unknown> | Placeholder<string, any> | undefined'.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]'.

1075         await tx.insert(activityLogs).values({
                                           ~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:28:101
     28 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     29     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ... 
     35     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     36 } & {};
        ~
    The expected type comes from property 'createdAt' which is declared here on type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }'

server/routes/loyalty-advanced.ts:1154:9 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

1154         return res.status(404).json({
             ~~~~~~

server/routes/loyalty-advanced.ts:1161:29 - error TS18048: 'customer' is possibly 'undefined'.

1161       const currentPoints = customer.loyaltyPoints || 0;
                                 ~~~~~~~~

server/routes/loyalty-advanced.ts:1181:9 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

1181         return res.status(404).json({
             ~~~~~~

server/routes/loyalty-advanced.ts:1196:9 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

1196         return res.status(400).json({
             ~~~~~~

server/routes/loyalty-advanced.ts:1217:13 - error TS2322: Type 'string' is not assignable to type 'Date | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.

1217             updatedAt: new Date().toISOString()
                 ~~~~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/update.d.ts:27:57
    27 export type PgUpdateSetSource<TTable extends PgTable> = {
                                                               ~
    28     [Key in keyof TTable['$inferInsert']]?: GetColumnData<TTable['_']['columns'][Key]> | SQL | PgColumn | undefined;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    29 } & {};
       ~
    The expected type comes from property 'updatedAt' which is declared here on type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; firstName?: string | SQL<...> | PgColumn<...> | undefined; ... 9 more ...; loyaltyPoints?: number | ... 2 more ... | undefined; }'

server/routes/loyalty-advanced.ts:1249:53 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { type: string | SQL<unknown> | Placeholder<string, any>; points: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | ... 3 more ... | undefined; orderId?: number | ... 3 more ... | undefined; createdAt?: Date | ... 2 more ... | undefined; customerId?: number | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Argument of type '{ customerId: any; type: "redeemed"; points: number; rewardId: any; description: any; createdAt: string; balance: number; metadata: string; }' is not assignable to parameter of type '{ type: string | SQL<unknown> | Placeholder<string, any>; points: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | ... 3 more ... | undefined; orderId?: number | ... 3 more ... | undefined; createdAt?: Date | ... 2 more ... | ...'.
      Types of property 'createdAt' are incompatible.
        Type 'string' is not assignable to type 'Date | SQL<unknown> | Placeholder<string, any> | undefined'.
  Overload 2 of 2, '(values: { type: string | SQL<unknown> | Placeholder<string, any>; points: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | ... 3 more ... | undefined; orderId?: number | ... 3 more ... | undefined; createdAt?: Date | ... 2 more ... | undefined; customerId?: number | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Argument of type '{ customerId: any; type: "redeemed"; points: number; rewardId: any; description: any; createdAt: string; balance: number; metadata: string; }' is not assignable to parameter of type '{ type: string | SQL<unknown> | Placeholder<string, any>; points: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | ... 3 more ... | undefined; orderId?: number | ... 3 more ... | undefined; createdAt?: Date | ... 2 more ... | ...'.
      Type '{ customerId: any; type: "redeemed"; points: number; rewardId: any; description: any; createdAt: string; balance: number; metadata: string; }' is missing the following properties from type '{ type: string | SQL<unknown> | Placeholder<string, any>; points: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | ... 3 more ... | undefined; orderId?: number | ... 3 more ... | undefined; createdAt?: Date | ... 2 more ... | ...': length, pop, push, concat, and 29 more.

1249         await tx.insert(loyaltyTransactions).values(transactionData);
                                                         ~~~~~~~~~~~~~~~


server/routes/loyalty-advanced.ts:1252:39 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'Date | SQL<unknown> | Placeholder<string, any> | undefined'.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]'.

1252         await tx.insert(activityLogs).values({
                                           ~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:28:101
     28 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     29     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ... 
     35     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     36 } & {};
        ~
    The expected type comes from property 'createdAt' which is declared here on type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }'

server/routes/loyalty-advanced.ts:1309:9 - error TS18004: No value exists in scope for the shorthand property 'customerId'. Either declare one or provide an initializer.

1309         customerId,
             ~~~~~~~~~~

server/routes/loyalty-advanced.ts:1310:9 - error TS18004: No value exists in scope for the shorthand property 'rewardId'. Either declare one or provide an initializer.

1310         rewardId,
             ~~~~~~~~

server/routes/menu/menu.routes.ts:61:7 - error TS2769: No overload matches this call.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]'.

61       id: crypto.randomUUID(),
         ~~


server/routes/menu/menu.routes.ts:133:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "category_id"; tableName: "menu_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'string' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "category_id"; tableName: "menu_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "category_id"; tableName: "menu_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "category_id"; tableName: "menu_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

133       conditions.push(eq(menuItems.categoryId, categoryId));
                          ~~


server/routes/menu/menu.routes.ts:137:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "is_available"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: boolean | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'boolean | SQLWrapper'.
      Type 'string' is not assignable to type 'boolean | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "is_available"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "is_available"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "is_available"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

137       conditions.push(eq(menuItems.isAvailable, isAvailable));
                          ~~


server/routes/menu/menu.routes.ts:141:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "is_vegetarian"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: boolean | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'boolean | SQLWrapper'.
      Type 'string' is not assignable to type 'boolean | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "is_vegetarian"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "is_vegetarian"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "is_vegetarian"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

141       conditions.push(eq(menuItems.isVegetarian, isVegetarian));
                          ~~


server/routes/menu/menu.routes.ts:145:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "is_vegan"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: boolean | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'boolean | SQLWrapper'.
      Type 'string' is not assignable to type 'boolean | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "is_vegan"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "is_vegan"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "is_vegan"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

145       conditions.push(eq(menuItems.isVegan, isVegan));
                          ~~


server/routes/menu/menu.routes.ts:149:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "is_gluten_free"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: boolean | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'boolean | SQLWrapper'.
      Type 'string' is not assignable to type 'boolean | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "is_gluten_free"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "is_gluten_free"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "is_gluten_free"; tableName: "menu_items"; dataType: "boolean"; columnType: "PgBoolean"; data: boolean; driverParam: boolean; notNull: true; hasDefault: true; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

149       conditions.push(eq(menuItems.isGlutenFree, isGlutenFree));
                          ~~


server/routes/menu/menu.routes.ts:162:7 - error TS2741: Property 'where' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"menu_items", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driv...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"menu_items", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driv...'.

162       query = query.where(and(...conditions));
          ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:402:5
    402     where(where: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined): PgSelectWithout<this, TDynamic, 'where'>;
            ~~~~~
    'where' is declared here.

server/routes/menu/menu.routes.ts:172:5 - error TS2741: Property 'orderBy' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"menu_items", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driv...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"menu_items", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driv...'.

172     query = sortOrder === 'desc' ?
        ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:471:5
    471     orderBy(builder: (aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>): PgSelectWithout<this, TDynamic, 'orderBy'>;
            ~~~~~~~
    'orderBy' is declared here.

server/routes/menu/menu.routes.ts:177:21 - error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

177     const offset = (page - 1) * limit;
                        ~~~~

server/routes/menu/menu.routes.ts:177:33 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

177     const offset = (page - 1) * limit;
                                    ~~~~~

server/routes/menu/menu.routes.ts:178:40 - error TS2345: Argument of type 'string | string[] | 20 | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | Placeholder<string, any>'.
  Type 'string' is not assignable to type 'number | Placeholder<string, any>'.

178     const menuData = await query.limit(limit).offset(offset);
                                           ~~~~~

server/routes/menu/menu.routes.ts:181:14 - error TS2339: Property 'count' does not exist on type '{ count: number; } | undefined'.

181     const [{ count }] = await db
                 ~~~~~

server/routes/menu/menu.routes.ts:200:39 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

200         totalPages: Math.ceil(count / limit)
                                          ~~~~~

server/routes/menu/menu.routes.ts:208:32 - error TS2339: Property 'idSchema' does not exist on type '{ id: ZodNumber; email: ZodString; password: ZodString; username: ZodString; phone: ZodOptional<ZodString>; date: ZodString; time: ZodString; pagination: ZodObject<...>; sortOrder: ZodDefault<...>; }'.

208   validateParams(commonSchemas.idSchema),
                                   ~~~~~~~~

server/routes/menu/menu.routes.ts:210:16 - error TS7030: Not all code paths return a value.

210   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/menu/menu.routes.ts:214:12 - error TS7022: 'menuItem' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.

214     const [menuItem] = await db
               ~~~~~~~~

server/routes/menu/menu.routes.ts:224:23 - error TS2448: Block-scoped variable 'menuItem' used before its declaration.

224         isVegetarian: menuItem.isVegetarian || false,
                          ~~~~~~~~

  server/routes/menu/menu.routes.ts:214:12
    214     const [menuItem] = await db
                   ~~~~~~~~
    'menuItem' is declared here.

server/routes/menu/menu.routes.ts:225:18 - error TS2448: Block-scoped variable 'menuItem' used before its declaration.

225         isVegan: menuItem.isVegan || false,
                     ~~~~~~~~

  server/routes/menu/menu.routes.ts:214:12
    214     const [menuItem] = await db
                   ~~~~~~~~
    'menuItem' is declared here.

server/routes/menu/menu.routes.ts:226:23 - error TS2448: Block-scoped variable 'menuItem' used before its declaration.

226         isGlutenFree: menuItem.isGlutenFree || false,
                          ~~~~~~~~

  server/routes/menu/menu.routes.ts:214:12
    214     const [menuItem] = await db
                   ~~~~~~~~
    'menuItem' is declared here.

server/routes/menu/menu.routes.ts:236:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

236       .where(eq(menuItems.id, id));
                 ~~


server/routes/menu/menu.routes.ts:260:16 - error TS7030: Not all code paths return a value.

260   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/menu/menu.routes.ts:330:32 - error TS2339: Property 'idSchema' does not exist on type '{ id: ZodNumber; email: ZodString; password: ZodString; username: ZodString; phone: ZodOptional<ZodString>; date: ZodString; time: ZodString; pagination: ZodObject<...>; sortOrder: ZodDefault<...>; }'.

330   validateParams(commonSchemas.idSchema),
                                   ~~~~~~~~

server/routes/menu/menu.routes.ts:333:16 - error TS7030: Not all code paths return a value.

333   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/menu/menu.routes.ts:342:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

342       .where(eq(menuItems.id, id));
                 ~~


server/routes/menu/menu.routes.ts:376:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

376       .where(eq(menuItems.id, id))
                 ~~


server/routes/menu/menu.routes.ts:406:32 - error TS2339: Property 'idSchema' does not exist on type '{ id: ZodNumber; email: ZodString; password: ZodString; username: ZodString; phone: ZodOptional<ZodString>; date: ZodString; time: ZodString; pagination: ZodObject<...>; sortOrder: ZodDefault<...>; }'.

406   validateParams(commonSchemas.idSchema),
                                   ~~~~~~~~

server/routes/menu/menu.routes.ts:408:16 - error TS7030: Not all code paths return a value.

408   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/menu/menu.routes.ts:420:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

420       .where(eq(menuItems.id, id))
                 ~~


server/routes/menu/menu.routes.ts:481:16 - error TS7030: Not all code paths return a value.

481   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/online-orders.ts:147:37 - error TS2322: Type '"employee"' is not assignable to type 'AppRole'.

147   requireRoles(['admin', 'manager', 'employee']),
                                        ~~~~~~~~~~

server/routes/online-orders.ts:244:37 - error TS2322: Type '"employee"' is not assignable to type 'AppRole'.

244   requireRoles(['admin', 'manager', 'employee']),
                                        ~~~~~~~~~~

server/routes/online-orders.ts:279:37 - error TS2322: Type '"employee"' is not assignable to type 'AppRole'.

279   requireRoles(['admin', 'manager', 'employee']),
                                        ~~~~~~~~~~

server/routes/online-orders.ts:313:37 - error TS2322: Type '"employee"' is not assignable to type 'AppRole'.

313   requireRoles(['admin', 'manager', 'employee']),
                                        ~~~~~~~~~~

server/routes/orders/orders.routes.ts:77:26 - error TS2339: Property 'subtotal' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

77         subtotal: orders.subtotal,
                            ~~~~~~~~

server/routes/orders/orders.routes.ts:78:21 - error TS2339: Property 'tax' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

78         tax: orders.tax,
                       ~~~

server/routes/orders/orders.routes.ts:79:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

79         totalAmount: orders.totalAmount,
                               ~~~~~~~~~~~

server/routes/orders/orders.routes.ts:95:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>, right: "cancelled" | ... 4 more ... | "ready"): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type '"cancelled" | "pending" | "delivered" | SQLWrapper | "preparing" | "ready"'.
      Type 'string' is not assignable to type '"cancelled" | "pending" | "delivered" | SQLWrapper | "preparing" | "ready"'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

95       conditions.push(eq(orders.status, status));
                         ~~


server/routes/orders/orders.routes.ts:99:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "order_type"; tableName: "orders"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | SQLWrapper'.
      Type 'string[]' is not assignable to type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "order_type"; tableName: "orders"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "order_type"; tableName: "orders"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "order_type"; tableName: "orders"; dataType: "string"; columnType: "PgVarchar"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, { ...; }>' is not assignable to parameter of type 'never'.

99       conditions.push(eq(orders.orderType, orderType));
                         ~~


server/routes/orders/orders.routes.ts:103:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "customer_id"; tableName: "orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'string' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "customer_id"; tableName: "orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "customer_id"; tableName: "orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "customer_id"; tableName: "orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

103       conditions.push(eq(orders.customerId, customerId));
                          ~~


server/routes/orders/orders.routes.ts:107:23 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "table_id"; tableName: "orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'string' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | string[] | ParsedQs | ParsedQs[]>, right: string | string[] | ParsedQs | SQLWrapper | ParsedQs[]): SQL<...>', gave the following error.
    Argument of type 'PgColumn<{ name: "table_id"; tableName: "orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>'.
      Type 'PgColumn<{ name: "table_id"; tableName: "orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | string[] | ParsedQs | ParsedQs[]>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "table_id"; tableName: "orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

107       conditions.push(eq(orders.tableId, tableId));
                          ~~


server/routes/orders/orders.routes.ts:111:54 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number | Date'.
      Type 'string[]' is not assignable to type 'string | number | Date'.
        Type 'string[]' is missing the following properties from type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString, and 37 more.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number'.
      Type 'string[]' is not assignable to type 'string | number'.

111       conditions.push(gte(orders.createdAt, new Date(startDate)));
                                                         ~~~~~~~~~


server/routes/orders/orders.routes.ts:115:54 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number | Date'.
      Type 'string[]' is not assignable to type 'string | number | Date'.
        Type 'string[]' is missing the following properties from type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString, and 37 more.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'string | number'.
      Type 'string[]' is not assignable to type 'string | number'.

115       conditions.push(lte(orders.createdAt, new Date(endDate)));
                                                         ~~~~~~~


server/routes/orders/orders.routes.ts:119:7 - error TS2741: Property 'where' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"orders", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam:...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"orders", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam:...'.

119       query = query.where(and(...conditions));
          ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:402:5
    402     where(where: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined): PgSelectWithout<this, TDynamic, 'where'>;
            ~~~~~
    'where' is declared here.

server/routes/orders/orders.routes.ts:123:59 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

123     const orderColumn = sortBy === 'totalAmount' ? orders.totalAmount :
                                                              ~~~~~~~~~~~

server/routes/orders/orders.routes.ts:128:5 - error TS2741: Property 'orderBy' is missing in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"orders", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam:...' but required in type 'Omit<import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"orders", { id: import("/home/runner/workspace/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam:...'.

128     query = sortOrder === 'desc' ?
        ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/select.d.ts:471:5
    471     orderBy(builder: (aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>): PgSelectWithout<this, TDynamic, 'orderBy'>;
            ~~~~~~~
    'orderBy' is declared here.

server/routes/orders/orders.routes.ts:157:16 - error TS2538: Type 'null' cannot be used as an index type.

157       if (!acc[item.orderId]) {
                   ~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:158:13 - error TS2538: Type 'null' cannot be used as an index type.

158         acc[item.orderId] = [];
                ~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:160:11 - error TS2538: Type 'null' cannot be used as an index type.

160       acc[item.orderId].push(item);
              ~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:171:14 - error TS2339: Property 'count' does not exist on type '{ count: number; } | undefined'.

171     const [{ count }] = await db
                 ~~~~~

server/routes/orders/orders.routes.ts:199:16 - error TS7030: Not all code paths return a value.

199   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:210:26 - error TS2339: Property 'subtotal' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

210         subtotal: orders.subtotal,
                             ~~~~~~~~

server/routes/orders/orders.routes.ts:211:21 - error TS2339: Property 'tax' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

211         tax: orders.tax,
                        ~~~

server/routes/orders/orders.routes.ts:212:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

212         totalAmount: orders.totalAmount,
                                ~~~~~~~~~~~

server/routes/orders/orders.routes.ts:224:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

224       .where(eq(orders.id, id));
                 ~~


server/routes/orders/orders.routes.ts:248:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "order_id"; tableName: "order_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "order_id"; tableName: "order_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "order_id"; tableName: "order_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "order_id"; tableName: "order_items"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: false; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

248       .where(eq(orderItems.orderId, id));
                 ~~


server/routes/orders/orders.routes.ts:267:16 - error TS7030: Not all code paths return a value.

267   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:272:44 - error TS7006: Parameter 'item' implicitly has an 'any' type.

272     const menuItemIds = orderItemsData.map(item => item.menuItemId);
                                               ~~~~

server/routes/orders/orders.routes.ts:290:48 - error TS7006: Parameter 'item' implicitly has an 'any' type.

290     const itemsWithPrices = orderItemsData.map(item => {
                                                   ~~~~

server/routes/orders/orders.routes.ts:296:26 - error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

296       const totalPrice = menuItem.price * item.quantity;
                             ~~~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:326:52 - error TS7006: Parameter 'item' implicitly has an 'any' type.

326     const orderItemsToInsert = itemsWithPrices.map(item => ({
                                                       ~~~~

server/routes/orders/orders.routes.ts:327:16 - error TS18048: 'newOrder' is possibly 'undefined'.

327       orderId: newOrder.id,
                   ~~~~~~~~

server/routes/orders/orders.routes.ts:339:16 - error TS18048: 'newOrder' is possibly 'undefined'.

339       orderId: newOrder.id,
                   ~~~~~~~~

server/routes/orders/orders.routes.ts:359:37 - error TS2322: Type '"staff"' is not assignable to type 'AppRole'.

359   requireRoles(['admin', 'manager', 'staff']),
                                        ~~~~~~~

server/routes/orders/orders.routes.ts:363:16 - error TS7030: Not all code paths return a value.

363   asyncHandler(async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/orders/orders.routes.ts:374:14 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'number | SQLWrapper'.
      Type 'undefined' is not assignable to type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | undefined>, right: string | SQLWrapper | undefined): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | undefined>'.
      Type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | undefined>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

374       .where(eq(orders.id, id))
                 ~~


server/routes/orders/orders.routes.ts:414:48 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

414         totalRevenue: sql<number>`sum(${orders.totalAmount})`
                                                   ~~~~~~~~~~~

server/routes/permissions.routes.ts:8:74 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

8 router.get('/users/:userId/permissions', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                           ~~~~~~~~~~~

server/routes/permissions.routes.ts:25:74 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

25 router.put('/users/:userId/permissions', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                            ~~~~~~~~~~~

server/routes/permissions.routes.ts:43:69 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

43 router.put('/users/:userId/status', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                       ~~~~~~~~~~~

server/routes/permissions.routes.ts:61:58 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

61 router.get('/available', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                            ~~~~~~~~~~~

server/routes/permissions.routes.ts:136:47 - error TS7030: Not all code paths return a value.

136 router.get('/user/:userId', authenticateUser, async (req, res) => {
                                                  ~~~~~~~~~~~~~~~~~~~~~

server/routes/permissions.routes.ts:161:61 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

161 router.put('/user/:userId', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                ~~~~~~~~~~~

server/routes/permissions.routes.ts:161:76 - error TS7030: Not all code paths return a value.

161 router.put('/user/:userId', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                                               ~~~~~~~~~~~~~~~~~~~~~

server/routes/permissions.routes.ts:192:54 - error TS2322: Type '"directeur"' is not assignable to type 'AppRole'.

192 router.get('/roles', authenticateUser, requireRoles(['directeur']), async (req, res) => {
                                                         ~~~~~~~~~~~

server/routes/permissions.ts:19:65 - error TS2307: Cannot find module '@custom-types' or its corresponding type declarations.

19 import type { Permission, ApiResponse, PaginatedResponse } from '@custom-types';
                                                                   ~~~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:71:7 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'number | SQL<unknown> | Placeholder<string, any> | null | undefined'.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }[]'.

71       userId: userId.toString(),
         ~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:28:101
     28 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     29     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ... 
     35     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     36 } & {};
        ~
    The expected type comes from property 'userId' which is declared here on type '{ action: string | SQL<unknown> | Placeholder<string, any>; entity: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 5 more ...; userAgent?: string | ... 3 more ... | undefined; }'

server/routes/tables/tables.routes.ts:141:7 - error TS2740: Type 'Omit<PgSelectBase<"tables", { id: PgColumn<{ name: "id"; tableName: "tables"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColu...' is missing the following properties from type 'PgSelectBase<"tables", { id: PgColumn<{ name: "id"; tableName: "tables"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<.....': config, joinsNotNullableMap, tableName, isPartialSelect, and 5 more.

141       query = query.where(and(...conditions));
          ~~~~~

server/routes/tables/tables.routes.ts:151:5 - error TS2740: Type 'Omit<PgSelectBase<"tables", { id: PgColumn<{ name: "id"; tableName: "tables"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColu...' is missing the following properties from type 'PgSelectBase<"tables", { id: PgColumn<{ name: "id"; tableName: "tables"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<.....': config, joinsNotNullableMap, tableName, isPartialSelect, and 5 more.

151     query = sortOrder === 'desc' ?
        ~~~~~

server/routes/tables/tables.routes.ts:158:21 - error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

158     const offset = (pageNum - 1) * limitNum;
                        ~~~~~~~

server/routes/tables/tables.routes.ts:158:36 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

158     const offset = (pageNum - 1) * limitNum;
                                       ~~~~~~~~

server/routes/tables/tables.routes.ts:159:42 - error TS2345: Argument of type 'number | string[] | ParsedQs | ParsedQs[]' is not assignable to parameter of type 'number | Placeholder<string, any>'.
  Type 'string[]' is not assignable to type 'number | Placeholder<string, any>'.

159     const tablesData = await query.limit(limitNum).offset(offset);
                                             ~~~~~~~~

server/routes/tables/tables.routes.ts:162:14 - error TS2339: Property 'count' does not exist on type '{ count: number; } | undefined'.

162     const [{ count }] = await db
                 ~~~~~

server/routes/tables/tables.routes.ts:180:39 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

180         totalPages: Math.ceil(count / limit)
                                          ~~~~~

server/routes/tables/tables.routes.ts:256:11 - error TS2322: Type '{ id: number; number: number; capacity: number; location: string | null; section: string | null; status: "available" | "maintenance" | "occupied" | "reserved"; currentReservation: { ...; } | undefined; nextReservation: { ...; } | undefined; }[]' is not assignable to type 'TableStatus[]'.
  Type '{ id: number; number: number; capacity: number; location: string | null; section: string | null; status: "available" | "maintenance" | "occupied" | "reserved"; currentReservation: { ...; } | undefined; nextReservation: { ...; } | undefined; }' is not assignable to type 'TableStatus' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'location' are incompatible.
      Type 'string | null' is not assignable to type 'string'.
        Type 'null' is not assignable to type 'string'.

256     const tableStatuses: TableStatus[] = allTables.map(table => {
              ~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:354:7 - error TS18048: 'newTable' is possibly 'undefined'.

354       newTable.id.toString()
          ~~~~~~~~

server/routes/tables/tables.routes.ts:358:16 - error TS18048: 'newTable' is possibly 'undefined'.

358       tableId: newTable.id,
                   ~~~~~~~~

server/routes/tables/tables.routes.ts:383:25 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

383     const id = parseInt(req.params.id, 10);
                            ~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:392:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

392       return res.status(404).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:409:9 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

409         return res.status(409).json({
            ~~~~~~

server/routes/tables/tables.routes.ts:430:30 - error TS18048: 'updatedTable' is possibly 'undefined'.

430       `Table mise à jour: #${updatedTable.number} - ${Object.keys(req.body).join(', ')}`,
                                 ~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:432:7 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

432       id
          ~~

server/routes/tables/tables.routes.ts:459:25 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

459     const id = parseInt(req.params.id, 10);
                            ~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:469:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

469       return res.status(404).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:480:9 - error TS2353: Object literal may only specify known properties, and 'notes' does not exist in type '{ number?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; capacity?: number | SQL<...> | PgColumn<...> | undefined; ... 8 more ...; features?: unknown; }'.

480         notes,
            ~~~~~

server/routes/tables/tables.routes.ts:492:7 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

492       id
          ~~

server/routes/tables/tables.routes.ts:521:25 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

521     const id = parseInt(req.params.id, 10);
                            ~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:525:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

525       return res.status(400).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:538:30 - error TS2339: Property 'reservationTime' does not exist on type 'PgTableWithColumns<{ name: "reservations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "reservations"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 9 more ...; updatedAt: PgColumn<...>; }; d...'.

538           sql`${reservations.reservationTime} > NOW()`,
                                 ~~~~~~~~~~~~~~~

server/routes/tables/tables.routes.ts:545:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

545       return res.status(400).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:562:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

562       return res.status(404).json({
          ~~~~~~

server/routes/tables/tables.routes.ts:574:7 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

574       id
          ~~

server/routes/user-profile.ts:211:7 - error TS2375: Type '{ id: number; username: string; email: string; firstName: string; lastName: string; phone: string | undefined; role: string; isActive: boolean; createdAt: string; updatedAt: string; avatarUrl: undefined; }' is not assignable to type 'UserProfile' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'phone' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

211       return {
          ~~~~~~

server/routes/user-profile.ts:242:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

242         totalAmount: orders.totalAmount,
                                ~~~~~~~~~~~

server/routes/user-profile.ts:280:11 - error TS2532: Object is possibly 'undefined'.

280           itemCounts[item.id].count++;
              ~~~~~~~~~~~~~~~~~~~

server/routes/user-profile.ts:281:43 - error TS2532: Object is possibly 'undefined'.

281           if (new Date(order.createdAt) > itemCounts[item.id].lastOrdered) {
                                              ~~~~~~~~~~~~~~~~~~~

server/routes/user-profile.ts:282:13 - error TS2532: Object is possibly 'undefined'.

282             itemCounts[item.id].lastOrdered = new Date(order.createdAt);
                ~~~~~~~~~~~~~~~~~~~

server/routes/user-profile.ts:349:29 - error TS2339: Property 'totalAmount' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

349         totalAmount: orders.totalAmount,
                                ~~~~~~~~~~~

server/routes/user-profile.ts:361:23 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<"orders", { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt: PgColu...'.

361         query = query.where(eq(orders.status, filters.status));
                          ~~~~~

server/routes/user-profile.ts:361:29 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>, right: "cancelled" | ... 4 more ... | "ready"): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '"cancelled" | "pending" | "delivered" | SQLWrapper | "preparing" | "ready"'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "status"; tableName: "orders"; dataType: "string"; columnType: "PgEnumColumn"; data: "cancelled" | "pending" | "delivered" | "preparing" | "ready"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

361         query = query.where(eq(orders.status, filters.status));
                                ~~


server/routes/user-profile.ts:365:23 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<"orders", { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt: PgColu...'.

365         query = query.where(gte(orders.createdAt, new Date(filters.from)));
                          ~~~~~

server/routes/user-profile.ts:369:23 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<"orders", { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt: PgColu...'.

369         query = query.where(lte(orders.createdAt, new Date(filters.to)));
                          ~~~~~

server/routes/user-profile.ts:403:9 - error TS2322: Type '{ id: number; orderNumber: string; totalAmount: number; status: "cancelled" | "completed" | "pending" | "processing"; items: { id: number; name: string; quantity: number; price: number; specialRequests?: string; }[]; createdAt: string; updatedAt: string; deliveryAddress: { ...; } | undefined; }[]' is not assignable to type 'OrderHistory[]'.
  Type '{ id: number; orderNumber: string; totalAmount: number; status: "pending" | "processing" | "completed" | "cancelled"; items: Array<{ id: number; name: string; quantity: number; price: number; specialRequests?: string; }>; createdAt: string; updatedAt: string; deliveryAddress: { ...; } | undefined; }' is not assignable to type 'OrderHistory' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'deliveryAddress' are incompatible.
      Type '{ id: any; title: any; street: any; city: any; postalCode: any; country: any; } | undefined' is not assignable to type 'Address'.
        Type 'undefined' is not assignable to type 'Address'.

403         orders: ordersWithAddresses.map(order => ({
            ~~~~~~

  server/routes/user-profile.ts:341:15
    341   ): Promise<{orders: OrderHistory[], total: number}> {
                      ~~~~~~
    The expected type comes from property 'orders' which is declared here on type '{ orders: OrderHistory[]; total: number; }'

server/routes/user-profile.ts:494:9 - error TS2740: Type '{ [x: string]: any; }' is missing the following properties from type 'Address': id, title, street, city, and 3 more.

494         address = updated;
            ~~~~~~~

server/routes/user-profile.ts:606:9 - error TS2353: Object literal may only specify known properties, and 'avatarUrl' does not exist in type '{ username?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; password?: string | SQL<...> | PgColumn<...> | undefined; ... 10 more ...; updatedAt?: Date | ... 2 more ... | undefined; }'.

606         avatarUrl: avatarUrl ?? null,
            ~~~~~~~~~

server/routes/user-profile.ts:629:32 - error TS2339: Property 'avatarUrl' does not exist on type '{ id: number; email: string; username: string; password: string; firstName: string | null; lastName: string | null; phone: string | null; role: string; isActive: boolean; permissions: string[] | null; lastLoginAt: Date | null; createdAt: Date; updatedAt: Date; }'.

629         avatarUrl: updatedUser.avatarUrl ?? undefined
                                   ~~~~~~~~~

server/routes/user-profile.ts:698:9 - error TS2412: Type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to type 'string | undefined' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

698       { status, from, to }
            ~~~~~~

server/routes/user-profile.ts:698:17 - error TS2412: Type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to type 'string | undefined' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

698       { status, from, to }
                    ~~~~

server/routes/user-profile.ts:698:23 - error TS2412: Type 'string | string[] | ParsedQs | ParsedQs[] | undefined' is not assignable to type 'string | undefined' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

698       { status, from, to }
                          ~~

server/routes/user-profile.ts:736:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

736       return res.status(401).json({ success: false, message: 'Utilisateur non authentifié' });
          ~~~~~~

server/routes/user-profile.ts:749:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

749       return res.status(400).json({ success: false, message: 'Requête invalide' });
          ~~~~~~

server/routes/user-profile.ts:761:7 - error TS2322: Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

761       return res.status(400).json({ success: false, message: 'Requête invalide' });
          ~~~~~~

server/routes/users/users.routes.ts:140:7 - error TS2740: Type 'Omit<PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; lastLoginAt: PgColu...' is missing the following properties from type 'PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; lastLoginAt: PgColumn<.....': config, joinsNotNullableMap, tableName, isPartialSelect, and 5 more.

140       query = query.where(and(...conditions));
          ~~~~~

server/routes/users/users.routes.ts:151:5 - error TS2740: Type 'Omit<PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; lastLoginAt: PgColu...' is missing the following properties from type 'PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; lastLoginAt: PgColumn<.....': config, joinsNotNullableMap, tableName, isPartialSelect, and 5 more.

151     query = sortOrder === 'desc' ?
        ~~~~~

server/routes/users/users.routes.ts:224:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

224       return res.status(404).json({
          ~~~~~~

server/routes/users/users.routes.ts:236:29 - error TS2339: Property 'userId' does not exist on type 'PgTableWithColumns<{ name: "customers"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "customers"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColu...'.

236         .where(eq(customers.userId, id));
                                ~~~~~~

server/routes/users/users.routes.ts:286:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

286       return res.status(409).json({
          ~~~~~~

server/routes/users/users.routes.ts:320:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { email: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<...>; ... 8 more ...; loyaltyPoints?: number | ... 2 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to type 'number | SQL<unknown> | Placeholder<string, any> | undefined'.
  Overload 2 of 2, '(values: { email: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<...>; ... 8 more ...; loyaltyPoints?: number | ... 2 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '{ email: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<...>; ... 8 more ...; loyaltyPoints?: number | ... 2 more ... | undefined; }[]'.

320         id: crypto.randomUUID(),
            ~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:28:101
     28 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     29     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ... 
     35     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     36 } & {};
        ~
    The expected type comes from property 'id' which is declared here on type '{ email: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<...>; ... 8 more ...; loyaltyPoints?: number | ... 2 more ... | undefined; }'

server/routes/users/users.routes.ts:385:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

385       return res.status(404).json({
          ~~~~~~

server/routes/users/users.routes.ts:402:9 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

402         return res.status(409).json({
            ~~~~~~

server/routes/users/users.routes.ts:429:9 - error TS18048: 'updatedUser' is possibly 'undefined'.

429     if (updatedUser.role === 'customer') {
            ~~~~~~~~~~~

server/routes/users/users.routes.ts:433:11 - error TS2322: Type 'string | null' is not assignable to type 'string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.
  Type 'null' is not assignable to type 'string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.

433           firstName: updatedUser.firstName,
              ~~~~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/update.d.ts:27:57
    27 export type PgUpdateSetSource<TTable extends PgTable> = {
                                                               ~
    28     [Key in keyof TTable['$inferInsert']]?: GetColumnData<TTable['_']['columns'][Key]> | SQL | PgColumn | undefined;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    29 } & {};
       ~
    The expected type comes from property 'firstName' which is declared here on type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; firstName?: string | SQL<...> | PgColumn<...> | undefined; ... 9 more ...; loyaltyPoints?: number | ... 2 more ... | undefined; }'

server/routes/users/users.routes.ts:433:22 - error TS18048: 'updatedUser' is possibly 'undefined'.

433           firstName: updatedUser.firstName,
                         ~~~~~~~~~~~

server/routes/users/users.routes.ts:434:11 - error TS2322: Type 'string | null' is not assignable to type 'string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.
  Type 'null' is not assignable to type 'string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined'.

434           lastName: updatedUser.lastName,
              ~~~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/update.d.ts:27:57
    27 export type PgUpdateSetSource<TTable extends PgTable> = {
                                                               ~
    28     [Key in keyof TTable['$inferInsert']]?: GetColumnData<TTable['_']['columns'][Key]> | SQL | PgColumn | undefined;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    29 } & {};
       ~
    The expected type comes from property 'lastName' which is declared here on type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; firstName?: string | SQL<...> | PgColumn<...> | undefined; ... 9 more ...; loyaltyPoints?: number | ... 2 more ... | undefined; }'

server/routes/users/users.routes.ts:434:21 - error TS18048: 'updatedUser' is possibly 'undefined'.

434           lastName: updatedUser.lastName,
                        ~~~~~~~~~~~

server/routes/users/users.routes.ts:435:18 - error TS18048: 'updatedUser' is possibly 'undefined'.

435           email: updatedUser.email,
                     ~~~~~~~~~~~

server/routes/users/users.routes.ts:436:18 - error TS18048: 'updatedUser' is possibly 'undefined'.

436           phone: updatedUser.phone,
                     ~~~~~~~~~~~

server/routes/users/users.routes.ts:439:29 - error TS2339: Property 'userId' does not exist on type 'PgTableWithColumns<{ name: "customers"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "customers"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColu...'.

439         .where(eq(customers.userId, id));
                                ~~~~~~

server/routes/users/users.routes.ts:492:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

492       return res.status(404).json({
          ~~~~~~

server/routes/users/users.routes.ts:499:39 - error TS2304: Cannot find name 'password'.

499     const hashedPassword = await hash(password, 12);
                                          ~~~~~~~~

server/routes/users/users.routes.ts:553:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

553       return res.status(400).json({
          ~~~~~~

server/routes/users/users.routes.ts:574:7 - error TS2322: Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

574       return res.status(404).json({
          ~~~~~~

server/routes/users/users.routes.ts:617:34 - error TS2551: Property 'active' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>;...'. Did you mean 'isActive'?

617       .groupBy(users.role, users.active);
                                     ~~~~~~

server/routes/users/users.routes.ts:625:9 - error TS2532: Object is possibly 'undefined'.

625         acc[stat.role].total += stat.count;
            ~~~~~~~~~~~~~~

server/routes/users/users.routes.ts:627:11 - error TS2532: Object is possibly 'undefined'.

627           acc[stat.role].active += stat.count;
              ~~~~~~~~~~~~~~

server/routes/users/users.routes.ts:629:11 - error TS2532: Object is possibly 'undefined'.

629           acc[stat.role].inactive += stat.count;
              ~~~~~~~~~~~~~~

server/services/ai-automation.service.ts:525:33 - error TS2339: Property 'stock' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'.

525         currentStock: menuItems.stock || 0,
                                    ~~~~~

server/services/ai-automation.service.ts:527:80 - error TS2339: Property 'stock' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'.

527         daysRemaining: sql`CASE WHEN AVG(orders.quantity) > 0 THEN ${menuItems.stock || 0} / AVG(orders.quantity) ELSE 999 END`
                                                                                   ~~~~~

server/services/ai-automation.service.ts:530:58 - error TS2339: Property 'stock' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'.

530         .groupBy(menuItems.id, menuItems.name, menuItems.stock)
                                                             ~~~~~

server/services/ai-automation.service.ts:587:29 - error TS2551: Property 'category' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'. Did you mean 'categoryId'?

587         category: menuItems.category,
                                ~~~~~~~~

server/services/ai-automation.service.ts:598:41 - error TS2339: Property 'itemId' does not exist on type 'PgTableWithColumns<{ name: "orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "orders"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 13 more ...; updatedAt: PgColumn<......'.

598         .innerJoin(menuItems, eq(orders.itemId, menuItems.id))
                                            ~~~~~~

server/services/ai-automation.service.ts:599:28 - error TS2551: Property 'category' does not exist on type 'PgTableWithColumns<{ name: "menu_items"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "menu_items"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 16 more ...; updatedAt: PgCo...'. Did you mean 'categoryId'?

599         .groupBy(menuItems.category)
                               ~~~~~~~~

server/types/auth.ts:26:7 - error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type 'AuthUser | undefined', but here has type 'AuthenticatedUser | undefined'.

26       user?: AuthenticatedUser;
         ~~~~

  server/middleware/auth.ts:415:7
    415       user?: AuthUser;
              ~~~~
    'user' was also declared here.

server/types/auth.ts:89:14 - error TS2741: Property 'staff' is missing in type '{ customer: string[]; waiter: string[]; serveur: string[]; chef: string[]; cuisinier: string[]; employe: string[]; employee: string[]; manager: string[]; directeur: string[]; admin: string[]; }' but required in type 'Record<AppRole, string[]>'.

89 export const ROLE_PERMISSIONS: Record<AppRole, string[]> = {
                ~~~~~~~~~~~~~~~~

server/types/auth.ts:171:14 - error TS2741: Property 'staff' is missing in type '{ customer: number; waiter: number; serveur: number; chef: number; cuisinier: number; employe: number; employee: number; manager: number; directeur: number; admin: number; }' but required in type 'Record<AppRole, number>'.

171 export const ROLE_HIERARCHY: Record<AppRole, number> = {
                 ~~~~~~~~~~~~~~

server/types/auth.ts:187:7 - error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type 'AuthUser | undefined', but here has type 'AuthenticatedUser | undefined'.

187       user?: AuthenticatedUser;
          ~~~~

  server/middleware/auth.ts:415:7
    415       user?: AuthUser;
              ~~~~
    'user' was also declared here.


Found 933 errors in 127 files.
