

client/src/components/admin/user-profile-enhanced-optimized.tsx:419:13 - error TS2339: Property 'success' does not exist on type '(props: ToastProps) => void'.

419       toast.success('Importation des profils réussie');
                ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:421:13 - error TS2339: Property 'error' does not exist on type '(props: ToastProps) => void'.

421       toast.error('Échec de l\'importation');
                ~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:443:7 - error TS2448: Block-scoped variable 'paginatedUsers' used before its declaration.

443   }, [paginatedUsers, selectedUsers.length]);
          ~~~~~~~~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:490:9
    490   const paginatedUsers = sortedUsers.slice(
                ~~~~~~~~~~~~~~
    'paginatedUsers' is declared here.

client/src/components/admin/user-profile-enhanced-optimized.tsx:443:7 - error TS2454: Variable 'paginatedUsers' is used before being assigned.

443   }, [paginatedUsers, selectedUsers.length]);
          ~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:447:5 - error TS2353: Object literal may only specify known properties, and 'content' does not exist in type 'UseReactToPrintOptions'.

447     content: () => printRef.current,
        ~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:558:7 - error TS2375: Type '{ firstName: string; lastName: string; preferences: { currency: string; allergens: string[]; emailNotifications: boolean; smsNotifications: boolean; promotionalEmails: boolean; dietaryRestrictions: string[]; language: string; favoriteTable?: number | undefined; }; ... 5 more ...; postalCode?: string | undefined; }' is not assignable to type 'Partial<UserProfile>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'email' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

558       updates: values
          ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:304:44
    304     mutationFn: async (data: { id: number; updates: Partial<UserProfile> }) => {
                                                   ~~~~~~~
    The expected type comes from property 'updates' which is declared here on type '{ id: number; updates: Partial<UserProfile>; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:568:9 - error TS2375: Type '{ type: "other" | "home" | "work"; city: string; postalCode: string; street: string; country: string; isDefault?: boolean | undefined; }' is not assignable to type 'Partial<Address>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'isDefault' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

568         updates: values
            ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:339:51
    339     mutationFn: async (data: { addressId: number; updates: Partial<Address> }) => {
                                                          ~~~~~~~
    The expected type comes from property 'updates' which is declared here on type '{ addressId: number; updates: Partial<Address>; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:573:9 - error TS2322: Type '{ type: "other" | "home" | "work"; city: string; postalCode: string; street: string; country: string; isDefault?: boolean | undefined; }' is not assignable to type 'Omit<Address, "id">'.
  Types of property 'isDefault' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

573         address: values
            ~~~~~~~

  client/src/components/admin/user-profile-enhanced-optimized.tsx:323:48
    323     mutationFn: async (data: { userId: number; address: Omit<Address, 'id'> }) => {
                                                       ~~~~~~~
    The expected type comes from property 'address' which is declared here on type '{ userId: number; address: Omit<Address, "id">; }'

client/src/components/admin/user-profile-enhanced-optimized.tsx:619:36 - error TS2339: Property 'canImport' does not exist on type '{ permissions: Permission[]; userRole: UserRole | null; loading: boolean; error: string | null; hasPermission: (module: ModuleName, action: PermissionAction) => boolean; ... 10 more ...; getUserAccessLevel: () => "admin" | ... 2 more ... | "basic"; }'.

619             disabled={!permissions.canImport || isImporting}
                                       ~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:628:36 - error TS2339: Property 'canExport' does not exist on type '{ permissions: Permission[]; userRole: UserRole | null; loading: boolean; error: string | null; hasPermission: (module: ModuleName, action: PermissionAction) => boolean; ... 10 more ...; getUserAccessLevel: () => "admin" | ... 2 more ... | "basic"; }'.

628             disabled={!permissions.canExport || exporting}
                                       ~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:634:12 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?

634           {permissions.canCreate && (
               ~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:874:18 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?

874                 {permissions.canEdit && (
                     ~~~~~~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:887:18 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?

887                 {permissions.canDelete && (
                     ~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:1650:24 - error TS2375: Type '{ checked: boolean | undefined; onCheckedChange: (...event: any[]) => void; }' is not assignable to type 'SwitchProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'.

1650                       <Switch
                            ~~~~~~

client/src/components/admin/user-profile-enhanced-optimized.tsx:1683:9 - error TS2322: Type '{ open: boolean; onOpenChange: (open: boolean) => false | void; title: string; message: string; confirmText: string; onConfirm: () => void; loading: boolean; }' is not assignable to type 'IntrinsicAttributes & ConfirmationDialogProps'.
  Property 'message' does not exist on type 'IntrinsicAttributes & ConfirmationDialogProps'.

1683         message="Êtes-vous sûr de vouloir supprimer cette adresse ? Cette action est irréversible."
             ~~~~~~~

client/src/components/admin/work-schedule.tsx:3:31 - error TS2307: Cannot find module 'react-error-boundary' or its corresponding type declarations.

3 import { ErrorBoundary } from 'react-error-boundary';
                                ~~~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule.tsx:46:21 - error TS2339: Property 'isLoading' does not exist on type '{ permissions: Permission[]; userRole: UserRole | null; loading: boolean; error: string | null; hasPermission: (module: ModuleName, action: PermissionAction) => boolean; ... 10 more ...; getUserAccessLevel: () => "admin" | ... 2 more ... | "basic"; }'.

46   const { userRole, isLoading: isPermissionsLoading } = usePermissions();
                       ~~~~~~~~~

client/src/components/admin/work-schedule.tsx:85:15 - error TS2322: Type 'UserRole | "employe"' is not assignable to type '"directeur" | "employe"'.
  Type '"employee"' is not assignable to type '"directeur" | "employe"'. Did you mean '"employe"'?

85               userRole={userRole || 'employe'}
                 ~~~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:295:3
    295   userRole: 'directeur' | 'employe';
          ~~~~~~~~
    The expected type comes from property 'userRole' which is declared here on type 'IntrinsicAttributes & WorkScheduleProps'

client/src/components/admin/work-schedule.tsx:86:15 - error TS2322: Type '"full" | "personal" | "team"' is not assignable to type 'ViewMode'.
  Type '"full"' is not assignable to type 'ViewMode'.

86               viewMode={viewMode}
                 ~~~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:298:3
    298   viewMode?: ViewMode;
          ~~~~~~~~
    The expected type comes from property 'viewMode' which is declared here on type 'IntrinsicAttributes & WorkScheduleProps'

client/src/components/admin/work-schedule/WorkSchedule.tsx:59:5 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

59     start: dateRange.start,
       ~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:60:5 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

60     end: dateRange.end
       ~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:66:5 - error TS2339: Property 'selectedEmployeeData' does not exist on type '{ selectedShift: Shift | null; selectedEmployee: Employee | null; selectedDate: string; viewMode: ViewMode; timePeriod: TimePeriod; filters: ScheduleFilter; ... 24 more ...; setIsEditingShift: Dispatch<...>; }'.

66     selectedEmployeeData,
       ~~~~~~~~~~~~~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:67:5 - error TS2339: Property 'viewModeState' does not exist on type '{ selectedShift: Shift | null; selectedEmployee: Employee | null; selectedDate: string; viewMode: ViewMode; timePeriod: TimePeriod; filters: ScheduleFilter; ... 24 more ...; setIsEditingShift: Dispatch<...>; }'.

67     viewModeState,
       ~~~~~~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:87:7 - error TS2322: Type '{ start: string | undefined; end: string | undefined; }' is not assignable to type '{ start: string; end: string; }'.
  Types of property 'start' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

87       dateRange
         ~~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:97:55 - error TS2339: Property 'conflicts' does not exist on type '{ isValid: boolean; errors: string[]; } | { isValid: boolean; conflicts: never[]; warnings: string[]; suggestions: never[]; }'.
  Property 'conflicts' does not exist on type '{ isValid: boolean; errors: string[]; }'.

97       console.error('Validation échouée:', validation.conflicts);
                                                         ~~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:119:26 - error TS2345: Argument of type '{ id: number; firstName: string; lastName: string; position: string; department: string; isActive: boolean; }' is not assignable to parameter of type 'Employee'.
  Type '{ id: number; firstName: string; lastName: string; position: string; department: string; isActive: boolean; }' is missing the following properties from type 'Employee': email, phone, salary, hireDate, and 3 more.

119     handleEmployeeSelect(employee);
                             ~~~~~~~~

client/src/components/admin/work-schedule/WorkSchedule.tsx:162:11 - error TS2322: Type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Shift[]' is not assignable to type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Shift[]'.
  Type 'Shift' is missing the following properties from type 'Shift': hourlyRate, totalHours, totalPay, isRecurring

162           shifts={filteredShifts}
              ~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:312:3
    312   shifts: Shift[];
          ~~~~~~
    The expected type comes from property 'shifts' which is declared here on type 'IntrinsicAttributes & CalendarViewProps'

client/src/components/admin/work-schedule/WorkSchedule.tsx:174:11 - error TS2322: Type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Shift[]' is not assignable to type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Shift[]'.
  Type 'Shift' is missing the following properties from type 'Shift': hourlyRate, totalHours, totalPay, isRecurring

174           shifts={filteredShifts}
              ~~~~~~

  client/src/components/admin/work-schedule/types/schedule.types.ts:322:3
    322   shifts: Shift[];
          ~~~~~~
    The expected type comes from property 'shifts' which is declared here on type 'IntrinsicAttributes & ShiftListViewProps'

client/src/components/admin/work-schedule/WorkSchedule.tsx:186:11 - error TS2322: Type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/utils/schedule.utils").Shift[]' is not assignable to type 'import("/home/runner/workspace/client/src/components/admin/work-schedule/types/schedule.types").Shift[]'.
  Type 'Shift' is missing the following properties from type 'Shift': hourlyRate, totalHours, totalPay, isRecurring

186           shifts={filteredShifts}