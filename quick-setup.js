#!/usr/bin/env node

// Configuration SQLite simple pour Barista Caf√©
import { writeFileSync, existsSync } from 'fs';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);

async function setupSQLite() {
  console.log('üöÄ Configuration rapide SQLite pour Barista Caf√©');
  
  // Cr√©er le fichier .env optimis√©
  const envConfig = `# Configuration SQLite Production - Barista Caf√©
DATABASE_URL=file:./barista_cafe.db
DB_TYPE=sqlite

# Configuration Application
NODE_ENV=production
JWT_SECRET=barista_cafe_production_jwt_secret_2025_ultra_secure
PORT=5000

# Configuration Performance
CACHE_TTL_MENU=600
CACHE_TTL_CATEGORIES=1800
CACHE_TTL_TABLES=300
`;

  writeFileSync('.env', envConfig);
  console.log('‚úÖ Configuration .env cr√©√©e');
  
  // Appliquer les migrations
  try {
    console.log('üîÑ Application des migrations...');
    await execAsync('npx drizzle-kit push');
    console.log('‚úÖ Migrations appliqu√©es');
  } catch (error) {
    console.log('‚ö†Ô∏è Migrations √©chou√©es, continuons...');
  }
  
  // Initialiser les donn√©es
  try {
    console.log('üìä Initialisation des donn√©es...');
    await execAsync('npx tsx scripts/init-database.ts');
    console.log('‚úÖ Donn√©es initialis√©es');
  } catch (error) {
    console.log('‚ö†Ô∏è Initialisation donn√©es √©chou√©e, continuons...');
  }
  
  console.log('üéâ Configuration termin√©e!');
  console.log('');
  console.log('üîê Compte admin: admin / admin123');
  console.log('üåê URL: http://localhost:5000');
  console.log('');
  console.log('‚ñ∂Ô∏è D√©marrer avec: npm run dev');
}

setupSQLite().catch(console.error);